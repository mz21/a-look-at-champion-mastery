{"version":3,"sources":["webpack:///static/3.27f615a06ccea965c5bb.js","webpack:///OverviewMasteryPlateau.vue","webpack:///./src/components/OverviewMasteryPlateau.vue?8d47","webpack:///./~/d3/d3.js","webpack:///./src/components/OverviewMasteryPlateau.vue?1185","webpack:///./src/assets/data/winRatesByMastery.json","webpack:///./src/components/OverviewMasteryPlateau.vue?cca5","webpack:///./src/components/OverviewMasteryPlateau.vue"],"names":["webpackJsonp","143","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_d","_d2","data","show_note","methods","show_methods","this","create_win_rate_chart","margin","width","height","xScale","scale","linear","domain","range","yScale","xAxis","svg","axis","orient","tickSize","ticks","tickFormat","format","yAxis","valueline","line","x","d","mastery","y","parseInt","winRate","winRatesData","select","append","attr","call","ready","152","push","id","version","sources","names","mappings","file","sourcesContent","sourceRoot","163","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","key","prototype","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","167","content","locals","182","318","338","__vue_script__","__vue_template__","options"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAASC,EAAQC,EAASC,GAE/B,YAUA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GCaV,IAAAC,GAAAR,EAAA,KDRKS,EAAMR,EAAuBO,EAIjCT,eACEW,KAAM,WACJ,OACEC,WCMP,IDHGC,SACEC,aAAc,WACZC,KAAKH,WAAaG,KCKzBH,WDHKI,sBAAuB,WACrB,GAAIC,GCKX,GDJWC,ECKX,IDJWC,ECKX,IDJWC,EAASV,aAAYW,MCKhCC,SAAAC,QAAA,EACA,MAAAC,OAAAP,EAAAC,EACAD,IDNWQ,EAASf,aAAYW,MCOhCC,SAAAC,QAAA,GACA,KAAAC,OAAAL,EAAAF,EACAA,IDRWS,EAAQhB,aAAYiB,ICS/BC,OAAAP,MACAD,GAAAS,OACA,UAAAC,SACA,GAAAC,MACA,GAAAC,WAAAtB,aAAAuB,OACA,ODbWC,EAAQxB,aAAYiB,ICc/BC,OAAAP,MACAI,GAAAI,OACA,QAAAC,SACA,GAAAC,MACA,GAAAC,WAAAtB,aAAAuB,OACA,ODlBWE,EAAYzB,aAAYiB,ICmBnCS,OAAAC,EAAA,SAAAC,GDlBS,MAAOlB,GAAOkB,EAAEC,WCmBzBC,EAAA,SAAAF,GDjBS,MAAOb,GAAOgB,SAASH,EAAEI,YAEvBC,EAAe1C,ECkB1B,KDhBW0B,EAAMjB,aAAYkC,OAAO,2BAA2BC,OCiB/D,OAAAC,KAAA,QACA,QAAAA,KAAA,SACA,OAAAA,KAAA,iBAAA5B,EAAA,IACAC,GAAA2B,KAAA,QACA,iBDpBOnB,GAAIkB,OCqBX,KAAAC,KAAA,6BAAA3B,EAAAF,GACA,KAAA6B,KAAA,QACA,QAAAC,KAEArB,GDvBOC,EAAIkB,OCwBX,KAAAC,KAAA,yBAAA7B,EACA,QAAA6B,KAAA,QACA,QAAAC,KAEAb,GD1BOP,EAAIkB,OC2BX,QAAAC,KAAA,QACA,QAAAA,KAAA,IAAAX,EACAQ,MD1BGK,MAAO,WACLjC,KC6BLC,2BDvBMiC,IACA,SAASlD,EAAQC,EAASC,GE1DhCD,EAAAD,EAAAC,QAAAC,EAAA,KAKAD,EAAAkD,MAAAnD,EAAAoD,GAAA,oUAA2V,IAAQC,QAAA,EAAAC,SAAA,gDAAAC,SAAAC,SAAA,uHAAAC,KAAA,6BAAAC,gBAAA,yUAA8kBC,WAAA,iBFmE36BC,IACA,SAAS5D,EAAQC,EAASC,GGzEhC,GAAA2D,GAAAC,GAAA,WAQA,QAAAC,GAAAC,GACA,MAAAA,OAAAC,eAAAD,EAAAE,UAAAF,GAAAG,gBAEA,QAAAC,GAAAJ,GACA,MAAAA,OAAAC,eAAAD,EAAAC,cAAAI,aAAAL,EAAAE,UAAAF,KAAAK,aAiCA,QAAAC,GAAAC,EAAAC,GACA,MAAAA,GAAAD,EAAA,GAAAA,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,IA8DA,QAAAC,GAAApC,GACA,cAAAA,EAAAmC,KAAAnC,EAEA,QAAAqC,GAAArC,GACA,OAAAsC,MAAAtC,GA0DA,QAAAuC,GAAAC,GACA,OACAC,KAAA,SAAAR,EAAAjC,EAAA0C,EAAAC,GAGA,IAFAC,UAAAC,OAAA,IAAAH,EAAA,GACAE,UAAAC,OAAA,IAAAF,EAAAV,EAAAY,QACAF,EAAAD,GAAA,CACA,GAAAI,GAAAJ,EAAAC,IAAA,CACAH,GAAAP,EAAAa,GAAA9C,GAAA,EAAA0C,EAAAI,EAAA,EAAmDH,EAAAG,EAEnD,MAAAJ,IAEAK,MAAA,SAAAd,EAAAjC,EAAA0C,EAAAC,GAGA,IAFAC,UAAAC,OAAA,IAAAH,EAAA,GACAE,UAAAC,OAAA,IAAAF,EAAAV,EAAAY,QACAF,EAAAD,GAAA,CACA,GAAAI,GAAAJ,EAAAC,IAAA,CACAH,GAAAP,EAAAa,GAAA9C,GAAA,EAAA2C,EAAAG,EAA+CJ,EAAAI,EAAA,EAE/C,MAAAJ,KA2CA,QAAAM,GAAA/C,GACA,MAAAA,GAAA4C,OAmDA,QAAAI,GAAAjD,GAEA,IADA,GAAAkD,GAAA,EACAlD,EAAAkD,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAAC,GAAAC,EAAAC,GACA,OAAAC,KAAAD,GACApF,OAAAC,eAAAkF,EAAAG,UAAAD,GACAnF,MAAAkF,EAAAC,GACAE,YAAA,IAkBA,QAAAC,KACA/E,KAAAgF,EAAAzF,OAAA0F,OAAA,MAgCA,QAAAC,GAAAN,GACA,OAAAA,GAAA,MAAAO,IAAAP,EAAA,KAAAQ,MAAAR,IAEA,QAAAS,GAAAT,GACA,OAAAA,GAAA,SAAAQ,GAAAR,EAAAU,MAAA,GAAAV,EAEA,QAAAW,GAAAX,GACA,MAAAM,GAAAN,IAAA5E,MAAAgF,EAEA,QAAAQ,GAAAZ,GACA,OAAAA,EAAAM,EAAAN,KAAA5E,MAAAgF,SAAAhF,MAAAgF,EAAAJ,GAEA,QAAAa,KACA,GAAAC,KACA,QAAAd,KAAA5E,MAAAgF,EAAAU,EAAAvD,KAAAkD,EAAAT,GACA,OAAAc,GAEA,QAAAC,KACA,GAAAC,GAAA,CACA,QAAAhB,KAAA5E,MAAAgF,IAAAY,CACA,OAAAA,GAEA,QAAAC,KACA,OAAAjB,KAAA5E,MAAAgF,EAAA,QACA,UAsEA,QAAAc,KACA9F,KAAAgF,EAAAzF,OAAA0F,OAAA,MAiBA,QAAAc,GAAAxE,GACA,MAAAA,GAOA,QAAAyE,GAAAC,EAAAC,EAAAC,GACA,kBACA,GAAA1G,GAAA0G,EAAAC,MAAAF,EAAAhC,UACA,OAAAzE,KAAAyG,EAAAD,EAAAxG,GAGA,QAAA4G,GAAAC,EAAAC,GACA,GAAAA,IAAAD,GAAA,MAAAC,EACAA,KAAAC,OAAA,GAAAC,cAAAF,EAAAjB,MAAA,EACA,QAAAoB,GAAA,EAAAC,EAAAC,GAAAzC,OAAiDwC,EAAAD,IAAOA,EAAA,CACxD,GAAAG,GAAAD,GAAAF,GAAAH,CACA,IAAAM,IAAAP,GAAA,MAAAO,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAC,KAEA,IADA,GAAAC,GAAAC,EAAAC,EAAAX,EAAA,GAAAC,EAAAS,EAAAjD,SACAuC,EAAAC,IAAAQ,EAAAC,EAAAV,GAAAY,KAAAH,EAAAf,MAAApG,KAAAkE,UACA,OAAA+C,GAJA,GAAAI,MAAAE,EAAA,GAAAxC,EAmBA,OAbAmC,GAAAI,GAAA,SAAAf,EAAAiB,GACA,GAAAd,GAAAS,EAAAI,EAAAE,IAAAlB,EACA,OAAArC,WAAAC,OAAA,EAAAgD,KAAAG,IACAH,IACAA,EAAAG,GAAA,KACAD,IAAA/B,MAAA,EAAAoB,EAAAW,EAAAK,QAAAP,IAAAQ,OAAAN,EAAA/B,MAAAoB,EAAA,IACAa,EAAAK,OAAArB,IAEAiB,GAAAH,EAAAlF,KAAAoF,EAAAM,IAAAtB,GACAe,GAAAE,KAEAP,IAEAC,EAGA,QAAAY,KACAC,GAAAb,MAAAc,iBAEA,QAAAC,KAEA,IADA,GAAAC,GAAAC,EAAAJ,GAAAb,MACAgB,EAAAC,EAAAC,aAAAD,EAAAD,CACA,OAAAC,GAEA,QAAAE,GAAApC,GAEA,IADA,GAAAgB,GAAA,GAAAF,GAAAL,EAAA,EAAAC,EAAAzC,UAAAC,SACAuC,EAAAC,GAAAM,EAAA/C,UAAAwC,IAAAM,EAAAC,EAaA,OAZAA,GAAAqB,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,GAAAC,GAAAD,EAAAL,YAAAL,GAAAb,KACAuB,GAAAxC,SACA8B,GAAAb,MAAAuB,EACAxB,EAAAwB,EAAAE,MAAAvC,MAAAmC,EAAAC,GACS,QACTT,GAAAb,MAAAwB,KAIAzB,EAWA,QAAA2B,GAAAC,GAEA,MADAC,IAAAD,EAAAE,IACAF,EAyCA,QAAAG,GAAAC,GACA,wBAAAA,KAAA,WACA,MAAAC,IAAAD,EAAAjJ,OAgBA,QAAAmJ,GAAAF,GACA,wBAAAA,KAAA,WACA,MAAAG,IAAAH,EAAAjJ,OAkCA,QAAAqJ,GAAA9C,EAAA9G,GAEA,QAAA6J,KACAtJ,KAAAuJ,gBAAAhD,GAEA,QAAAiD,KACAxJ,KAAAyJ,kBAAAlD,EAAAmD,MAAAnD,EAAAoD,OAEA,QAAAC,KACA5J,KAAA6J,aAAAtD,EAAA9G,GAEA,QAAAqK,KACA9J,KAAA+J,eAAAxD,EAAAmD,MAAAnD,EAAAoD,MAAAlK,GAEA,QAAAuK,KACA,GAAA1I,GAAA7B,EAAA2G,MAAApG,KAAAkE,UACA,OAAA5C,EAAAtB,KAAAuJ,gBAAAhD,GAAgDvG,KAAA6J,aAAAtD,EAAAjF,GAEhD,QAAA2I,KACA,GAAA3I,GAAA7B,EAAA2G,MAAApG,KAAAkE,UACA,OAAA5C,EAAAtB,KAAAyJ,kBAAAlD,EAAAmD,MAAAnD,EAAAoD,OAAoE3J,KAAA+J,eAAAxD,EAAAmD,MAAAnD,EAAAoD,MAAArI,GAEpE,MArBAiF,GAAAwB,GAAAmC,GAAAC,QAAA5D,GAqBA,MAAA9G,EAAA8G,EAAAoD,MAAAH,EAAAF,EAAA,kBAAA7J,GAAA8G,EAAAoD,MAAAM,EAAAD,EAAAzD,EAAAoD,MAAAG,EAAAF,EAEA,QAAAQ,GAAAlC,GACA,MAAAA,GAAAmC,OAAAC,QAAA,YAmBA,QAAAC,GAAAhE,GACA,UAAAiE,QAAA,aAAAzC,GAAA0C,QAAAlE,GAAA,kBAEA,QAAAmE,GAAAnE,GACA,OAAAA,EAAA,IAAA8D,OAAAM,MAAA,SAEA,QAAAC,GAAArE,EAAA9G,GAGA,QAAAoL,KAEA,IADA,GAAAnE,GAAA,KACAA,EAAAC,GAAAJ,EAAAG,GAAA1G,KAAAP,GAEA,QAAAqL,KAEA,IADA,GAAApE,GAAA,GAAApF,EAAA7B,EAAA2G,MAAApG,KAAAkE,aACAwC,EAAAC,GAAAJ,EAAAG,GAAA1G,KAAAsB,GARAiF,EAAAmE,EAAAnE,GAAAwE,IAAAC,EACA,IAAArE,GAAAJ,EAAApC,MASA,yBAAA1E,GAAAqL,EAAAD,EAEA,QAAAG,GAAAzE,GACA,GAAA0E,GAAAV,EAAAhE,EACA,iBAAAvD,EAAAvD,GACA,GAAAyL,EAAAlI,EAAAmI,UAAA,MAAA1L,GAAAyL,EAAAE,IAAA7E,GAAA2E,EAAAtD,OAAArB,EACA,IAAA2E,GAAAlI,EAAAqI,aAAA,YACA5L,IACAwL,EAAAK,UAAA,EACAL,EAAAM,KAAAL,IAAAlI,EAAA6G,aAAA,QAAAO,EAAAc,EAAA,IAAA3E,KAEAvD,EAAA6G,aAAA,QAAAO,EAAAc,EAAAZ,QAAAW,EAAA,QAoBA,QAAAO,GAAAjF,EAAA9G,EAAAgM,GACA,QAAAC,KACA1L,KAAA2L,MAAAC,eAAArF,GAEA,QAAAsF,KACA7L,KAAA2L,MAAAG,YAAAvF,EAAA9G,EAAAgM,GAEA,QAAAM,KACA,GAAAzK,GAAA7B,EAAA2G,MAAApG,KAAAkE,UACA,OAAA5C,EAAAtB,KAAA2L,MAAAC,eAAArF,GAAqDvG,KAAA2L,MAAAG,YAAAvF,EAAAjF,EAAAmK,GAErD,aAAAhM,EAAAiM,EAAA,kBAAAjM,GAAAsM,EAAAF,EAUA,QAAAG,GAAAzF,EAAA9G,GACA,QAAAwM,WACAjM,MAAAuG,GAEA,QAAA2F,KACAlM,KAAAuG,GAAA9G,EAEA,QAAA0M,KACA,GAAA7K,GAAA7B,EAAA2G,MAAApG,KAAAkE,UACA,OAAA5C,QAAAtB,MAAAuG,GAAuCvG,KAAAuG,GAAAjF,EAEvC,aAAA7B,EAAAwM,EAAA,kBAAAxM,GAAA0M,EAAAD,EA4BA,QAAAE,GAAA7F,GACA,QAAAtB,KACA,GAAA/B,GAAAlD,KAAAiD,cAAAoJ,EAAArM,KAAAsM,YACA,OAAAD,KAAAE,IAAArJ,EAAAC,gBAAAmJ,eAAAC,GAAArJ,EAAAsJ,cAAAjG,GAAArD,EAAAuJ,gBAAAJ,EAAA9F,GAEA,QAAAmG,KACA,MAAA1M,MAAAiD,cAAAwJ,gBAAAlG,EAAAmD,MAAAnD,EAAAoD,OAEA,wBAAApD,QAAAwB,GAAAmC,GAAAC,QAAA5D,IAAAoD,MAAA+C,EAAAzH,EAYA,QAAA0H,KACA,GAAAC,GAAA5M,KAAA6M,UACAD,MAAAE,YAAA9M,MAmFA,QAAA+M,GAAAnN,GACA,OACAoN,SAAApN,GAoBA,QAAAqN,GAAAhE,GACA,kBACA,MAAAiE,IAAAlN,KAAAiJ,IAmBA,QAAAkE,GAAAC,GAEA,MADAlJ,WAAAC,SAAAiJ,EAAA9J,GACA,SAAAC,EAAAC,GACA,MAAAD,IAAAC,EAAA4J,EAAA7J,EAAAyJ,SAAAxJ,EAAAwJ,WAAAzJ,GAAAC,GAQA,QAAA6J,GAAAxE,EAAAyE,GACA,OAAAC,GAAA,EAAAC,EAAA3E,EAAA1E,OAAsCqJ,EAAAD,EAAOA,IAC7C,OAAAvK,GAAAyK,EAAA5E,EAAA0E,GAAA7G,EAAA,EAAAC,EAAA8G,EAAAtJ,OAAgEwC,EAAAD,EAAOA,KACvE1D,EAAAyK,EAAA/G,KAAA4G,EAAAtK,EAAA0D,EAAA6G,EAGA,OAAA1E,GA0BA,QAAA6E,GAAAC,GAEA,MADA7E,IAAA6E,EAAAC,IACAD,EA+BA,QAAAE,GAAAC,GACA,GAAAC,GAAAC,CACA,iBAAAzM,EAAAmF,EAAA6G,GACA,GAAAvK,GAAAyK,EAAAK,EAAAP,GAAAU,OAAAtH,EAAA8G,EAAAtJ,MAGA,KAFAoJ,GAAAS,MAAAT,EAAAQ,EAAA,GACArH,GAAAqH,MAAArH,EAAA,KACA1D,EAAAyK,EAAAM,SAAApH,IACA,MAAA3D,IAsCA,QAAAkL,GAAAvF,EAAAnB,EAAA2G,GAKA,QAAAC,KACA,GAAAjH,GAAAnH,KAAAuG,EACAY,KACAnH,KAAAqO,oBAAA1F,EAAAxB,IAAAmH,SACAtO,MAAAuG,IAGA,QAAAgI,KACA,GAAApH,GAAAqH,EAAAhH,EAAAiH,GAAAvK,WACAkK,GAAApM,KAAAhC,MACAA,KAAA0O,iBAAA/F,EAAA3I,KAAAuG,GAAAY,IAAAmH,EAAAH,GACAhH,EAAAnC,EAAAwC,EAEA,QAAAmH,KACA,GAAAC,GAAA3D,EAAA,GAAAT,QAAA,eAAAzC,GAAA0C,QAAA9B,GAAA,IACA,QAAApC,KAAAvG,MACA,GAAA4O,EAAArI,EAAAqI,MAAA3D,GAAA,CACA,GAAA9D,GAAAnH,KAAAuG,EACAvG,MAAAqO,oBAAAO,EAAA,GAAAzH,IAAAmH,SACAtO,MAAAuG,IAvBA,GAAAA,GAAA,OAAAoC,EAAAjC,EAAAiC,EAAAjB,QAAA,KAAA8G,EAAAK,CACAnI,GAAA,IAAAiC,IAAArD,MAAA,EAAAoB,GACA,IAAAoI,GAAAC,GAAAtH,IAAAkB,EAyBA,OAxBAmG,KAAAnG,EAAAmG,EAAAN,EAAAQ,GAwBAtI,EAAAc,EAAA+G,EAAAH,EAAA5G,EAAAV,EAAA6H,EAWA,QAAAE,GAAArH,EAAAgB,GACA,gBAAAL,GACA,GAAA8G,GAAAlH,GAAAb,KACAa,IAAAb,MAAAiB,EACAK,EAAA,GAAAxI,KAAAgN,QACA,KACAxF,EAAApB,MAAApG,KAAAwI,GACO,QACPT,GAAAb,MAAA+H,IAIA,QAAAD,GAAAxH,EAAAgB,GACA,GAAArB,GAAA0H,EAAArH,EAAAgB,EACA,iBAAAL,GACA,GAAAlC,GAAAjG,KAAAkP,EAAA/G,EAAAgH,aACAD,SAAAjJ,GAAA,EAAAiJ,EAAAE,wBAAAnJ,KACAkB,EAAAnF,KAAAiE,EAAAkC,IAKA,QAAAkH,IAAArM,GACA,GAAAuD,GAAA,oBAAA+I,GAAAC,EAAA,QAAAhJ,EAAAiJ,EAAAzH,GAAAlG,OAAAuB,EAAAJ,IAAAsE,GAAA,YAAAf,EAAAuB,GAAAR,GAAA,YAAAf,EAAAuB,GAAAR,GAAA,cAAAf,EAAAuB,EAIA,IAHA,MAAA2H,KACAA,GAAA,iBAAAzM,IAAA,EAAAqD,EAAArD,EAAA2I,MAAA,eAEA8D,GAAA,CACA,GAAA9D,GAAA5I,EAAAC,GAAA2I,MAAA9J,EAAA8J,EAAA8D,GACA9D,GAAA8D,IAAA,OAEA,gBAAAC,GAGA,GAFAF,EAAAlI,GAAAf,EAAA,MACAkJ,KAAA9D,EAAA8D,IAAA5N,GACA6N,EAAA,CACA,GAAAC,GAAA,WACAH,EAAAlI,GAAAiI,EAAA,MAEAC,GAAAlI,GAAAiI,EAAA,WACAzH,IACA6H,MACS,GACTC,WAAAD,EAAA,KAQA,QAAAE,IAAAC,EAAA3H,GACAA,EAAA4H,iBAAA5H,IAAA4H,eAAA,GACA,IAAAnP,GAAAkP,EAAAE,iBAAAF,CACA,IAAAlP,EAAAqP,eAAA,CACA,GAAAC,GAAAtP,EAAAqP,gBACA,MAAAE,GAAA,CACA,GAAAC,GAAAhN,EAAA0M,EACA,IAAAM,EAAAC,SAAAD,EAAAE,QAAA,CACA1P,EAAAmH,GAAAlG,OAAA,QAAAC,OAAA,OAAA6J,OACA4E,SAAA,WACAC,IAAA,EACAzM,KAAA,EACA7D,OAAA,EACAuQ,QAAA,EACAC,OAAA,QACW,YACX,IAAAC,GAAA/P,EAAA,MAAAgQ,cACAT,MAAAQ,EAAAE,GAAAF,EAAAxI,GACAvH,EAAAgH,UAMA,MAHAuI,KAAAD,EAAA5O,EAAA6G,EAAA2I,MAAAZ,EAAAzO,EAAA0G,EAAA4I,QAAkEb,EAAA5O,EAAA6G,EAAA6I,QAClEd,EAAAzO,EAAA0G,EAAA8I,SACAf,IAAAgB,gBAAApB,EAAAc,eAAAO,YACAjB,EAAA5O,EAAA4O,EAAAzO,GAEA,GAAA2P,GAAAtB,EAAAuB,uBACA,QAAAlJ,EAAA6I,QAAAI,EAAArN,KAAA+L,EAAAwB,WAAAnJ,EAAA8I,QAAAG,EAAAZ,IAAAV,EAAAyB,WA2DA,QAAAC,MACA,MAAAzJ,IAAAb,MAAA6I,eAAA,GAAA0B,WAWA,QAAAC,IAAApQ,GACA,MAAAA,GAAA,MAAAA,EAAA,KAEA,QAAAqQ,IAAApO,EAAAC,EAAA0H,GACA,OAAA1H,EAAA,GAAAD,EAAA,KAAA2H,EAAA,GAAA3H,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA2H,EAAA,GAAA3H,EAAA,IAEA,QAAAqO,IAAAtQ,GACA,MAAAA,GAAA,OAAAA,EAAAuQ,GAAAC,KAAAC,KAAAzQ,GAEA,QAAA0Q,IAAA1Q,GACA,MAAAA,GAAA,EAAA2Q,GAAA,GAAA3Q,GAAA2Q,GAAAH,KAAAI,KAAA5Q,GAEA,QAAA6Q,IAAA7Q,GACA,QAAAA,EAAAwQ,KAAAM,IAAA9Q,IAAA,EAAAA,GAAA,EAEA,QAAA+Q,IAAA/Q,GACA,QAAAA,EAAAwQ,KAAAM,IAAA9Q,IAAA,EAAAA,GAAA,EAEA,QAAAgR,IAAAhR,GACA,QAAAA,EAAAwQ,KAAAM,IAAA,EAAA9Q,IAAA,IAAAA,EAAA,GAEA,QAAAiR,IAAAjR,GACA,OAAAA,EAAAwQ,KAAAU,IAAAlR,EAAA,IAAAA,EAuSA,QAAAmR,OAKA,QAAAC,IAAAC,EAAAzK,EAAAf,GACA,MAAAnH,gBAAA0S,KAAA1S,KAAA2S,KAAA3S,KAAAkI,UAAAlI,KAAAmH,OAAAjD,UAAAC,OAAA,EAAAwO,YAAAD,IAAA,GAAAA,IAAAC,MAAAzK,EAAAyK,EAAAxL,GAAAyL,GAAA,GAAAD,EAAAE,GAAAH,IAAA,GAAAA,IAAAC,EAAAzK,EAAAf,GAcA,QAAA2L,IAAAH,EAAAzK,EAAAf,GAOA,QAAA4L,GAAAJ,GAEA,MADAA,GAAA,IAAAA,GAAA,IAA4B,EAAAA,OAAA,KAC5B,GAAAA,EAAAK,GAAAC,EAAAD,GAAAL,EAAA,GACA,IAAAA,EAAAM,EACA,IAAAN,EAAAK,GAAAC,EAAAD,IAAA,IAAAL,GAAA,GACAK,EAEA,QAAAE,GAAAP,GACA,MAAAb,MAAAqB,MAAA,IAAAJ,EAAAJ,IAdA,GAAAK,GAAAC,CAgBA,OAfAN,GAAA/O,MAAA+O,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACAzK,EAAAtE,MAAAsE,GAAA,IAAAA,EAAA,EAAAA,EAAA,IAAAA,EACAf,EAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAA,EACA8L,EAAA,IAAA9L,KAAA,EAAAe,GAAAf,EAAAe,EAAAf,EAAAe,EACA8K,EAAA,EAAA7L,EAAA8L,EAWA,GAAAG,IAAAF,EAAAP,EAAA,KAAAO,EAAAP,GAAAO,EAAAP,EAAA,MAGA,QAAAU,IAAAV,EAAAzH,EAAA/D,GACA,MAAAnH,gBAAAqT,KAAArT,KAAA2S,KAAA3S,KAAAkL,UAAAlL,KAAAmH,OAAAjD,UAAAC,OAAA,EAAAwO,YAAAU,IAAA,GAAAA,IAAAV,MAAAzH,EAAAyH,EAAAxL,GAAAwL,YAAAW,IAAAC,GAAAZ,EAAAxL,EAAAwL,EAAApP,EAAAoP,EAAAnP,GAAA+P,IAAAZ,EAAAa,IAAAb,EAAA5K,GAAA0L,IAAAd,IAAAe,EAAAf,EAAAgB,EAAAhB,EAAAnP,IAAA2D,EAAAwL,EAAApP,EAAAoP,EAAAnP,GAAA,GAAA6P,IAAAV,EAAAzH,EAAA/D,GAYA,QAAAyM,IAAAjB,EAAAzH,EAAA/D,GAGA,MAFAvD,OAAA+O,OAAA,GACA/O,MAAAsH,OAAA,GACA,GAAAoI,IAAAnM,EAAA2K,KAAA+B,IAAAlB,GAAAmB,IAAA5I,EAAA4G,KAAAU,IAAAG,GAAAzH,GAGA,QAAAoI,IAAAnM,EAAA5D,EAAAC,GACA,MAAAxD,gBAAAsT,KAAAtT,KAAAmH,KAAAnH,KAAAuD,UAAAvD,KAAAwD,OAAAU,UAAAC,OAAA,EAAAgD,YAAAmM,IAAA,GAAAA,IAAAnM,MAAA5D,EAAA4D,EAAA3D,GAAA2D,YAAAkM,IAAAO,GAAAzM,EAAAwL,EAAAxL,EAAA+D,EAAA/D,KAAAqM,IAAArM,EAAAiM,GAAAjM,IAAAuM,EAAAvM,EAAAwM,EAAAxM,EAAA3D,GAAA,GAAA8P,IAAAnM,EAAA5D,EAAAC,GAcA,QAAAuQ,IAAA5M,EAAA5D,EAAAC,GACA,GAAA/B,IAAA0F,EAAA,QAAA7F,EAAAG,EAAA8B,EAAA,IAAA6D,EAAA3F,EAAA+B,EAAA,GAIA,OAHAlC,GAAA0S,GAAA1S,GAAA2S,GACAxS,EAAAuS,GAAAvS,GAAAyS,GACA9M,EAAA4M,GAAA5M,GAAA+M,GACA,GAAAf,IAAAgB,GAAA,UAAA9S,EAAA,UAAAG,EAAA,SAAA2F,GAAAgN,IAAA,QAAA9S,EAAA,UAAAG,EAAA,QAAA2F,GAAAgN,GAAA,SAAA9S,EAAA,SAAAG,EAAA,UAAA2F,IAEA,QAAAmM,IAAApM,EAAA5D,EAAAC,GACA,MAAA2D,GAAA,KAAAkM,IAAAvB,KAAAuC,MAAA7Q,EAAAD,GAAA+Q,GAAAxC,KAAAyC,KAAAhR,IAAAC,KAAA2D,GAAA,GAAAkM,IAAA5P,QAAA0D,GAEA,QAAA6M,IAAA1S,GACA,MAAAA,GAAA,WAAAA,SAAA,eAEA,QAAAkT,IAAAlT,GACA,MAAAA,GAAA,QAAAwQ,KAAA2C,IAAAnT,EAAA,cAAAA,EAAA,KAEA,QAAA8S,IAAAV,GACA,MAAA5B,MAAAqB,MAAA,aAAAO,EAAA,MAAAA,EAAA,MAAA5B,KAAA2C,IAAAf,EAAA,cAGA,QAAAN,IAAAM,EAAAC,EAAAnQ,GACA,MAAAxD,gBAAAoT,KAAApT,KAAA0T,MAAA1T,KAAA2T,WAAA3T,KAAAwD,QAAAU,UAAAC,OAAA,EAAAuP,YAAAN,IAAA,GAAAA,IAAAM,MAAAC,EAAAD,EAAAlQ,GAAAoP,GAAA,GAAAc,EAAAN,GAAAN,IAAA,GAAAM,IAAAM,EAAAC,EAAAnQ,GAEA,QAAAkR,IAAAjV,GACA,UAAA2T,IAAA3T,GAAA,GAAAA,GAAA,UAAAA,GAEA,QAAAkV,IAAAlV,GACA,MAAAiV,IAAAjV,GAAA,GAsBA,QAAAmV,IAAA7B,GACA,UAAAA,EAAA,IAAAjB,KAAA+C,IAAA,EAAA9B,GAAA+B,SAAA,IAAAhD,KAAAiD,IAAA,IAAAhC,GAAA+B,SAAA,IAEA,QAAAlC,IAAA1R,EAAAuS,EAAAuB,GACA,GAAAhC,GAAAC,EAAAgC,EAAAvB,EAAA,EAAAC,EAAA,EAAAnQ,EAAA,CAEA,IADAwP,EAAA,mBAAAkC,KAAAhU,IAAAiU,eAGA,OADAlC,EAAAD,EAAA,GAAArI,MAAA,KACAqI,EAAA,IACA,UAEA,MAAAgC,GAAAI,WAAAnC,EAAA,IAAAmC,WAAAnC,EAAA,QAAAmC,WAAAnC,EAAA,QAGA,WAEA,MAAAQ,GAAA4B,GAAApC,EAAA,IAAAoC,GAAApC,EAAA,IAAAoC,GAAApC,EAAA,KAIA,OAAAgC,EAAAK,GAAA7N,IAAAvG,IACAuS,EAAAwB,EAAAvB,EAAAuB,EAAAtB,EAAAsB,EAAAzR,IAEA,MAAAtC,GAAA,MAAAA,EAAAsF,OAAA,IAAA5C,MAAAqR,EAAAvT,SAAAR,EAAAoE,MAAA,UACA,IAAApE,EAAAiD,QACAuP,GAAA,KAAAuB,IAAA,EACAvB,KAAA,EAAAA,EACAC,EAAA,IAAAsB,EACAtB,KAAA,EAAAA,EACAnQ,EAAA,GAAAyR,EACAzR,KAAA,EAAAA,GACO,IAAAtC,EAAAiD,SACPuP,GAAA,SAAAuB,IAAA,GACAtB,GAAA,MAAAsB,IAAA,EACAzR,EAAA,IAAAyR,IAGAxB,EAAAC,EAAAC,EAAAnQ,IAEA,QAAAqP,IAAAa,EAAAC,EAAAnQ,GACA,GAAAmP,GAAAzK,EAAA6M,EAAAjD,KAAAiD,IAAArB,GAAA,IAAAC,GAAA,IAAAnQ,GAAA,KAAAqR,EAAA/C,KAAA+C,IAAAnB,EAAAC,EAAAnQ,GAAAjC,EAAAsT,EAAAE,EAAA5N,GAAA0N,EAAAE,GAAA,CASA,OARAxT,IACA2G,EAAA,GAAAf,EAAA5F,GAAAsT,EAAAE,GAAAxT,GAAA,EAAAsT,EAAAE,GACApC,EAAAe,GAAAmB,GAAAlB,EAAAnQ,GAAAjC,GAAAiC,EAAAmQ,EAAA,KAAsDA,GAAAkB,GAAArR,EAAAkQ,GAAAnS,EAAA,GAAwCmS,EAAAC,GAAApS,EAAA,EAC9FoR,GAAA,KAEAA,EAAAlP,IACAyE,EAAAf,EAAA,KAAAA,EAAA,EAAAwL,GAEA,GAAAD,IAAAC,EAAAzK,EAAAf,GAEA,QAAAqM,IAAAE,EAAAC,EAAAnQ,GACAkQ,EAAA6B,GAAA7B,GACAC,EAAA4B,GAAA5B,GACAnQ,EAAA+R,GAAA/R,EACA,IAAAlC,GAAAkT,IAAA,SAAAd,EAAA,SAAAC,EAAA,SAAAnQ,GAAAyQ,IAAAxS,EAAA+S,IAAA,SAAAd,EAAA,SAAAC,EAAA,QAAAnQ,GAAA0Q,IAAA9M,EAAAoN,IAAA,SAAAd,EAAA,QAAAC,EAAA,SAAAnQ,GAAA2Q,GACA,OAAAb,IAAA,IAAA7R,EAAA,QAAAH,EAAAG,GAAA,KAAAA,EAAA2F,IAEA,QAAAmO,IAAA7B,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA5B,KAAA2C,KAAAf,EAAA,iBAEA,QAAA2B,IAAAnK,GACA,GAAA2F,GAAAuE,WAAAlK,EACA,aAAAA,EAAA1E,OAAA0E,EAAA/G,OAAA,GAAA2N,KAAAqB,MAAA,KAAAtC,KA2JA,QAAA2E,IAAAzC,GACA,wBAAAA,KAAA,WACA,MAAAA,IAKA,QAAA0C,IAAAC,GACA,gBAAAC,EAAAC,EAAAtI,GAGA,MAFA,KAAApJ,UAAAC,QAAA,kBAAAyR,KAAAtI,EAAAsI,EACAA,EAAA,MACAC,GAAAF,EAAAC,EAAAF,EAAApI,IAGA,QAAAuI,IAAAF,EAAAC,EAAAF,EAAApI,GAMA,QAAAwI,KACA,GAAAC,GAAAC,EAAAC,EAAAD,MACA,KAAAA,GAAAE,GAAAD,IAAAD,GAAA,SAAAA,GAAA,MAAAA,EAAA,CACA,IACAD,EAAAL,EAAA1T,KAAAmU,EAAAF,GACS,MAAA9N,GAET,WADAlB,GAAAmP,MAAApU,KAAAmU,EAAAhO,GAGAlB,EAAAoP,KAAArU,KAAAmU,EAAAJ,OAEA9O,GAAAmP,MAAApU,KAAAmU,EAAAF,GAhBA,GAAAE,MAAgBlP,EAAAc,GAAAd,SAAA,wCAAAqP,KAAiFL,EAAA,GAAAM,gBAAAC,EAAA,IAwEjG,QAvEAxW,KAAAyW,gBAAA,mBAAAR,KAAA,oBAAA1K,KAAAoK,KAAAM,EAAA,GAAAQ,iBACA,UAAAR,KAAAS,OAAAT,EAAAU,QAAAb,EAAAG,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAf,KAgBAG,EAAAa,WAAA,SAAA5P,GACA,GAAA+H,GAAAlH,GAAAb,KACAa,IAAAb,OACA,KACAD,EAAA8P,SAAA/U,KAAAmU,EAAAF,GACO,QACPlO,GAAAb,MAAA+H,IAGAkH,EAAAa,OAAA,SAAAzQ,EAAA9G,GAEA,MADA8G,MAAA,IAAA4O,cACAjR,UAAAC,OAAA,EAAAmS,EAAA/P,IACA,MAAA9G,QAAA6W,GAAA/P,GAA8C+P,EAAA/P,GAAA9G,EAAA,GAC9C0W,IAEAA,EAAAP,SAAA,SAAAnW,GACA,MAAAyE,WAAAC,QACAyR,EAAA,MAAAnW,EAAA,KAAAA,EAAA,GACA0W,GAFAP,GAIAO,EAAAK,aAAA,SAAA/W,GACA,MAAAyE,WAAAC,QACAqS,EAAA/W,EACA0W,GAFAK,GAIAL,EAAAT,SAAA,SAAAjW,GAEA,MADAiW,GAAAjW,EACA0W,IAEA,cAAAc,QAAA,SAAA9Q,GACAgQ,EAAAhQ,GAAA,WACA,MAAAgQ,GAAAe,KAAA9Q,MAAA+P,GAAAhQ,GAAAwB,OAAA8G,GAAAvK,gBAGAiS,EAAAe,KAAA,SAAA/Q,EAAAvG,EAAA0N,GAIA,GAHA,IAAApJ,UAAAC,QAAA,kBAAAvE,KAAA0N,EAAA1N,IAAA,MACAqW,EAAAkB,KAAAhR,EAAAwP,GAAA,GACA,MAAAC,GAAA,UAAAU,OAAA,OAAAV,EAAA,QACAK,EAAAmB,iBAAA,OAAA7Q,KAAA+P,GAAAL,EAAAmB,iBAAA7Q,EAAA+P,EAAA/P,GAQA,OAPA,OAAAqP,GAAAK,EAAAoB,kBAAApB,EAAAoB,iBAAAzB,GACA,MAAAY,IAAAP,EAAAO,gBACA,MAAAlJ,GAAA6I,EAAA7O,GAAA,QAAAgG,GAAAhG,GAAA,gBAAA2O,GACA3I,EAAA,KAAA2I,KAEAhP,EAAAqQ,WAAAtV,KAAAmU,EAAAF,GACAA,EAAAiB,KAAA,MAAAtX,EAAA,KAAAA,GACAuW,GAEAA,EAAAoB,MAAA,WAEA,MADAtB,GAAAsB,QACApB,GAEApO,GAAAyP,OAAArB,EAAAlP,EAAA,MACA,MAAAqG,EAAA6I,IAAA1O,IAAAgQ,GAAAnK,IAEA,QAAAmK,IAAAnK,GACA,WAAAA,EAAAnJ,OAAA,SAAAiS,EAAAH,GACA3I,EAAA,MAAA8I,EAAAH,EAAA,OACK3I,EAEL,QAAA4I,IAAAD,GACA,GAAAtN,GAAAsN,EAAAO,YACA,OAAA7N,IAAA,SAAAA,EAAAsN,EAAAP,SAAAO,EAAAyB,aAgHA,QAAAC,IAAArK,EAAAsK,EAAAC,GACA,GAAAlR,GAAAzC,UAAAC,MACA,GAAAwC,IAAAiR,EAAA,GACA,EAAAjR,IAAAkR,EAAAC,KAAAC,MACA,IAAAC,GAAAH,EAAAD,EAAAK,GACA/M,EAAAoC,EACA4K,EAAAF,EACArR,EAAA,KASA,OAPAwR,OAAAxR,EAAAsR,EAAyDG,GAAAH,EACzDE,GAAAF,EACAI,KACAC,GAAAC,aAAAD,IACAD,GAAA,EACAG,GAAAC,KAEAR,EAEA,QAAAQ,MACA,GAAAV,GAAAW,KAAAd,EAAAe,KAAAZ,CACAH,GAAA,IACAgB,SAAAhB,KACAW,aAAAD,IACAA,GAAA1I,WAAA6I,GAAAb,IAEAS,GAAA,IAEAA,GAAA,EACAG,GAAAC,KAOA,QAAAC,MAEA,IADA,GAAAX,GAAAD,KAAAC,MAAAE,EAAAG,GACAH,GACAF,GAAAE,EAAAC,GAAAD,EAAA/M,EAAA6M,EAAAE,EAAAC,KAAAD,EAAA/M,EAAA,MACA+M,IAAAtR,CAEA,OAAAoR,GAEA,QAAAY,MAEA,IADA,GAAAE,GAAAC,EAAAV,GAAAJ,EAAAe,IACAD,GACAA,EAAA5N,GACA4N,EAAAZ,EAAAF,MAAAc,EAAAZ,GACAY,GAAAD,EAAAC,GAAAnS,GAEAmS,EAAAD,IAAAlS,EAAAmS,EAAAnS,EAAAyR,GAAAU,EAAAnS,CAIA,OADAwR,IAAAU,EACAb,EAEA,QAAAgB,IAAA1X,EAAA2X,GACA,MAAAA,IAAA3X,EAAAwQ,KAAAoH,KAAApH,KAAAqH,IAAA7X,GAAAwQ,KAAAsH,MAAA,GAgBA,QAAAC,IAAA9X,EAAAmF,GACA,GAAAlC,GAAAsN,KAAA2C,IAAA,KAAA6E,GAAA,EAAA5S,GACA,QACApG,MAAAoG,EAAA,WAAAnF,GACA,MAAAA,GAAAiD,GACO,SAAAjD,GACP,MAAAA,GAAAiD,GAEA+U,OAAAhY,GAGA,QAAAiY,IAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAC,EAAAH,EAAAI,UAAAC,EAAAL,EAAAM,SAAAC,EAAAP,EAAAQ,SAAAC,EAAAJ,GAAAF,EAAA,SAAAna,EAAAU,GAEA,IADA,GAAAuG,GAAAjH,EAAA0E,OAAA+T,KAAA3K,EAAA,EAAAoG,EAAAmG,EAAA,GAAA3V,EAAA,EACAuC,EAAA,GAAAiN,EAAA,IACAxP,EAAAwP,EAAA,EAAAxT,IAAAwT,EAAA7B,KAAA+C,IAAA,EAAA1U,EAAAgE,IACA+T,EAAA/V,KAAA1C,EAAA0a,UAAAzT,GAAAiN,EAAAjN,EAAAiN,OACAxP,GAAAwP,EAAA,GAAAxT,KACAwT,EAAAmG,EAAAvM,KAAA,GAAAuM,EAAA3V,OAEA,OAAA+T,GAAAkC,UAAAC,KAAAT,IACK7T,CACL,iBAAAuU,GACA,GAAA1L,GAAA2L,GAAArF,KAAAoF,GAAAE,EAAA5L,EAAA,QAAA6L,EAAA7L,EAAA,QAAA8L,EAAA9L,EAAA,QAAA2K,EAAA3K,EAAA,OAAA+L,EAAA/L,EAAA,GAAAzO,GAAAyO,EAAA,GAAAgM,EAAAhM,EAAA,GAAAiM,EAAAjM,EAAA,GAAAjG,EAAAiG,EAAA,GAAAtO,EAAA,EAAAwa,EAAA,GAAAC,EAAA,GAAAC,GAAA,EAAAC,GAAA,CAMA,QALAJ,SAAAV,UAAA,KACAQ,GAAA,MAAAH,GAAA,MAAAC,KACAE,EAAAH,EAAA,IACAC,EAAA,KAEA9R,GACA,QACAiS,GAAA,EACAjS,EAAA,GACA,MAEA,SACArI,EAAA,IACAya,EAAA,IACApS,EAAA,GACA,MAEA,SACArI,EAAA,IACAya,EAAA,IACApS,EAAA,GACA,MAEA,SACA,QACA,QACA,QACA,MAAA4Q,IAAAuB,EAAA,IAAAnS,EAAAwM,cAEA,SACA8F,GAAA,CAEA,SACAD,GAAA,EACAH,EAAA,CACA,MAEA,SACAva,EAAA,GACAqI,EAAA,IAGA,MAAA4Q,IAAAuB,EAAAd,EAAA,GAAAe,EAAAf,EAAA,IACA,KAAArR,GAAAkS,IAAAlS,EAAA,KACA,MAAAkS,IACA,KAAAlS,EAAAkS,EAAA/I,KAAA+C,IAAA,EAAA/C,KAAAiD,IAAA,GAAA8F,IAA0E,KAAAlS,GAAA,KAAAA,IAAAkS,EAAA/I,KAAA+C,IAAA,EAAA/C,KAAAiD,IAAA,GAAA8F,MAE1ElS,EAAAuS,GAAAzT,IAAAkB,IAAAwS,EACA,IAAAC,GAAAT,GAAAC,CACA,iBAAAnb,GACA,GAAA4b,GAAAN,CACA,IAAAC,GAAAvb,EAAA,UACA,IAAA6b,GAAA,EAAA7b,GAAA,IAAAA,GAAA,IAAAA,QAAA,WAAAib,EAAA,GAAAA,CACA,MAAApa,EAAA,CACA,GAAAib,GAAAxT,GAAAyT,aAAA/b,EAAAob,EACApb,GAAA8b,EAAAjb,MAAAb,GACA4b,EAAAE,EAAAhC,OAAAwB,MAEAtb,IAAAa,CAEAb,GAAAkJ,EAAAlJ,EAAAob,EACA,IAAAY,GAAAC,EAAAhV,EAAAjH,EAAAkc,YAAA,IACA,MAAAjV,EAAA,CACA,GAAA6G,GAAA0N,EAAAxb,EAAAkc,YAAA,OACA,GAAApO,GAAAkO,EAAAhc,EAAAic,EAAA,KAAgDD,EAAAhc,EAAA0a,UAAA,EAAA5M,GAAAmO,EAAAjc,EAAA0a,UAAA5M,QAEhDkO,GAAAhc,EAAA0a,UAAA,EAAAzT,GACAgV,EAAAhC,EAAAja,EAAA0a,UAAAzT,EAAA,IAEAiU,GAAAC,IAAAa,EAAAvB,EAAAuB,EAAA1C,KACA,IAAA5U,GAAA2W,EAAA3W,OAAAsX,EAAAtX,OAAAuX,EAAAvX,QAAAiX,EAAA,EAAAE,EAAAnX,QAAAsM,EAAAtQ,EAAAgE,EAAA,GAAAyX,OAAAzX,EAAAhE,EAAAgE,EAAA,GAAAkW,KAAAG,GAAA,EAIA,OAHAY,KAAAK,EAAAvB,EAAAzJ,EAAAgL,EAAAhL,EAAAtM,OAAAhE,EAAAub,EAAAvX,OAAA4U,MACAuC,GAAAR,EACArb,EAAAgc,EAAAC,GACA,MAAAjB,EAAAa,EAAA7b,EAAAgR,EAAA,MAAAgK,EAAAhK,EAAA6K,EAAA7b,EAAA,MAAAgb,EAAAhK,EAAA0J,UAAA,EAAAhW,IAAA,GAAAmX,EAAA7b,EAAAgR,EAAA0J,UAAAhW,GAAAmX,GAAAF,EAAA3b,EAAAgR,EAAAhR,IAAA4b,IAkCA,QAAAF,IAAA7Z,GACA,MAAAA,GAAA,GAGA,QAAAua,MACA7b,KAAAgF,EAAA,GAAA8S,MAAA5T,UAAAC,OAAA,EAAA2T,KAAAgE,IAAA1V,MAAApG,KAAAkE,qBAAA,IAiEA,QAAA6X,IAAApS,EAAAqS,EAAAC,GACA,QAAA9I,GAAA+I,GACA,GAAAC,GAAAxS,EAAAuS,GAAAE,EAAAC,EAAAF,EAAA,EACA,OAAAC,GAAAF,IAAAC,IAAAC,EAEA,QAAAlD,GAAAgD,GAEA,MADAF,GAAAE,EAAAvS,EAAA,GAAA2S,IAAAJ,EAAA,OACAA,EAEA,QAAAG,GAAAH,EAAA1X,GAEA,MADAwX,GAAAE,EAAA,GAAAI,KAAAJ,GAAA1X,GACA0X,EAEA,QAAAzb,GAAAoY,EAAAC,EAAAyD,GACA,GAAAvE,GAAAkB,EAAAL,GAAA2D,IACA,IAAAD,EAAA,EACA,KAAAzD,EAAAd,GACAiE,EAAAjE,GAAAuE,GAAAC,EAAAra,KAAA,GAAA2V,OAAAE,IACAgE,EAAAhE,EAAA,OAGA,MAAAc,EAAAd,GAAAwE,EAAAra,KAAA,GAAA2V,OAAAE,IAAAgE,EAAAhE,EAAA,EAEA,OAAAwE,GAEA,QAAAC,GAAA5D,EAAAC,EAAAyD,GACA,IACAD,GAAAT,EACA,IAAAa,GAAA,GAAAb,GAEA,OADAa,GAAA1X,EAAA6T,EACApY,EAAAic,EAAA5D,EAAAyD,GACO,QACPD,GAAAxE,MAGAnO,EAAAgT,MAAAhT,EACAA,EAAAwJ,QACAxJ,EAAAuP,OACAvP,EAAA0S,SACA1S,EAAAlJ,OACA,IAAAic,GAAA/S,EAAA+S,IAAAE,GAAAjT,EAMA,OALA+S,GAAAC,MAAAD,EACAA,EAAAvJ,MAAAyJ,GAAAzJ,GACAuJ,EAAAxD,KAAA0D,GAAA1D,GACAwD,EAAAL,OAAAO,GAAAP,GACAK,EAAAjc,MAAAgc,EACA9S,EAEA,QAAAiT,IAAAzW,GACA,gBAAA+V,EAAA1X,GACA,IACA8X,GAAAT,EACA,IAAAa,GAAA,GAAAb,GAEA,OADAa,GAAA1X,EAAAkX,EACA/V,EAAAuW,EAAAlY,GAAAQ,EACO,QACPsX,GAAAxE,OAoDA,QAAA+E,IAAApD,GAEA,QAAAqD,GAAAC,GAEA,QAAA7b,GAAAgb,GAEA,IADA,GAAAhR,GAAA+N,EAAApI,EAAAmM,KAAAtW,EAAA,GAAA6G,EAAA,IACA7G,EAAAC,GACA,KAAAoW,EAAAE,WAAAvW,KACAsW,EAAA7a,KAAA4a,EAAAzX,MAAAiI,EAAA7G,IACA,OAAAuS,EAAAiE,GAAAhS,EAAA6R,EAAAvW,SAAAE,OAAAwE,EAAA6R,EAAAvW,SAAAE,KACAmK,EAAAsM,EAAAjS,QAAA2F,EAAAqL,EAAA,MAAAjD,EAAA,MAAA/N,EAAA,QAAA+N,IACA+D,EAAA7a,KAAA+I,GACAqC,EAAA7G,EAAA,EAIA,OADAsW,GAAA7a,KAAA4a,EAAAzX,MAAAiI,EAAA7G,IACAsW,EAAA3C,KAAA,IAbA,GAAA1T,GAAAoW,EAAA5Y,MAwCA,OAzBAjD,GAAAkc,MAAA,SAAAJ,GACA,GAAAzb,IACAE,EAAA,KACA+L,EAAA,EACAjM,EAAA,EACA8b,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,MACS/W,EAAAgX,EAAAnc,EAAAwb,EAAAC,EAAA,EACT,IAAAtW,GAAAsW,EAAA7Y,OAAA,WACA,MAAA5C,OAAA8b,EAAA9b,EAAA8b,EAAA,MAAA9b,EAAA0X,EACA,IAAA0E,GAAA,MAAApc,EAAAkc,GAAAnB,KAAAT,GAAAK,EAAA,IAAAyB,EAAA9B,GAAAS,GAOA,OANA,KAAA/a,GAAA2a,EAAA0B,YAAArc,EAAAE,EAAA,EAAAF,EAAAgM,GAAoD,KAAAhM,IAAA,KAAAA,IACpD,KAAAA,OAAAiO,EAAA,KAAAjO,GAAA,KACA2a,EAAA0B,YAAArc,EAAAE,EAAA,KACAya,EAAA0B,YAAArc,EAAAE,EAAA,OAAAF,MAAAiO,EAAA,OAAAjO,EAAAsc,GAAA3B,EAAA4B,SAAA,KAAAvc,EAAAiO,EAAA,EAAAjO,EAAAwc,GAAA7B,EAAA4B,SAAA,OACS5B,EAAA0B,YAAArc,EAAAE,EAAAF,EAAAiM,EAAAjM,KACT2a,EAAA8B,SAAAzc,EAAA8b,GAAA9b,EAAAkc,EAAA,OAAAlc,EAAA+b,EAAA/b,EAAAkc,EAAA,IAAAlc,EAAAgc,EAAAhc,EAAAic,GACAG,EAAAzB,EAAAlX,EAAAkX,GAEAhb,EAAA4T,SAAA,WACA,MAAAiI,IAEA7b,EAEA,QAAAwc,GAAAxB,EAAAa,EAAAC,EAAAzP,GAEA,IADA,GAAArC,GAAA+N,EAAAf,EAAAxR,EAAA,EAAAC,EAAAoW,EAAA5Y,OAAAqJ,EAAAwP,EAAA7Y,OACAwC,EAAAD,GAAA,CACA,GAAA6G,GAAAC,EAAA,QAEA,IADAtC,EAAA6R,EAAAE,WAAAvW,KACA,KAAAwE,GAGA,GAFAgN,EAAA6E,EAAAvW,OAAAE,KACAuS,EAAAgF,EAAA/F,IAAAgF,IAAAH,EAAAvW,OAAAE,KAAAwR,IACAe,IAAA1L,EAAA0L,EAAAiD,EAAAc,EAAAzP,IAAA,eACS,IAAArC,GAAA8R,EAAAC,WAAA1P,KACT,SAGA,MAAAA,GA2HA,QAAA2Q,GAAAhC,EAAAc,EAAAtW,GACAyX,EAAA7S,UAAA,CACA,IAAA3E,GAAAwX,EAAAjJ,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA1M,EAAA4O,EAAA3W,IAAAd,EAAA,GAAAwO,eAAAzO,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAka,GAAAnC,EAAAc,EAAAtW,GACA4X,EAAAhT,UAAA,CACA,IAAA3E,GAAA2X,EAAApJ,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA1M,EAAA+O,EAAA9W,IAAAd,EAAA,GAAAwO,eAAAzO,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAqa,GAAAtC,EAAAc,EAAAtW,GACA+X,EAAAnT,UAAA,CACA,IAAA3E,GAAA8X,EAAAvJ,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA1O,EAAAkR,EAAAjX,IAAAd,EAAA,GAAAwO,eAAAzO,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAwa,GAAAzC,EAAAc,EAAAtW,GACAkY,EAAAtT,UAAA,CACA,IAAA3E,GAAAiY,EAAA1J,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA1O,EAAAqR,EAAApX,IAAAd,EAAA,GAAAwO,eAAAzO,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA2a,GAAA5C,EAAAc,EAAAtW,GACA,MAAAgX,GAAAxB,EAAAiB,EAAAjS,EAAA4J,WAAAkI,EAAAtW,GAEA,QAAAqY,GAAA7C,EAAAc,EAAAtW,GACA,MAAAgX,GAAAxB,EAAAiB,EAAA7b,EAAAwT,WAAAkI,EAAAtW,GAEA,QAAAsY,GAAA9C,EAAAc,EAAAtW,GACA,MAAAgX,GAAAxB,EAAAiB,EAAA8B,EAAAnK,WAAAkI,EAAAtW,GAEA,QAAAwY,GAAAhD,EAAAc,EAAAtW,GACA,GAAAC,GAAAwY,EAAA1X,IAAAuV,EAAA1X,MAAAoB,KAAA,GAAAyO,cACA,cAAAxO,EAAA,IAAAuV,EAAAjD,EAAAtS,EAAAD,GAnNA,GAAA0Y,GAAA3F,EAAA4F,SAAAC,EAAA7F,EAAAyC,KAAAqD,EAAA9F,EAAAzB,KAAAwH,EAAA/F,EAAAgG,QAAAC,EAAAjG,EAAAkG,KAAAC,EAAAnG,EAAAoG,UAAAC,EAAArG,EAAAsG,OAAAC,EAAAvG,EAAAwG,WA2DAnD,GAAAJ,IAAA,SAAAK,GAEA,QAAA7b,GAAAgb,GACA,IACAI,GAAAT,EACA,IAAAa,GAAA,GAAAJ,GAEA,OADAI,GAAA1X,EAAAkX,EACAvS,EAAA+S,GACS,QACTJ,GAAAxE,MARA,GAAAnO,GAAAmT,EAAAC,EAqBA,OAVA7b,GAAAkc,MAAA,SAAAJ,GACA,IACAV,GAAAT,EACA,IAAAK,GAAAvS,EAAAyT,MAAAJ,EACA,OAAAd,MAAAlX,EACS,QACTsX,GAAAxE,OAGA5W,EAAA4T,SAAAnL,EAAAmL,SACA5T,GAEA4b,EAAAoD,MAAApD,EAAAJ,IAAAwD,MAAAC,EACA,IAAAhB,GAAApX,GAAAgD,MAAAuT,EAAA8B,GAAAV,GAAAnB,EAAA8B,GAAAX,GAAAvB,EAAAiC,GAAAR,GAAAxB,EAAAiC,GAAAT,GAAAhB,EAAAwB,GAAAN,GAAAjB,EAAAwB,GAAAP,GAAArB,EAAA2B,GAAAJ,GAAAtB,EAAA2B,GAAAL,EACAR,GAAAvI,QAAA,SAAAgC,EAAAvS,GACAyY,EAAAtX,IAAAoR,EAAA9D,cAAAzO,IAEA,IAAAyW,IACA5Z,EAAA,SAAAhC,GACA,MAAAqe,GAAAre,EAAAuc,WAEAwC,EAAA,SAAA/e,GACA,MAAAme,GAAAne,EAAAuc,WAEAta,EAAA,SAAAjC,GACA,MAAAye,GAAAze,EAAAgf,aAEAC,EAAA,SAAAjf,GACA,MAAAue,GAAAve,EAAAgf,aAEArV,EAAA4R,EAAAsC,GACA7d,EAAA,SAAAA,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAmf,UAAAzH,EAAA,IAEA9Q,EAAA,SAAA5G,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAmf,UAAAzH,EAAA,IAEAoE,EAAA,SAAA9b,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAof,WAAA1H,EAAA,IAEA2H,EAAA,SAAArf,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAof,WAAA,OAAA1H,EAAA,IAEA1L,EAAA,SAAAhM,EAAA0X,GACA,MAAAwH,IAAA,EAAAI,GAAAC,UAAAvf,GAAA0X,EAAA,IAEAuE,EAAA,SAAAjc,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAwf,kBAAA9H,EAAA,IAEAzL,EAAA,SAAAjM,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAgf,WAAA,EAAAtH,EAAA,IAEAqE,EAAA,SAAA/b,EAAA0X,GACA,MAAAwH,IAAAlf,EAAAyf,aAAA/H,EAAA,IAEAA,EAAA,SAAA1X,GACA,MAAAie,KAAAje,EAAAof,YAAA,MAEApD,EAAA,SAAAhc,EAAA0X,GACA,MAAAwH,IAAAlf,EAAA0f,aAAAhI,EAAA,IAEA8E,EAAA,SAAAxc,EAAA0X,GACA,MAAAwH,IAAAI,GAAAK,aAAA3f,GAAA0X,EAAA,IAEAzJ,EAAA,SAAAjO,GACA,MAAAA,GAAAuc,UAEAD,EAAA,SAAAtc,EAAA0X,GACA,MAAAwH,IAAAI,GAAAM,aAAA5f,GAAA0X,EAAA,IAEA3X,EAAAwb,EAAAwC,GACAL,EAAAnC,EAAAyC,GACA9d,EAAA,SAAAF,EAAA0X,GACA,MAAAwH,IAAAlf,EAAA6f,cAAA,IAAAnI,EAAA,IAEAoI,EAAA,SAAA9f,EAAA0X,GACA,MAAAwH,IAAAlf,EAAA6f,cAAA,IAAAnI,EAAA,IAEAwE,EAAA6D,GACAC,IAAA,WACA,YAGAtD,GACA1a,EAAA2a,EACAoC,EAAAjC,EACA7a,EAAAgb,EACAgC,EAAA7B,EACAzT,EAAA4T,EACAvd,EAAAigB,GACArZ,EAAAqZ,GACAnE,EAAAoE,GACAb,EAAAa,GACAlU,EAAAmU,GACAlE,EAAAmE,GACAnU,EAAAoU,GACAtE,EAAAuE,GACA5I,EAAAiG,EACA3B,EAAAuE,GACA/D,EAAAgE,GACAvS,EAAAwS,GACAnE,EAAAoE,GACA3gB,EAAAyd,EACAE,EAAAD,EACAvd,EAAAygB,GACAb,EAAAc,GACA1E,EAAA2E,GACAb,IAAAc,GAmCA,OAAAvF,GAOA,QAAA2D,IAAAhhB,EAAA+a,EAAAra,GACA,GAAAua,GAAA,EAAAjb,EAAA,OAAAud,GAAAtC,GAAAjb,KAAA,GAAA0E,EAAA6Y,EAAA7Y,MACA,OAAAuW,IAAAva,EAAAgE,EAAA,GAAAyX,OAAAzb,EAAAgE,EAAA,GAAAkW,KAAAG,GAAAwC,KAEA,QAAAoD,IAAA7d,GACA,UAAAiI,QAAA,OAAAjI,EAAAwI,IAAAhD,GAAA0C,SAAA4P,KAAA,cAEA,QAAAgG,IAAA9d,GAEA,IADA,GAAAwI,GAAA,GAAAhG,GAAA2B,EAAA,GAAAC,EAAApE,EAAA4B,SACAuC,EAAAC,GAAAoE,EAAAlD,IAAAtF,EAAAmE,GAAAyO,cAAAzO,EACA,OAAAqE,GAEA,QAAAiX,IAAA9F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAA1M,GAAA7I,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA4d,IAAA7F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA6B,GAAApX,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA8d,IAAA/F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,GACA,OAAAC,IAAAuV,EAAA2B,GAAAlX,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAge,IAAAjG,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAza,GAAAkF,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA+d,IAAAhG,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAza,EAAA8gB,IAAA5b,EAAA,IAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAie,IAAAlG,EAAAc,EAAAtW,GACA,oBAAsB6E,KAAAyR,IAAA1X,MAAAoB,IAAA,KAAAwV,EAAAuB,GAAAT,EACtBtW,EAAA,MAEA,QAAA6b,IAAAhhB,GACA,MAAAA,MAAA,aAEA,QAAAqgB,IAAA1F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAA1O,EAAA7G,EAAA,KAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAqd,IAAAtF,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAA3a,GAAAoF,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAud,IAAAxF,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAA3O,GAAA5G,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAsd,IAAAvF,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAmB,GAAA1W,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA0d,IAAA3F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAoB,GAAA3W,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAA2d,IAAA5F,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAqB,GAAA5W,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAwd,IAAAzF,EAAAc,EAAAtW,GACA4b,GAAAhX,UAAA,CACA,IAAA3E,GAAA2b,GAAApN,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,IAAAuV,EAAAsB,GAAA7W,EAAA,GAAAD,EAAAC,EAAA,GAAAxC,QAAA,GAEA,QAAAmd,IAAA/f,GACA,GAAA6F,GAAA7F,EAAAihB,oBAAAC,EAAArb,EAAA,UAAAsb,EAAApJ,GAAAlS,GAAA,KAAAub,EAAArJ,GAAAlS,GAAA,EACA,OAAAqb,GAAAhC,GAAAiC,EAAA,OAAAjC,GAAAkC,EAAA,OAEA,QAAAN,IAAAnG,EAAAc,EAAAtW,GACAkc,GAAAtX,UAAA,CACA,IAAA3E,GAAAic,GAAA1N,KAAA8H,EAAA1X,MAAAoB,IAAA,GACA,OAAAC,GAAAD,EAAAC,EAAA,GAAAxC,OAAA,GAEA,QAAAgc,IAAA0C,GAEA,IADA,GAAAlc,GAAAkc,EAAA1e,OAAAuC,EAAA,KACAA,EAAAC,GAAAkc,EAAAnc,GAAA,GAAA1G,KAAA6iB,EAAAnc,GAAA,GACA,iBAAAwV,GAEA,IADA,GAAAxV,GAAA,EAAAmK,EAAAgS,EAAAnc,IACAmK,EAAA,GAAAqL,IAAArL,EAAAgS,IAAAnc,EACA,OAAAmK,GAAA,GAAAqL,IAyBA,QAAA4G,OAiBA,QAAAC,IAAAxf,EAAAC,EAAAyL,GACA,GAAA3N,GAAA2N,EAAA/G,EAAA3E,EAAAC,EAAAwf,EAAA1hB,EAAAiC,EAAA0f,EAAA3hB,EAAA0hB,CACA/T,GAAAiJ,EAAA3U,EAAA0f,GAAAzf,EAAAwf,GASA,QAAAE,IAAAC,EAAA3b,GACA2b,GAAAC,GAAAC,eAAAF,EAAAxa,OACAya,GAAAD,EAAAxa,MAAAwa,EAAA3b,GA2CA,QAAA8b,IAAAC,EAAA/b,EAAAgc,GACA,GAAAC,GAAA/c,EAAA,GAAAC,EAAA4c,EAAApf,OAAAqf,CAEA,KADAhc,EAAAkc,cACAhd,EAAAC,GAAA8c,EAAAF,EAAA7c,GAAAc,EAAA0I,MAAAuT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAjc,GAAAmc,UAEA,QAAAC,IAAAL,EAAA/b,GACA,GAAAd,GAAA,GAAAC,EAAA4c,EAAApf,MAEA,KADAqD,EAAAqc,iBACAnd,EAAAC,GAAA2c,GAAAC,EAAA7c,GAAAc,EAAA,EACAA,GAAAsc,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAAnQ,GACAoQ,IAAApQ,GAAA,EAAAjC,GAAA,CACA,IAAAsS,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAI,EAAAzS,KAAA+B,IAAAqQ,GAAAM,EAAA1S,KAAAU,IAAA0R,GAAA1f,EAAAigB,EAAAD,EAAAE,EAAAC,EAAAJ,EAAA/f,EAAAsN,KAAA+B,IAAAyQ,GAAAvR,EAAAvO,EAAA6f,EAAAvS,KAAAU,IAAA8R,EACAM,IAAAxZ,IAAA0G,KAAAuC,MAAAtB,EAAA2R,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAA7U,MAAA,SAAA+T,EAAAC,GACAa,GAAA7U,MAAA8T,EACAI,GAAAS,EAAAZ,GAAAnQ,GAAA6Q,EAAA7S,KAAA+B,IAAAqQ,GAAAY,EAAAZ,GAAApQ,GAAA,EAAAjC,GAAA,GACA4S,EAAA3S,KAAAU,IAAA0R,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAAzS,KAAA+B,IAAAqQ,EACA,QAAAK,EAAAzS,KAAA+B,IAAAoQ,GAAAM,EAAAzS,KAAAU,IAAAyR,GAAAnS,KAAAU,IAAA0R,IAEA,QAAAgB,IAAA3hB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAA2hB,IAAA5hB,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAEA,QAAA4hB,IAAA7hB,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEA,QAAA6hB,IAAAC,EAAA9gB,GACA,OAAA8gB,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAA9gB,GAEA,QAAA+gB,IAAAhkB,GACA,GAAA4F,GAAA2K,KAAAyC,KAAAhT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA4F,EACA5F,EAAA,IAAA4F,EACA5F,EAAA,IAAA4F,EAEA,QAAAqe,IAAAC,GACA,OAAA3T,KAAAuC,MAAAoR,EAAA,GAAAA,EAAA,IAAAzT,GAAAyT,EAAA,KAEA,QAAAC,IAAAniB,EAAAC,GACA,MAAA8V,IAAA/V,EAAA,GAAAC,EAAA,IAAAmiB,IAAArM,GAAA/V,EAAA,GAAAC,EAAA,IAAAmiB,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAAnQ,EACA,IAAAyQ,GAAAzS,KAAA+B,IAAAqQ,GAAApQ,GACA+R,IAAAtB,EAAAzS,KAAA+B,IAAAoQ,GAAAM,EAAAzS,KAAAU,IAAAyR,GAAAnS,KAAAU,IAAA0R,IAEA,QAAA2B,IAAAvkB,EAAAG,EAAA2F,KACA0e,GACAC,KAAAzkB,EAAAykB,IAAAD,GACAE,KAAAvkB,EAAAukB,IAAAF,GACAG,KAAA7e,EAAA6e,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAAnQ,EACA,IAAAyQ,GAAAzS,KAAA+B,IAAAqQ,GAAApQ,IAAAxS,EAAAijB,EAAAzS,KAAA+B,IAAAoQ,GAAAxiB,EAAA8iB,EAAAzS,KAAAU,IAAAyR,GAAA7c,EAAA0K,KAAAU,IAAA0R,GAAA1U,EAAAsC,KAAAuC,MAAAvC,KAAAyC,MAAA/E,EAAA2W,EAAA/e,EAAAgf,EAAA3kB,GAAA+N,KAAA4W,EAAA9kB,EAAA+kB,EAAAjf,GAAAoI,KAAA6W,EAAA5kB,EAAA0kB,EAAA7kB,GAAAkO,GAAA6W,EAAA/kB,EAAA6kB,EAAA1kB,EAAA2kB,EAAAhf,EACAkf,KAAA9W,EACA+W,IAAA/W,GAAA6W,KAAA/kB,IACAklB,IAAAhX,GAAA2W,KAAA1kB,IACAglB,IAAAjX,GAAA4W,KAAAhf,IACAye,GAAAQ,EAAAF,EAAAC,GAjBA,GAAAC,GAAAF,EAAAC,CACAM,IAAAxW,MAAA,SAAA+T,EAAAC,GACAD,GAAAnQ,EACA,IAAAyQ,GAAAzS,KAAA+B,IAAAqQ,GAAApQ,GACAuS,GAAA9B,EAAAzS,KAAA+B,IAAAoQ,GACAkC,EAAA5B,EAAAzS,KAAAU,IAAAyR,GACAmC,EAAAtU,KAAAU,IAAA0R,GACAwC,GAAAxW,MAAA8T,EACA6B,GAAAQ,EAAAF,EAAAC,IAYA,QAAAO,MACAD,GAAAxW,MAAA0V,GAEA,QAAAgB,MAiBA,QAAA5C,GAAAC,EAAAC,GACAD,GAAAnQ,EACA,IAAAyQ,GAAAzS,KAAA+B,IAAAqQ,GAAApQ,IAAAxS,EAAAijB,EAAAzS,KAAA+B,IAAAoQ,GAAAxiB,EAAA8iB,EAAAzS,KAAAU,IAAAyR,GAAA7c,EAAA0K,KAAAU,IAAA0R,GAAA2C,EAAAV,EAAA/e,EAAAgf,EAAA3kB,EAAAqlB,EAAAV,EAAA9kB,EAAA+kB,EAAAjf,EAAA2f,EAAAV,EAAA5kB,EAAA0kB,EAAA7kB,EAAAkM,EAAAsE,KAAAyC,KAAAsS,IAAAC,IAAAC,KAAArC,EAAA2B,EAAA/kB,EAAA6kB,EAAA1kB,EAAA2kB,EAAAhf,EAAA2L,EAAAvF,IAAAoE,GAAA8S,GAAAlX,EAAAgC,EAAAsC,KAAAuC,MAAA7G,EAAAkX,EACAsC,KAAAjU,EAAA8T,EACAI,IAAAlU,EAAA+T,EACAI,IAAAnU,EAAAgU,EACAT,IAAA9W,EACA+W,IAAA/W,GAAA6W,KAAA/kB,IACAklB,IAAAhX,GAAA2W,KAAA1kB,IACAglB,IAAAjX,GAAA4W,KAAAhf,IACAye,GAAAQ,EAAAF,EAAAC,GA1BA,GAAAvB,GAAAC,EAAAuB,EAAAF,EAAAC,CACAM,IAAAxW,MAAA,SAAA+T,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAwC,GAAAxW,MAAA8T,EACAC,GAAAnQ,EACA,IAAAyQ,GAAAzS,KAAA+B,IAAAqQ,GAAApQ,GACAuS,GAAA9B,EAAAzS,KAAA+B,IAAAoQ,GACAkC,EAAA5B,EAAAzS,KAAAU,IAAAyR,GACAmC,EAAAtU,KAAAU,IAAA0R,GACA2B,GAAAQ,EAAAF,EAAAC,IAEAM,GAAA/C,QAAA,WACAK,EAAAa,EAAAC,GACA4B,GAAA/C,QAAAgD,GACAD,GAAAxW,MAAA0V,IAeA,QAAAuB,IAAA5jB,EAAAC,GACA,QAAA4jB,GAAA9lB,EAAAG,GACA,MAAAH,GAAAiC,EAAAjC,EAAAG,GAAA+B,EAAAlC,EAAA,GAAAA,EAAA,IAKA,MAHAiC,GAAA8jB,QAAA7jB,EAAA6jB,SAAAD,EAAAC,OAAA,SAAA/lB,EAAAG,GACA,MAAAH,GAAAkC,EAAA6jB,OAAA/lB,EAAAG,GAAAH,GAAAiC,EAAA8jB,OAAA/lB,EAAA,GAAAA,EAAA,MAEA8lB,EAEA,QAAAE,MACA,SAEA,QAAAC,IAAAC,EAAA1jB,EAAA2jB,EAAAC,EAAAlgB,GACA,GAAAmgB,MAAAC,IAuBA,IAtBAJ,EAAAvQ,QAAA,SAAA4Q,GACA,MAAAlhB,EAAAkhB,EAAA1jB,OAAA,QACA,GAAAwC,GAAAmhB,EAAAD,EAAA,GAAAE,EAAAF,EAAAlhB,EACA,IAAA+e,GAAAoC,EAAAC,GAAA,CACAvgB,EAAAkc,WACA,QAAAhd,GAAA,EAAuBC,EAAAD,IAAOA,EAAAc,EAAA0I,OAAA4X,EAAAD,EAAAnhB,IAAA,GAAAohB,EAAA,GAE9B,YADAtgB,GAAAmc,UAGA,GAAApgB,GAAA,GAAAykB,IAAAF,EAAAD,EAAA,SAAArkB,EAAA,GAAAwkB,IAAAF,EAAA,KAAAvkB,GAAA,EACAA,GAAA0L,EAAAzL,EACAmkB,EAAAxlB,KAAAoB,GACAqkB,EAAAzlB,KAAAqB,GACAD,EAAA,GAAAykB,IAAAD,EAAAF,EAAA,SACArkB,EAAA,GAAAwkB,IAAAD,EAAA,KAAAxkB,GAAA,GACAA,EAAA0L,EAAAzL,EACAmkB,EAAAxlB,KAAAoB,GACAqkB,EAAAzlB,KAAAqB,MAEAokB,EAAAK,KAAAnkB,GACAokB,GAAAP,GACAO,GAAAN,GACAD,EAAAxjB,OAAA,CACA,OAAAuC,GAAA,EAAAyhB,EAAAV,EAAA9gB,EAAAihB,EAAAzjB,OAA6DwC,EAAAD,IAAOA,EACpEkhB,EAAAlhB,GAAAyB,EAAAggB,IAGA,KADA,GAAAC,GAAAlY,EAAAmY,EAAAV,EAAA,KACA,CAEA,IADA,GAAAW,GAAAD,EAAAE,GAAA,EACAD,EAAAvV,GAAA,IAAAuV,IAAA3hB,KAAA0hB,EAAA,MACAD,GAAAE,EAAAlhB,EACAI,EAAAkc,WACA,IAEA,GADA4E,EAAAvV,EAAAuV,EAAArZ,EAAA8D,GAAA,EACAuV,EAAAngB,EAAA,CACA,GAAAogB,EACA,OAAA7hB,GAAA,EAAAC,EAAAyhB,EAAAjkB,OAA8CwC,EAAAD,IAAOA,EAAAc,EAAA0I,SAAAkY,EAAA1hB,IAAA,GAAAwJ,EAAA,QAErDwX,GAAAY,EAAAhnB,EAAAgnB,EAAA3hB,EAAArF,EAAA,EAAAkG,EAEA8gB,KAAA3hB,MACS,CACT,GAAA4hB,EAAA,CACAH,EAAAE,EAAArP,EAAA7R,CACA,QAAAV,GAAA0hB,EAAAjkB,OAAA,EAA2CuC,GAAA,IAAQA,EAAAc,EAAA0I,SAAAkY,EAAA1hB,IAAA,GAAAwJ,EAAA,QAEnDwX,GAAAY,EAAAhnB,EAAAgnB,EAAArP,EAAA3X,EAAA,GAAAkG,EAEA8gB,KAAArP,EAEAqP,IAAArZ,EACAmZ,EAAAE,EAAAlhB,EACAmhB,YACOD,EAAAvV,EACPvL,GAAAmc,YAGA,QAAAuE,IAAAM,GACA,GAAA7hB,EAAA6hB,EAAArkB,OAAA,CAEA,IADA,GAAAwC,GAAAnD,EAAAkD,EAAA,EAAAnD,EAAAilB,EAAA,KACA9hB,EAAAC,GACApD,EAAAoD,EAAAnD,EAAAglB,EAAA9hB,GACAlD,EAAAyV,EAAA1V,EACAA,EAAAC,CAEAD,GAAAoD,EAAAnD,EAAAglB,EAAA,GACAhlB,EAAAyV,EAAA1V,GAEA,QAAAykB,IAAA9X,EAAAkY,EAAAK,EAAAN,GACAnoB,KAAAsB,EAAA4O,EACAlQ,KAAAoH,EAAAghB,EACApoB,KAAAiP,EAAAwZ,EACAzoB,KAAAmI,EAAAggB,EACAnoB,KAAA+S,GAAA,EACA/S,KAAA2G,EAAA3G,KAAAiZ,EAAA,KAEA,QAAAyP,IAAAC,EAAAC,EAAAlB,EAAAmB,GACA,gBAAAC,EAAAthB,GAuCA,QAAA0I,GAAA+T,EAAAC,GACA,GAAAhU,GAAA4Y,EAAA7E,EAAAC,EACAyE,GAAA1E,EAAA/T,EAAA,GAAAgU,EAAAhU,EAAA,KAAA1I,EAAA0I,MAAA+T,EAAAC,GAEA,QAAA6E,GAAA9E,EAAAC,GACA,GAAAhU,GAAA4Y,EAAA7E,EAAAC,EACA7iB,GAAA6O,QAAA,GAAAA,EAAA,IAEA,QAAAwT,KACAkE,EAAA1X,MAAA6Y,EACA1nB,EAAAqiB,YAEA,QAAAC,KACAiE,EAAA1X,QACA7O,EAAAsiB,UAIA,QAAAqF,GAAA/E,EAAAC,GACA+E,EAAA9mB,MAAA8hB,EAAAC,GACA,IAAAhU,GAAA4Y,EAAA7E,EAAAC,EACAgF,GAAAhZ,QAAA,GAAAA,EAAA,IAEA,QAAAiZ,KACAD,EAAAxF,YACAuF,KAEA,QAAAG,KACAJ,EAAAC,EAAA,MAAAA,EAAA,OACAC,EAAAvF,SACA,IAAAkE,GAAAwB,EAAAH,EAAAG,QAAAC,EAAAC,WAAA5iB,EAAA2iB,EAAAnlB,MAIA,IAHA8kB,EAAAO,MACAC,EAAAtnB,KAAA8mB,GACAA,EAAA,KACAtiB,EACA,KAAA0iB,EAAA,CACAxB,EAAAyB,EAAA,EACA,IAAApZ,GAAAvJ,EAAAkhB,EAAA1jB,OAAA,EAAAuC,EAAA,EACA,IAAAC,EAAA,GAGA,IAFA+iB,IAAAliB,EAAAqc,eAAA6F,GAAA,GACAliB,EAAAkc,cACAhd,EAAAC,GAAAa,EAAA0I,SAAA2X,EAAAnhB,IAAA,GAAAwJ,EAAA,GACA1I,GAAAmc,eAIAhd,GAAA,KAAA0iB,GAAAC,EAAAnnB,KAAAmnB,EAAAE,MAAA7hB,OAAA2hB,EAAAK,UACAnC,EAAArlB,KAAAmnB,EAAAxa,OAAA8a,KArFA,GAsDApC,GACAiC,EAAAR,EAvDA5nB,EAAAunB,EAAAphB,GAAAqiB,EAAAf,EAAAzB,OAAAwB,EAAA,GAAAA,EAAA,IACAjB,GACA1X,QACAwT,YACAC,UACAE,aAAA,WACA+D,EAAA1X,MAAA8Y,EACApB,EAAAlE,UAAAyF,EACAvB,EAAAjE,QAAAyF,EACA5B,KACAiC,MAEA3F,WAAA,WACA8D,EAAA1X,QACA0X,EAAAlE,YACAkE,EAAAjE,UACA6D,EAAAzf,GAAA+hB,MAAAtC,EACA,IAAAC,GAAAsC,GAAAF,EAAAJ,EACAjC,GAAArjB,QACAulB,IAAAliB,EAAAqc,eAAA6F,GAAA,GACAnC,GAAAC,EAAAwC,GAAAvC,EAAAC,EAAAlgB,IACWigB,IACXiC,IAAAliB,EAAAqc,eAAA6F,GAAA,GACAliB,EAAAkc,YACAgE,EAAA,YAAAlgB,GACAA,EAAAmc,WAEA+F,IAAAliB,EAAAsc,aAAA4F,GAAA,GACAlC,EAAAiC,EAAA,MAEAQ,OAAA,WACAziB,EAAAqc,eACArc,EAAAkc,YACAgE,EAAA,YAAAlgB,GACAA,EAAAmc,UACAnc,EAAAsc,eAoBAyF,EAAAW,KAAAhB,EAAAN,EAAAW,GAAAG,GAAA,CAgCA,OAAA9B,IAGA,QAAAgC,IAAA/B,GACA,MAAAA,GAAA1jB,OAAA,EAEA,QAAA+lB,MACA,GAAA7oB,GAAA8oB,IACA,QACAzG,UAAA,WACAyG,EAAAhoB,KAAAd,OAEA6O,MAAA,SAAA+T,EAAAC,GACA7iB,EAAAc,MAAA8hB,EAAAC,KAEAP,QAAA7c,EACAyiB,OAAA,WACA,GAAAA,GAAAY,CAGA,OAFAA,MACA9oB,EAAA,KACAkoB,GAEAa,OAAA,WACAD,EAAAhmB,OAAA,GAAAgmB,EAAAhoB,KAAAgoB,EAAAX,MAAA7hB,OAAAwiB,EAAAR,YAIA,QAAAK,IAAAzmB,EAAAC,GACA,QAAAD,IAAAjC,GAAA,KAAAiC,EAAA,GAAA0O,GAAA0T,GAAA1T,GAAA1O,EAAA,MAAAC,IAAAlC,GAAA,KAAAkC,EAAA,GAAAyO,GAAA0T,GAAA1T,GAAAzO,EAAA,IAGA,QAAA6mB,IAAA7iB,GACA,GAAA6hB,GAAAjF,EAAA3gB,IAAA6mB,EAAA7mB,IAAA8mB,EAAA9mB,GACA,QACAigB,UAAA,WACAlc,EAAAkc,YACA2F,EAAA,GAEAnZ,MAAA,SAAAsa,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAA3Y,OAAAsS,EAAA7K,GAAAkR,EAAApG,EACA9K,IAAA6K,EAAAtS,IAAA8T,IACAne,EAAA0I,MAAAkU,EAAAkG,KAAAG,GAAA,IAAAxY,QACAzK,EAAA0I,MAAAqa,EAAAD,GACA9iB,EAAAmc,UACAnc,EAAAkc,YACAlc,EAAA0I,MAAAwa,EAAAJ,GACA9iB,EAAA0I,MAAAsa,EAAAF,GACAjB,EAAA,GACSkB,IAAAG,GAAAvG,GAAAtS,KACTyH,GAAA8K,EAAAmG,GAAA5E,KAAAvB,GAAAmG,EAAA5E,IACArM,GAAAkR,EAAAE,GAAA/E,KAAA6E,GAAAE,EAAA/E,IACA2E,EAAAK,GAAAvG,EAAAkG,EAAAE,EAAAC,GACAjjB,EAAA0I,MAAAqa,EAAAD,GACA9iB,EAAAmc,UACAnc,EAAAkc,YACAlc,EAAA0I,MAAAwa,EAAAJ,GACAjB,EAAA,GAEA7hB,EAAA0I,MAAAkU,EAAAoG,EAAAF,EAAAG,GACAF,EAAAG,GAEA/G,QAAA,WACAnc,EAAAmc,UACAS,EAAAkG,EAAA7mB,KAEA4lB,MAAA,WACA,SAAAA,IAIA,QAAAsB,IAAAvG,EAAAkG,EAAAE,EAAAC,GACA,GAAA9F,GAAAiG,EAAAC,EAAA/Y,KAAAU,IAAA4R,EAAAoG,EACA,OAAAlR,IAAAuR,GAAAlF,GAAA7T,KAAAgZ,MAAAhZ,KAAAU,IAAA8X,IAAAM,EAAA9Y,KAAA+B,IAAA4W,IAAA3Y,KAAAU,IAAAgY,GAAA1Y,KAAAU,IAAAiY,IAAA9F,EAAA7S,KAAA+B,IAAAyW,IAAAxY,KAAAU,IAAA4R,KAAAO,EAAAiG,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,EAAA1jB,GACA,GAAA0c,EACA,UAAA8G,EACA9G,EAAAgH,EAAAjZ,GACAzK,EAAA0I,OAAA2B,GAAAqS,GACA1c,EAAA0I,MAAA,EAAAgU,GACA1c,EAAA0I,MAAA2B,GAAAqS,GACA1c,EAAA0I,MAAA2B,GAAA,GACArK,EAAA0I,MAAA2B,IAAAqS,GACA1c,EAAA0I,MAAA,GAAAgU,GACA1c,EAAA0I,OAAA2B,IAAAqS,GACA1c,EAAA0I,OAAA2B,GAAA,GACArK,EAAA0I,OAAA2B,GAAAqS,OACK,IAAA5K,GAAA0R,EAAA,GAAAC,EAAA,IAAAtF,GAAA,CACL,GAAAzd,GAAA8iB,EAAA,GAAAC,EAAA,GAAApZ,MACAqS,GAAAgH,EAAAhjB,EAAA,EACAV,EAAA0I,OAAAhI,EAAAgc,GACA1c,EAAA0I,MAAA,EAAAgU,GACA1c,EAAA0I,MAAAhI,EAAAgc,OAEA1c,GAAA0I,MAAA+a,EAAA,GAAAA,EAAA,IAGA,QAAAlB,IAAA7Z,EAAAuZ,GACA,GAAA0B,GAAAjb,EAAA,GAAAkb,EAAAlb,EAAA,GAAAmb,GAAAvZ,KAAAU,IAAA2Y,IAAArZ,KAAA+B,IAAAsX,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACA3G,IAAA4G,OACA,QAAA9kB,GAAA,EAAAC,EAAA8iB,EAAAtlB,OAAuCwC,EAAAD,IAAOA,EAAA,CAC9C,GAAAuiB,GAAAQ,EAAA/iB,GAAA8G,EAAAyb,EAAA9kB,MACA,IAAAqJ,EAEA,IADA,GAAAie,GAAAxC,EAAA,GAAA7E,EAAAqH,EAAA,GAAAnB,EAAAmB,EAAA,KAAA5Z,GAAA,EAAA4S,EAAA3S,KAAAU,IAAA8X,GAAA3F,EAAA7S,KAAA+B,IAAAyW,GAAA/c,EAAA,IACA,CACAA,IAAAC,IAAAD,EAAA,GACA2C,EAAA+Y,EAAA1b,EACA,IAAA0W,GAAA/T,EAAA,GAAAgU,EAAAhU,EAAA,KAAA2B,GAAA,EAAA2S,EAAA1S,KAAAU,IAAA0R,GAAAK,EAAAzS,KAAA+B,IAAAqQ,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAuH,EAAApH,EAAAzS,GAAArN,EAAAigB,EAAAD,CAGA,IAFAI,GAAAxZ,IAAA0G,KAAAuC,MAAA7P,EAAA6f,EAAAvS,KAAAU,IAAA8R,GAAAK,EAAAJ,EAAA/f,EAAAsN,KAAA+B,IAAAyQ,KACAgH,GAAAI,EAAAvH,EAAAE,EAAAsH,GAAAxH,EACAuH,EAAAtH,GAAA+G,EAAAlH,GAAAkH,EAAA,CACA,GAAAS,GAAAzG,GAAAH,GAAAyG,GAAAzG,GAAA9U,GACAqV,IAAAqG,EACA,IAAAC,GAAA1G,GAAAkG,EAAAO,EACArG,IAAAsG,EACA,IAAAC,IAAAJ,EAAAvH,GAAA,QAAAnS,GAAA6Z,EAAA,KACAT,EAAAU,GAAAV,IAAAU,IAAAF,EAAA,IAAAA,EAAA,OACAL,GAAAG,EAAAvH,GAAA,QAGA,IAAA5W,IAAA,KACA6W,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAkH,EAAAvb,GAGA,QAAAyV,GAAA2F,GAAA3F,GAAA2F,IAAA3F,GAAAf,IAAA,EAAA2G,EAEA,QAAAQ,IAAAC,GAGA,QAAAC,GAAAhI,EAAAC,GACA,MAAApS,MAAA+B,IAAAoQ,GAAAnS,KAAA+B,IAAAqQ,GAAAgI,EAEA,QAAAtD,GAAAphB,GACA,GAAAikB,GAAAU,EAAAC,EAAAC,EAAAhD,CACA,QACA3F,UAAA,WACA2I,EAAAD,GAAA,EACA/C,EAAA,GAEAnZ,MAAA,SAAA+T,EAAAC,GACA,GAAAoI,GAAAC,GAAAtI,EAAAC,GAAAnR,EAAAkZ,EAAAhI,EAAAC,GAAAhZ,EAAAshB,EAAAzZ,EAAA,EAAA0Z,EAAAxI,EAAAC,GAAAnR,EAAA0Z,EAAAxI,GAAA,EAAAA,EAAApS,QAAAqS,GAAA,CAUA,KATAuH,IAAAY,EAAAD,EAAArZ,IAAAvL,EAAAkc,YACA3Q,IAAAqZ,IACAE,EAAAI,EAAAjB,EAAAc,IACA7G,GAAA+F,EAAAa,IAAA5G,GAAA6G,EAAAD,MACAC,EAAA,IAAA5G,GACA4G,EAAA,IAAA5G,GACA5S,EAAAkZ,EAAAM,EAAA,GAAAA,EAAA,MAGAxZ,IAAAqZ,EACA/C,EAAA,EACAtW,GACAvL,EAAAkc,YACA4I,EAAAI,EAAAH,EAAAd,GACAjkB,EAAA0I,MAAAoc,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAjB,EAAAc,GACA/kB,EAAA0I,MAAAoc,EAAA,GAAAA,EAAA,IACA9kB,EAAAmc,WAEA8H,EAAAa,MACW,IAAAK,GAAAlB,GAAAe,EAAAzZ,EAAA,CACX,GAAAmF,EACAhN,GAAAihB,KAAAjU,EAAAwU,EAAAH,EAAAd,GAAA,MACApC,EAAA,EACAmD,GACAhlB,EAAAkc,YACAlc,EAAA0I,MAAAgI,EAAA,MAAAA,EAAA,OACA1Q,EAAA0I,MAAAgI,EAAA,MAAAA,EAAA,OACA1Q,EAAAmc,YAEAnc,EAAA0I,MAAAgI,EAAA,MAAAA,EAAA,OACA1Q,EAAAmc,UACAnc,EAAAkc,YACAlc,EAAA0I,MAAAgI,EAAA,MAAAA,EAAA,UAIAnF,GAAA0Y,GAAA/F,GAAA+F,EAAAc,IACA/kB,EAAA0I,MAAAqc,EAAA,GAAAA,EAAA,IAEAd,EAAAc,EAAAH,EAAArZ,EAAAoZ,EAAAjhB,GAEAyY,QAAA,WACAyI,GAAA5kB,EAAAmc,UACA8H,EAAA,MAEApC,MAAA,WACA,MAAAA,IAAAgD,GAAAD,IAAA,IAIA,QAAAM,GAAAnpB,EAAAC,EAAAopB,GACA,GAAAC,GAAA7H,GAAAzhB,GAAAupB,EAAA9H,GAAAxhB,GACAupB,GAAA,OAAAC,EAAA7H,GAAA0H,EAAAC,GAAAG,EAAA/H,GAAA8H,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,GACA,KAAAC,EAAA,OAAAP,GAAArpB,CACA,IAAA6pB,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAAnI,GAAA4H,EAAAC,GAAA1M,EAAA+E,GAAA0H,EAAAK,GAAA5M,EAAA6E,GAAA2H,EAAAK,EACAjI,IAAA9E,EAAAE,EACA,IAAAkE,GAAA4I,EAAA9d,EAAA0V,GAAA5E,EAAAoE,GAAA6I,EAAArI,GAAAR,KAAA8I,EAAAhe,IAAA+d,GAAArI,GAAA5E,KAAA,EACA,QAAAkN,GAAA,CACA,GAAAtV,GAAApG,KAAAyC,KAAAiZ,GAAAC,EAAApI,GAAAX,IAAAlV,EAAA0I,GAAAqV,EAGA,IAFAnI,GAAAqI,EAAAnN,GACAmN,EAAAjI,GAAAiI,IACAb,EAAA,MAAAa,EACA,IAAArmB,GAAAgd,EAAA7gB,EAAA,GAAAinB,EAAAhnB,EAAA,GAAA8mB,EAAA/mB,EAAA,GAAAknB,EAAAjnB,EAAA,EACA4gB,GAAAoG,IAAApjB,EAAAgd,IAAAoG,IAAApjB,EACA,IAAAsmB,GAAAlD,EAAApG,EAAAuJ,EAAArU,GAAAoU,EAAA7b,IAAA8T,GAAAwF,EAAAwC,GAAAhI,GAAA+H,CAEA,KADAC,GAAArD,EAAAG,IAAArjB,EAAAkjB,IAAAG,IAAArjB,GACA+jB,EAAAwC,EAAArD,EAAAG,EAAA,EAAAgD,EAAA,IAAAnU,GAAAmU,EAAA,GAAArJ,GAAAuB,GAAA2E,EAAAG,GAAAH,GAAAmD,EAAA,IAAAA,EAAA,IAAAhD,EAAAiD,EAAA7b,IAAAuS,GAAAqJ,EAAA,IAAAA,EAAA,IAAAjD,GAAA,CACA,GAAAoD,GAAAvI,GAAAX,IAAAlV,EAAA0I,GAAAqV,EAEA,OADAnI,IAAAwI,EAAAtN,IACAmN,EAAAjI,GAAAoI,MAGA,QAAAnB,GAAAxI,EAAAC,GACA,GAAAxQ,GAAA8Y,EAAAR,EAAAna,GAAAma,EAAAS,EAAA,CAGA,QAFA/Y,EAAAuQ,EAAAwI,GAAA,EAA4BxI,EAAAvQ,IAAA+Y,GAAA,IAC5B/Y,EAAAwQ,EAAAuI,GAAA,EAA4BvI,EAAAxQ,IAAA+Y,GAAA,GAC5BA,EA5FA,GAAAP,GAAApa,KAAA+B,IAAAmY,GAAAQ,EAAAN,EAAA,EAAAS,EAAArT,GAAA4S,GAAAvG,GAAA+B,EAAAmG,GAAA7B,EAAA,EAAAlY,GACA,OAAA4U,IAAAuD,EAAArD,EAAAlB,EAAA8E,GAAA,GAAAR,KAAAna,GAAAma,EAAAna,KA8FA,QAAAic,IAAAzH,EAAAF,EAAA4H,EAAAC,GACA,gBAAA3sB,GACA,GAAAqS,GAAAnQ,EAAAlC,EAAAkC,EAAAC,EAAAnC,EAAAmC,EAAAyqB,EAAA1qB,EAAAjC,EAAA4sB,EAAA3qB,EAAA9B,EAAA0sB,EAAA3qB,EAAAlC,EAAA8sB,EAAA5qB,EAAA/B,EAAAoX,EAAA,EAAAC,EAAA,EAAAuV,EAAAF,EAAAF,EAAAK,EAAAF,EAAAF,CAEA,IADAxa,EAAA2S,EAAA4H,EACAI,KAAA3a,EAAA,IAEA,GADAA,GAAA2a,EACA,EAAAA,EAAA,CACA,GAAAxV,EAAAnF,EAAA,MACAoF,GAAApF,IAAAoF,EAAApF,OACO,IAAA2a,EAAA,GACP,GAAA3a,EAAAoF,EAAA,MACApF,GAAAmF,MAAAnF,GAGA,GADAA,EAAAqa,EAAAE,EACAI,KAAA,EAAA3a,GAAA,CAEA,GADAA,GAAA2a,EACA,EAAAA,EAAA,CACA,GAAA3a,EAAAoF,EAAA,MACApF,GAAAmF,MAAAnF,OACO,IAAA2a,EAAA,GACP,GAAAxV,EAAAnF,EAAA,MACAoF,GAAApF,IAAAoF,EAAApF,GAGA,GADAA,EAAAyS,EAAA+H,EACAI,KAAA5a,EAAA,IAEA,GADAA,GAAA4a,EACA,EAAAA,EAAA,CACA,GAAAzV,EAAAnF,EAAA,MACAoF,GAAApF,IAAAoF,EAAApF,OACO,IAAA4a,EAAA,GACP,GAAA5a,EAAAoF,EAAA,MACApF,GAAAmF,MAAAnF,GAGA,GADAA,EAAAsa,EAAAE,EACAI,KAAA,EAAA5a,GAAA,CAEA,GADAA,GAAA4a,EACA,EAAAA,EAAA,CACA,GAAA5a,EAAAoF,EAAA,MACApF,GAAAmF,MAAAnF,OACO,IAAA4a,EAAA,GACP,GAAAzV,EAAAnF,EAAA,MACAoF,GAAApF,IAAAoF,EAAApF,GAUA,MARAmF,GAAA,IAAAxX,EAAAkC,GACAjC,EAAA2sB,EAAApV,EAAAwV,EACA5sB,EAAAysB,EAAArV,EAAAyV,IAEA,EAAAxV,IAAAzX,EAAAmC,GACAlC,EAAA2sB,EAAAnV,EAAAuV,EACA5sB,EAAAysB,EAAApV,EAAAwV,IAEAjtB,OAqBA,QAAAktB,IAAAlI,EAAAF,EAAA4H,EAAAC,GA2HA,QAAAQ,GAAAvV,EAAAiS,GACA,MAAA5R,IAAAL,EAAA,GAAAoN,GAAAV,GAAAuF,EAAA,MAAA5R,GAAAL,EAAA,GAAA8U,GAAApI,GAAAuF,EAAA,MAAA5R,GAAAL,EAAA,GAAAkN,GAAAR,GAAAuF,EAAA,MAAAA,EAAA,MAEA,QAAApnB,GAAAP,EAAAC,GACA,MAAAirB,GAAAlrB,EAAAjC,EAAAkC,EAAAlC,GAEA,QAAAmtB,GAAAlrB,EAAAC,GACA,GAAAkrB,GAAAF,EAAAjrB,EAAA,GAAAorB,EAAAH,EAAAhrB,EAAA,EACA,OAAAkrB,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAAlrB,EAAA,GAAAD,EAAA,OAAAmrB,EAAAnrB,EAAA,GAAAC,EAAA,OAAAkrB,EAAAnrB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAlIA,gBAAAiE,GA+BA,QAAAonB,GAAA3V,GAEA,OADA4V,GAAA,EAAAloB,EAAA8iB,EAAAtlB,OAAA1C,EAAAwX,EAAA,GACAvS,EAAA,EAAuBC,EAAAD,IAAOA,EAC9B,OAAAlD,GAAA+J,EAAA,EAAAwF,EAAA0W,EAAA/iB,GAAA8G,EAAAuF,EAAA5O,OAAAZ,EAAAwP,EAAA,GAAoEvF,EAAAD,IAAOA,EAC3E/J,EAAAuP,EAAAxF,GACAhK,EAAA,IAAA9B,EACA+B,EAAA,GAAA/B,GAAAkQ,GAAApO,EAAAC,EAAAyV,GAAA,KAAA4V,EAEArrB,EAAA,IAAA/B,GAAAkQ,GAAApO,EAAAC,EAAAyV,GAAA,KAAA4V,EAEAtrB,EAAAC,CAGA,YAAAqrB,EAEA,QAAAnH,GAAAsD,EAAAC,EAAAC,EAAA1jB,GACA,GAAAjE,GAAA,EAAAurB,EAAA,CACA,UAAA9D,IAAAznB,EAAAirB,EAAAxD,EAAAE,OAAA4D,EAAAN,EAAAvD,EAAAC,KAAAuD,EAAAzD,EAAAC,GAAA,EAAAC,EAAA,GACA,EACA1jB,GAAA0I,MAAA,IAAA3M,GAAA,IAAAA,EAAA8iB,EAAA0H,EAAAxqB,EAAA,EAAAyqB,EAAA7H,UACW5iB,KAAA2nB,EAAA,QAAA4D,OAEXtnB,GAAA0I,MAAA+a,EAAA,GAAAA,EAAA,IAGA,QAAAtC,GAAArnB,EAAAG,GACA,MAAAH,IAAA+kB,GAAA0H,GAAAzsB,GAAAG,GAAA0kB,GAAA6H,GAAAvsB,EAEA,QAAAyO,GAAA5O,EAAAG,GACAknB,EAAArnB,EAAAG,IAAA+F,EAAA0I,MAAA5O,EAAAG,GAGA,QAAAiiB,KACAkE,EAAA1X,MAAA6e,EACAtF,KAAAtnB,KAAA8mB,MACA+F,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAA1rB,IAEA,QAAAkgB,KACA6D,IACAuH,EAAAK,EAAAC,GACAC,GAAAL,GAAAM,EAAAnF,SACA5C,EAAArlB,KAAAotB,EAAAhG,WAEA3B,EAAA1X,QACA+e,GAAAznB,EAAAmc,UAEA,QAAAoL,GAAAztB,EAAAG,GACAH,EAAAwQ,KAAA+C,KAAA2a,GAAA1d,KAAAiD,IAAAya,GAAAluB,IACAG,EAAAqQ,KAAA+C,KAAA2a,GAAA1d,KAAAiD,IAAAya,GAAA/tB,GACA,IAAAsR,GAAA4V,EAAArnB,EAAAG,EAEA,IADAgoB,GAAAR,EAAA9mB,MAAAb,EAAAG,IACAutB,EACAI,EAAA9tB,EAAA+tB,EAAA5tB,EAAA6tB,EAAAvc,EACAic,GAAA,EACAjc,IACAvL,EAAAkc,YACAlc,EAAA0I,MAAA5O,EAAAG,QAGA,IAAAsR,GAAAkc,EAAAznB,EAAA0I,MAAA5O,EAAAG,OAA4C,CAC5C,GAAA0F,IACA5D,GACAjC,EAAA4tB,EACAztB,EAAA0tB,GAEA3rB,GACAlC,IACAG,KAGAmnB,GAAAzhB,IACA8nB,IACAznB,EAAAkc,YACAlc,EAAA0I,MAAA/I,EAAA5D,EAAAjC,EAAA6F,EAAA5D,EAAA9B,IAEA+F,EAAA0I,MAAA/I,EAAA3D,EAAAlC,EAAA6F,EAAA3D,EAAA/B,GACAsR,GAAAvL,EAAAmc,UACA0F,GAAA,GACatW,IACbvL,EAAAkc,YACAlc,EAAA0I,MAAA5O,EAAAG,GACA4nB,GAAA,GAIA6F,EAAA5tB,EAAA6tB,EAAA1tB,EAAAwtB,EAAAlc,EArHA,GAAAyU,GAAAiC,EAAAR,EA6DAmG,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAAD,EAAA3F,EA7DAoG,EAAAjoB,EAAA+nB,EAAArF,KAAAtB,EAAAkF,GAAAzH,EAAAF,EAAA4H,EAAAC,GACApG,GACA1X,QACAwT,YACAC,UACAE,aAAA,WACArc,EAAA+nB,EACA/H,KACAiC,KACAJ,GAAA,GAEAvF,WAAA,WACAtc,EAAAioB,EACAjI,EAAAzf,GAAA+hB,MAAAtC,EACA,IAAAC,GAAAmH,GAAAvI,EAAA2H,IAAA0B,EAAArG,GAAA5B,EAAAwE,EAAAzE,EAAArjB,QACAurB,GAAAzD,KACAzkB,EAAAqc,eACA6L,IACAloB,EAAAkc,YACAgE,EAAA,YAAAlgB,GACAA,EAAAmc,WAEAsI,GACA1E,GAAAC,EAAA1jB,EAAA2jB,EAAAC,EAAAlgB,GAEAA,EAAAsc,cAEA0D,EAAAiC,EAAAR,EAAA,MA4FA,OAAArB,IAaA,QAAA+H,IAAAC,GACA,GAAAtF,GAAA,EAAAG,EAAA5Y,GAAA,EAAArE,EAAAqiB,GAAAD,GAAA3W,EAAAzL,EAAA8c,EAAAG,EAKA,OAJAxR,GAAA6W,UAAA,SAAA9qB,GACA,MAAAd,WAAAC,OACAqJ,EAAA8c,EAAAtlB,EAAA,GAAA6M,GAAA,IAAA4Y,EAAAzlB,EAAA,GAAA6M,GAAA,MADAyY,EAAAzY,GAAA,IAAA4Y,EAAA5Y,GAAA;EAGAoH,EAEA,QAAA8W,IAAAzF,EAAAG,GAEA,QAAAuF,GAAA/L,EAAAC,GACA,GAAA+L,GAAAne,KAAAyC,KAAA2b,EAAA,EAAAvpB,EAAAmL,KAAAU,IAAA0R,IAAAvd,CACA,QAAAspB,EAAAne,KAAAU,IAAAyR,GAAAtd,GAAAwpB,EAAAF,EAAAne,KAAA+B,IAAAoQ,IAHA,GAAAQ,GAAA3S,KAAAU,IAAA8X,GAAA3jB,GAAA8d,EAAA3S,KAAAU,IAAAiY,IAAA,EAAAyF,EAAA,EAAAzL,GAAA,EAAA9d,EAAA8d,GAAA0L,EAAAre,KAAAyC,KAAA2b,GAAAvpB,CASA,OAJAqpB,GAAA3I,OAAA,SAAA/lB,EAAAG,GACA,GAAA2uB,GAAAD,EAAA1uB,CACA,QAAAqQ,KAAAuC,MAAA/S,EAAA8uB,GAAAzpB,EAAAqL,IAAAke,GAAA5uB,IAAA8uB,KAAAzpB,MAAA,EAAAA,MAEAqpB,EAmGA,QAAAK,MAMA,QAAArM,GAAA1iB,EAAAG,GACA6uB,IAAAnK,EAAA7kB,EAAA+kB,EAAA5kB,EACA4kB,EAAA/kB,EAAA6kB,EAAA1kB,EAPA,GAAA8uB,GAAAC,EAAAnK,EAAAF,CACAsK,IAAAvgB,MAAA,SAAA5O,EAAAG,GACAgvB,GAAAvgB,MAAA8T,EACAuM,EAAAlK,EAAA/kB,EAAAkvB,EAAArK,EAAA1kB,GAMAgvB,GAAA9M,QAAA,WACAK,EAAAuM,EAAAC,IAWA,QAAAE,IAAApvB,EAAAG,GACAkvB,GAAArvB,IAAAqvB,GAAArvB,GACAA,EAAAsvB,QAAAtvB,GACAuvB,GAAApvB,IAAAovB,GAAApvB,GACAA,EAAAqvB,QAAArvB,GAEA,QAAAsvB,MA2BA,QAAA7gB,GAAA5O,EAAAG,GACA8nB,EAAApnB,KAAA,IAAAb,EAAA,IAAAG,EAAAuvB,GAEA,QAAAC,GAAA3vB,EAAAG,GACA8nB,EAAApnB,KAAA,IAAAb,EAAA,IAAAG,GACAyvB,EAAAhhB,MAAA6Y,EAEA,QAAAA,GAAAznB,EAAAG,GACA8nB,EAAApnB,KAAA,IAAAb,EAAA,IAAAG,GAEA,QAAAkiB,KACAuN,EAAAhhB,QAEA,QAAAihB,KACA5H,EAAApnB,KAAA,KAxCA,GAAA6uB,GAAAI,GAAA,KAAA7H,KACA2H,GACAhhB,QACAwT,UAAA,WACAwN,EAAAhhB,MAAA+gB,GAEAtN,UACAE,aAAA,WACAqN,EAAAvN,QAAAwN,GAEArN,WAAA,WACAoN,EAAAvN,UACAuN,EAAAhhB,SAEAmhB,YAAA,SAAArsB,GAEA,MADAgsB,GAAAI,GAAApsB,GACAksB,GAEAnb,OAAA,WACA,GAAAwT,EAAAplB,OAAA,CACA,GAAA4R,GAAAwT,EAAAlP,KAAA,GAEA,OADAkP,MACAxT,IAoBA,OAAAmb,GAEA,QAAAE,IAAApF,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAeA,QAAAsF,IAAAhwB,EAAAG,GACAskB,IAAAzkB,EACA0kB,IAAAvkB,IACAwkB,GAEA,QAAAsL,MAMA,QAAAvN,GAAA1iB,EAAAG,GACA,GAAA4sB,GAAA/sB,EAAA+kB,EAAAiI,EAAA7sB,EAAA0kB,EAAA/e,EAAA0K,KAAAyC,KAAA8Z,IAAAC,IACA/H,KAAAnf,GAAAif,EAAA/kB,GAAA,EACAklB,IAAApf,GAAA+e,EAAA1kB,GAAA,EACAglB,IAAArf,EACAkqB,GAAAjL,EAAA/kB,EAAA6kB,EAAA1kB,GAVA,GAAA4kB,GAAAF,CACAqL,IAAAthB,MAAA,SAAA5O,EAAAG,GACA+vB,GAAAthB,MAAA8T,EACAsN,GAAAjL,EAAA/kB,EAAA6kB,EAAA1kB,IAUA,QAAAgwB,MACAD,GAAAthB,MAAAohB,GAEA,QAAAI,MAMA,QAAA1N,GAAA1iB,EAAAG,GACA,GAAA4sB,GAAA/sB,EAAA+kB,EAAAiI,EAAA7sB,EAAA0kB,EAAA/e,EAAA0K,KAAAyC,KAAA8Z,IAAAC,IACA/H,KAAAnf,GAAAif,EAAA/kB,GAAA,EACAklB,IAAApf,GAAA+e,EAAA1kB,GAAA,EACAglB,IAAArf,EACAA,EAAA+e,EAAA7kB,EAAA+kB,EAAA5kB,EACAulB,IAAA5f,GAAAif,EAAA/kB,GACA2lB,IAAA7f,GAAA+e,EAAA1kB,GACAylB,IAAA,EAAA9f,EACAkqB,GAAAjL,EAAA/kB,EAAA6kB,EAAA1kB,GAdA,GAAA8uB,GAAAC,EAAAnK,EAAAF,CACAqL,IAAAthB,MAAA,SAAA5O,EAAAG,GACA+vB,GAAAthB,MAAA8T,EACAsN,GAAAf,EAAAlK,EAAA/kB,EAAAkvB,EAAArK,EAAA1kB,IAaA+vB,GAAA7N,QAAA,WACAK,EAAAuM,EAAAC,IAGA,QAAAmB,IAAAC,GAqBA,QAAA1hB,GAAA5O,EAAAG,GACAmwB,EAAAC,OAAAvwB,EAAA+vB,EAAA5vB,GACAmwB,EAAAhG,IAAAtqB,EAAAG,EAAA4vB,EAAA,EAAA1F,IAEA,QAAAsF,GAAA3vB,EAAAG,GACAmwB,EAAAC,OAAAvwB,EAAAG,GACAyvB,EAAAhhB,MAAA6Y,EAEA,QAAAA,GAAAznB,EAAAG,GACAmwB,EAAAE,OAAAxwB,EAAAG,GAEA,QAAAkiB,KACAuN,EAAAhhB,QAEA,QAAAihB,KACAS,EAAAG,YAnCA,GAAAV,GAAA,IACAH,GACAhhB,QACAwT,UAAA,WACAwN,EAAAhhB,MAAA+gB,GAEAtN,UACAE,aAAA,WACAqN,EAAAvN,QAAAwN,GAEArN,WAAA,WACAoN,EAAAvN,UACAuN,EAAAhhB,SAEAmhB,YAAA,SAAArsB,GAEA,MADAqsB,GAAArsB,EACAksB,GAEAnb,OAAAjP,EAmBA,OAAAoqB,GAEA,QAAAc,IAAAC,GAEA,QAAAC,GAAAhB,GACA,OAAAiB,EAAAC,EAAAC,GAAAnB,GAEA,QAAAmB,GAAAnB,GACA,MAAAoB,IAAApB,EAAA,SAAA5vB,EAAAG,GACAH,EAAA2wB,EAAA3wB,EAAAG,GACAyvB,EAAAhhB,MAAA5O,EAAA,GAAAA,EAAA,MAGA,QAAA8wB,GAAAlB,GAeA,QAAAhhB,GAAA5O,EAAAG,GACAH,EAAA2wB,EAAA3wB,EAAAG,GACAyvB,EAAAhhB,MAAA5O,EAAA,GAAAA,EAAA,IAEA,QAAAoiB,KACA2C,EAAA5iB,IACAyuB,EAAAhiB,MAAA6e,EACAmC,EAAAxN,YAEA,QAAAqL,GAAA9K,EAAAC,GACA,GAAAhZ,GAAA8Z,IAAAf,EAAAC,IAAAjL,EAAAgZ,EAAAhO,EAAAC,EACAqO,GAAAlM,EAAAF,EAAA/B,EAAAoO,EAAAC,EAAAtG,EAAA9F,EAAApN,EAAA,GAAAkN,EAAAlN,EAAA,GAAAmL,EAAAH,EAAAuO,EAAAtnB,EAAA,GAAAunB,EAAAvnB,EAAA,GAAAihB,EAAAjhB,EAAA,GAAAinB,EAAAjB,GACAA,EAAAhhB,MAAAmW,EAAAF,GAEA,QAAAxC,KACAuO,EAAAhiB,QACAghB,EAAAvN,UAEA,QAAAwF,KACAzF,IACAwO,EAAAhiB,MAAAwiB,EACAR,EAAAvO,QAAAyF,EAEA,QAAAsJ,GAAAzO,EAAAC,GACA6K,EAAAlK,EAAAZ,EAAAa,EAAAZ,GAAAqM,EAAAlK,EAAAmK,EAAArK,EAAAwM,EAAAH,EAAAI,EAAAH,EAAAI,EAAA1G,EACA+F,EAAAhiB,MAAA6e,EAEA,QAAA3F,KACAmJ,EAAAlM,EAAAF,EAAA/B,EAAAoO,EAAAC,EAAAtG,EAAAoE,EAAAC,EAAA3L,EAAA8N,EAAAC,EAAAC,EAAAV,EAAAjB,GACAgB,EAAAvO,UACAA,IA5CA,GAAAkB,GAAAC,EAAAyL,EAAAC,EAAAmC,EAAAC,EAAAC,EAAAzO,EAAAiC,EAAAF,EAAAqM,EAAAC,EAAAtG,EACA+F,GACAhiB,QACAwT,YACAC,UACAE,aAAA,WACAqN,EAAArN,eACAqO,EAAAxO,UAAAyF,GAEArF,WAAA,WACAoN,EAAApN,aACAoO,EAAAxO,aAmCA,OAAAwO,GAEA,QAAAK,GAAAlM,EAAAF,EAAA/B,EAAAoO,EAAAC,EAAAtG,EAAA4B,EAAAC,EAAAxD,EAAAsE,EAAAgE,EAAA1F,EAAA2F,EAAA7B,GACA,GAAA7C,GAAAN,EAAA1H,EAAAiI,EAAAN,EAAA7H,EAAA6M,EAAA3E,IAAAC,GACA,IAAA0E,EAAA,EAAAC,GAAAF,IAAA,CACA,GAAAxvB,GAAAivB,EAAA1D,EAAAtrB,EAAAivB,EAAAK,EAAA5nB,EAAAihB,EAAAiB,EAAA5f,EAAAsE,KAAAyC,KAAAhR,IAAAC,IAAA0H,KAAAgoB,EAAAphB,KAAAI,KAAAhH,GAAAsC,GAAA2lB,EAAA7Z,MAAApO,GAAA,GAAAya,IAAArM,GAAA8K,EAAAoG,GAAA7E,IAAAvB,EAAAoG,GAAA,EAAA1Y,KAAAuC,MAAA7Q,EAAAD,GAAA0V,EAAAgZ,EAAAkB,EAAAD,GAAAE,EAAAna,EAAA,GAAAoa,EAAApa,EAAA,GAAAqa,EAAAF,EAAA/M,EAAAkN,EAAAF,EAAAlN,EAAAqN,EAAAlF,EAAAgF,EAAAjF,EAAAkF,GACAC,IAAAR,EAAAC,GAAA3Z,IAAA+U,EAAAiF,EAAAhF,EAAAiF,GAAAP,EAAA,QAAAS,EAAAjB,EAAA1D,EAAA2D,EAAAK,EAAA3G,EAAAiB,KACAmF,EAAAlM,EAAAF,EAAA/B,EAAAoO,EAAAC,EAAAtG,EAAAiH,EAAAC,EAAAF,EAAA5vB,GAAAiK,EAAAhK,GAAAgK,EAAAtC,EAAA6nB,EAAA7B,GACAA,EAAAhhB,MAAAkjB,EAAAC,GACAd,EAAAa,EAAAC,EAAAF,EAAA5vB,EAAAC,EAAA0H,EAAA6iB,EAAAC,EAAAxD,EAAAsE,EAAAgE,EAAA1F,EAAA2F,EAAA7B,KAlEA,GAAA+B,GAAA,GAAAQ,EAAA3hB,KAAA+B,IAAA,GAAAC,IAAAqe,EAAA,EA2EA,OALAD,GAAArX,UAAA,SAAA7V,GACA,MAAAd,WAAAC,QACAguB,GAAAc,EAAAjuB,KAAA,MACAktB,GAFApgB,KAAAyC,KAAA0e,IAIAf,EAiDA,QAAAwB,IAAAzB,GACA,GAAAC,GAAAF,GAAA,SAAA1wB,EAAAG,GACA,MAAAwwB,IAAA3wB,EAAAgT,GAAA7S,EAAA6S,MAEA,iBAAA4c,GACA,MAAAyC,IAAAzB,EAAAhB,KAYA,QAAA0C,IAAA1C,GACAlxB,KAAAkxB,SAsBA,QAAAoB,IAAApB,EAAAhhB,GACA,OACAA,QACA+Z,OAAA,WACAiH,EAAAjH,UAEAvG,UAAA,WACAwN,EAAAxN,aAEAC,QAAA,WACAuN,EAAAvN,WAEAE,aAAA,WACAqN,EAAArN,gBAEAC,WAAA,WACAoN,EAAApN,eAMA,QAAA+P,IAAA5B,GACA,MAAApC,IAAA,WACA,MAAAoC,OAGA,QAAApC,IAAAD,GAKA,QAAAkE,GAAA5jB,GAEA,MADAA,GAAA6jB,EAAA7jB,EAAA,GAAA4D,GAAA5D,EAAA,GAAA4D,KACA5D,EAAA,GAAA1L,EAAAwvB,EAAAC,EAAA/jB,EAAA,GAAA1L,GAEA,QAAA6iB,GAAAnX,GAEA,MADAA,GAAA6jB,EAAA1M,QAAAnX,EAAA,GAAA8jB,GAAAxvB,GAAAyvB,EAAA/jB,EAAA,IAAA1L,GACA0L,MAAA,GAAAoE,GAAApE,EAAA,GAAAoE,IA4CA,QAAAkX,KACAuI,EAAA5M,GAAA2B,EAAAoL,GAAAxG,EAAAyG,EAAAC,GAAAnC,EACA,IAAAoC,GAAApC,EAAAhO,EAAAC,EAGA,OAFA8P,GAAA1yB,EAAA+yB,EAAA,GAAA7vB,EACAyvB,EAAAxyB,EAAA4yB,EAAA,GAAA7vB,EACA8vB,IAEA,QAAAA,KAEA,MADApD,OAAAqD,OAAA,EAAArD,EAAA,MACA4C,EA/DA,GAAA7B,GAAAnJ,EAAAiL,EAGKC,EAAAC,EAAA/C,EAHLsD,EAAAxC,GAAA,SAAA1wB,EAAAG,GAEA,MADAH,GAAA2wB,EAAA3wB,EAAAG,IACAH,EAAA,GAAAkD,EAAAwvB,EAAAC,EAAA3yB,EAAA,GAAAkD,KACKA,EAAA,IAAAlD,EAAA,IAAAG,EAAA,IAAAwiB,EAAA,EAAAC,EAAA,EAAAwJ,EAAA,EAAAyG,EAAA,EAAAC,EAAA,EAAAK,EAAAC,GAAAC,EAAA5uB,EAAA6uB,EAAA,KAAAC,EAAA,IA8DL,OArDAf,GAAA5C,OAAA,SAAA4D,GAIA,MAHA5D,OAAAqD,OAAA,GACArD,EAAAyC,GAAAc,EAAA3L,EAAA0L,EAAAG,EAAAG,MACA5D,EAAAqD,OAAA,EACArD,GAEA4C,EAAAc,UAAA,SAAA5vB,GACA,MAAAd,WAAAC,QACAswB,EAAA,MAAAzvB,GAAA4vB,EAAA5vB,EAAA0vB,IAAA3I,IAAA6I,GAAA5vB,GAAA8O,IACAwgB,KAFAM,GAIAd,EAAAe,WAAA,SAAA7vB,GACA,MAAAd,WAAAC,QACA0wB,EAAA7vB,EACA2vB,EAAA3vB,EAAAupB,GAAAvpB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAe,EACAuuB,KAHAO,GAKAf,EAAAxzB,MAAA,SAAA0E,GACA,MAAAd,WAAAC,QACAK,GAAAQ,EACAwmB,KAFAhnB,GAIAsvB,EAAAiB,UAAA,SAAA/vB,GACA,MAAAd,WAAAC,QACA7C,GAAA0D,EAAA,GACAvD,GAAAuD,EAAA,GACAwmB,MAHAlqB,EAAAG,IAKAqyB,EAAAO,OAAA,SAAArvB,GACA,MAAAd,WAAAC,QACA8f,EAAAjf,EAAA,OAAA8O,GACAoQ,EAAAlf,EAAA,OAAA8O,GACA0X,MAHAvH,EAAA3P,GAAA4P,EAAA5P,KAKAwf,EAAAhL,OAAA,SAAA9jB,GACA,MAAAd,WAAAC,QACAupB,EAAA1oB,EAAA,OAAA8O,GACAqgB,EAAAnvB,EAAA,OAAA8O,GACAsgB,EAAApvB,EAAAb,OAAA,EAAAa,EAAA,OAAA8O,GAAA,EACA0X,MAJAkC,EAAApZ,GAAA6f,EAAA7f,GAAA8f,EAAA9f,KAMAvM,GAAAyP,OAAAsc,EAAAU,EAAA,aAYA,WAGA,MAFAvC,GAAArC,EAAAxpB,MAAApG,KAAAkE,WACA4vB,EAAAzM,OAAA4K,EAAA5K,UACAmE,KAGA,QAAAmI,IAAAzC,GACA,MAAAoB,IAAApB,EAAA,SAAA5vB,EAAAG,GACAyvB,EAAAhhB,MAAA5O,EAAAwS,GAAArS,EAAAqS,MAGA,QAAAkhB,IAAA/Q,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAA+Q,IAAAhR,EAAAC,GACA,OAAAD,EAAApS,GAAAoS,EAAA0H,IAAA9Z,GAAAoS,IAAA0H,GAAA1H,EAAAC,GAGA,QAAAgQ,IAAAxG,EAAAyG,EAAAC,GACA,MAAA1G,GAAAyG,GAAAC,EAAAjN,GAAA+N,GAAAxH,GAAAyH,GAAAhB,EAAAC,IAAAc,GAAAxH,GAAAyG,GAAAC,EAAAe,GAAAhB,EAAAC,GAAAa,GAEA,QAAAG,IAAA1H,GACA,gBAAAzJ,EAAAC,GACA,MAAAD,IAAAyJ,GAAAzJ,EAAApS,GAAAoS,EAAA0H,IAAA9Z,GAAAoS,IAAA0H,GAAA1H,EAAAC,IAGA,QAAAgR,IAAAxH,GACA,GAAA2H,GAAAD,GAAA1H,EAEA,OADA2H,GAAAhO,OAAA+N,IAAA1H,GACA2H,EAEA,QAAAF,IAAAhB,EAAAC,GAEA,QAAAiB,GAAApR,EAAAC,GACA,GAAAK,GAAAzS,KAAA+B,IAAAqQ,GAAA5iB,EAAAwQ,KAAA+B,IAAAoQ,GAAAM,EAAA9iB,EAAAqQ,KAAAU,IAAAyR,GAAAM,EAAAnd,EAAA0K,KAAAU,IAAA0R,GAAA1f,EAAA4C,EAAAkuB,EAAAh0B,EAAAi0B,CACA,QAAAzjB,KAAAuC,MAAA5S,EAAA+zB,EAAAhxB,EAAAixB,EAAAn0B,EAAAg0B,EAAAluB,EAAAmuB,GAAAvjB,GAAAxN,EAAAgxB,EAAA/zB,EAAAg0B,IAHA,GAAAH,GAAAxjB,KAAA+B,IAAAsgB,GAAAoB,EAAAzjB,KAAAU,IAAA2hB,GAAAqB,EAAA1jB,KAAA+B,IAAAugB,GAAAqB,EAAA3jB,KAAAU,IAAA4hB,EASA,OAJAiB,GAAAhO,OAAA,SAAApD,EAAAC,GACA,GAAAK,GAAAzS,KAAA+B,IAAAqQ,GAAA5iB,EAAAwQ,KAAA+B,IAAAoQ,GAAAM,EAAA9iB,EAAAqQ,KAAAU,IAAAyR,GAAAM,EAAAnd,EAAA0K,KAAAU,IAAA0R,GAAA1f,EAAA4C,EAAAouB,EAAA/zB,EAAAg0B,CACA,QAAA3jB,KAAAuC,MAAA5S,EAAA+zB,EAAApuB,EAAAquB,EAAAn0B,EAAAg0B,EAAA9wB,EAAA+wB,GAAAvjB,GAAAxN,EAAA8wB,EAAAh0B,EAAAi0B,KAEAF,EAkCA,QAAAxH,IAAA7B,EAAAnR,GACA,GAAAqR,GAAApa,KAAA+B,IAAAmY,GAAA0J,EAAA5jB,KAAAU,IAAAwZ,EACA,iBAAAhB,EAAAC,EAAAC,EAAA1jB,GACA,GAAAwU,GAAAkP,EAAArQ,CACA,OAAAmQ,GACAA,EAAA2K,GAAAzJ,EAAAlB,GACAC,EAAA0K,GAAAzJ,EAAAjB,IACAC,EAAA,EAAAD,EAAAD,IAAAC,KAAAD,GAAAE,EAAAS,MAEAX,EAAAgB,EAAAd,EAAAS,GACAV,EAAAe,EAAA,GAAAhQ,EAEA,QAAA9L,GAAAgI,EAAA8S,EAA+BE,EAAA,EAAAhT,EAAA+S,IAAA/S,EAAiCA,GAAA8D,EAChExU,EAAA0I,SAAAsV,IAAA0G,GAAAwJ,EAAA5jB,KAAA+B,IAAAqE,IAAAwd,EAAA5jB,KAAAU,IAAA0F,MAAA,GAAAhI,EAAA,KAIA,QAAAylB,IAAAzJ,EAAAhc,GACA,GAAA3M,GAAAyhB,GAAA9U,EACA3M,GAAA,IAAA2oB,EACA3G,GAAAhiB,EACA,IAAAqyB,GAAAhkB,IAAArO,EAAA,GACA,UAAAA,EAAA,MAAAqyB,KAAA,EAAA9jB,KAAA+jB,GAAAlQ,KAAA,EAAA7T,KAAA+jB,IAgFA,QAAAC,IAAA3P,EAAA6H,EAAAM,GACA,GAAA7sB,GAAAsG,GAAAtH,MAAA0lB,EAAA6H,EAAArI,GAAA2I,GAAA3mB,OAAAqmB,EACA,iBAAA1sB,GACA,MAAAG,GAAAsJ,IAAA,SAAAtJ,GACA,OAAAH,EAAAG,MAIA,QAAAs0B,IAAA1P,EAAA0H,EAAAM,GACA,GAAA/sB,GAAAyG,GAAAtH,MAAA4lB,EAAA0H,EAAApI,GAAA0I,GAAA1mB,OAAAomB,EACA,iBAAAtsB,GACA,MAAAH,GAAAyJ,IAAA,SAAAzJ,GACA,OAAAA,EAAAG,MAIA,QAAAu0B,IAAAz0B,GACA,MAAAA,GAAA2E,OAEA,QAAA+vB,IAAA10B,GACA,MAAAA,GAAA0E,OA+BA,QAAAiwB,IAAA7P,EAAAF,EAAA4H,EAAAC,GACA,GAAAmI,GAAArkB,KAAA+B,IAAAsS,GAAAiQ,EAAAtkB,KAAAU,IAAA2T,GAAAkQ,EAAAvkB,KAAA+B,IAAAma,GAAAsI,EAAAxkB,KAAAU,IAAAwb,GAAAuI,EAAAJ,EAAArkB,KAAA+B,IAAAwS,GAAAmQ,EAAAL,EAAArkB,KAAAU,IAAA6T,GAAAoQ,EAAAJ,EAAAvkB,KAAA+B,IAAAka,GAAA2I,EAAAL,EAAAvkB,KAAAU,IAAAub,GAAAxsB,EAAA,EAAAuQ,KAAAI,KAAAJ,KAAAyC,KAAAhC,GAAAyb,EAAA7H,GAAAgQ,EAAAE,EAAA9jB,GAAAwb,EAAA1H,KAAA7hB,EAAA,EAAAsN,KAAAU,IAAAjR,GACAmmB,EAAAnmB,EAAA,SAAA2W,GACA,GAAAsI,GAAA1O,KAAAU,IAAA0F,GAAA3W,GAAAiD,EAAA8b,EAAAxO,KAAAU,IAAAjR,EAAA2W,GAAA1T,EAAAlD,EAAAgf,EAAAiW,EAAA/V,EAAAiW,EAAAh1B,EAAA6e,EAAAkW,EAAAhW,EAAAkW,EAAAtvB,EAAAkZ,EAAA8V,EAAA5V,EAAA8V,CACA,QAAAxkB,KAAAuC,MAAA5S,EAAAH,GAAAgT,GAAAxC,KAAAuC,MAAAjN,EAAA0K,KAAAyC,KAAAjT,IAAAG,MAAA6S,KACK,WACL,OAAA+R,EAAA/R,GAAA6R,EAAA7R,IAGA,OADAoT,GAAAiP,SAAAp1B,EACAmmB,EAgBA,QAAAkP,MASA,QAAA5S,GAAAC,EAAAC,GACA,GAAAM,GAAA1S,KAAAU,IAAA0R,GAAApQ,IAAAyQ,EAAAzS,KAAA+B,IAAAqQ,GAAAhM,EAAAoB,IAAA2K,GAAAnQ,IAAAsQ,GAAAyS,EAAA/kB,KAAA+B,IAAAqE,EACA4e,KAAAhlB,KAAAuC,MAAAvC,KAAAyC,MAAA2D,EAAAqM,EAAAzS,KAAAU,IAAA0F,SAAAyM,EAAAH,EAAAC,EAAAF,EAAAsS,GAAA3e,GAAAuM,EAAAD,EAAAG,EAAAJ,EAAAsS,GACAzS,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAoS,IAAA7mB,MAAA,SAAA+T,EAAAC,GACAE,EAAAH,EAAAnQ,GAAA2Q,EAAA3S,KAAAU,IAAA0R,GAAApQ,IAAA6Q,EAAA7S,KAAA+B,IAAAqQ,GACA6S,GAAA7mB,MAAA8T,GAEA+S,GAAApT,QAAA,WACAoT,GAAA7mB,MAAA6mB,GAAApT,QAAA7c,GAQA,QAAAkwB,IAAA12B,EAAAs1B,GACA,QAAAqB,GAAAhT,EAAAC,GACA,GAAAgT,GAAAplB,KAAA+B,IAAAoQ,GAAAM,EAAAzS,KAAA+B,IAAAqQ,GAAA1f,EAAAlE,EAAA42B,EAAA3S,EACA,QAAA/f,EAAA+f,EAAAzS,KAAAU,IAAAyR,GAAAzf,EAAAsN,KAAAU,IAAA0R,IAMA,MAJA+S,GAAA5P,OAAA,SAAA/lB,EAAAG,GACA,GAAAwuB,GAAAne,KAAAyC,KAAAjT,IAAAG,KAAAyJ,EAAA0qB,EAAA3F,GAAAkH,EAAArlB,KAAAU,IAAAtH,GAAAksB,EAAAtlB,KAAA+B,IAAA3I,EACA,QAAA4G,KAAAuC,MAAA/S,EAAA61B,EAAAlH,EAAAmH,GAAAtlB,KAAAI,KAAA+d,GAAAxuB,EAAA01B,EAAAlH,KAEAgH,EAiBA,QAAAI,IAAA/M,EAAAG,GAKA,QAAAuF,GAAA/L,EAAAC,GACAoT,EAAA,GACArlB,GAAA0T,GAAAzB,OAAAjS,GAAA0T,IAEAzB,EAAAjS,GAAA0T,KAAAzB,EAAAjS,GAAA0T,GAEA,IAAAsK,GAAAqH,EAAAxlB,KAAA2C,IAAAyD,EAAAgM,GAAAvd,EACA,QAAAspB,EAAAne,KAAAU,IAAA7L,EAAAsd,GAAAqT,EAAArH,EAAAne,KAAA+B,IAAAlN,EAAAsd,IAXA,GAAAU,GAAA7S,KAAA+B,IAAAyW,GAAApS,EAAA,SAAAgM,GACA,MAAApS,MAAAylB,IAAA1lB,GAAA,EAAAqS,EAAA,IACKvd,EAAA2jB,IAAAG,EAAA3Y,KAAAU,IAAA8X,GAAAxY,KAAAqH,IAAAwL,EAAA7S,KAAA+B,IAAA4W,IAAA3Y,KAAAqH,IAAAjB,EAAAuS,GAAAvS,EAAAoS,IAAAgN,EAAA3S,EAAA7S,KAAA2C,IAAAyD,EAAAoS,GAAA3jB,IACL,OAAAA,IAUAqpB,EAAA3I,OAAA,SAAA/lB,EAAAG,GACA,GAAA2uB,GAAAkH,EAAA71B,EAAAwuB,EAAAve,GAAA/K,GAAAmL,KAAAyC,KAAAjT,IAAA8uB,IACA,QAAAte,KAAAuC,MAAA/S,EAAA8uB,GAAAzpB,EAAA,EAAAmL,KAAAgZ,KAAAhZ,KAAA2C,IAAA6iB,EAAArH,EAAA,EAAAtpB,IAAAsL,KAEA+d,GAdAwH,GAmBA,QAAAC,IAAAnN,EAAAG,GAGA,QAAAuF,GAAA/L,EAAAC,GACA,GAAA+L,GAAAyH,EAAAxT,CACA,QAAA+L,EAAAne,KAAAU,IAAA7L,EAAAsd,GAAAyT,EAAAzH,EAAAne,KAAA+B,IAAAlN,EAAAsd,IAJA,GAAAU,GAAA7S,KAAA+B,IAAAyW,GAAA3jB,EAAA2jB,IAAAG,EAAA3Y,KAAAU,IAAA8X,IAAA3F,EAAA7S,KAAA+B,IAAA4W,OAAAH,GAAAoN,EAAA/S,EAAAhe,EAAA2jB,CACA,OAAAhR,IAAA3S,GAAAgf,GAAAqP,IAKAhF,EAAA3I,OAAA,SAAA/lB,EAAAG,GACA,GAAA2uB,GAAAsH,EAAAj2B,CACA,QAAAqQ,KAAAuC,MAAA/S,EAAA8uB,GAAAzpB,EAAA+wB,EAAAhmB,GAAA/K,GAAAmL,KAAAyC,KAAAjT,IAAA8uB,OAEAJ,GAWA,QAAAwH,IAAAvT,EAAAC,GACA,OAAAD,EAAAnS,KAAAqH,IAAArH,KAAAylB,IAAA1lB,GAAA,EAAAqS,EAAA,KAKA,QAAAyT,IAAA1F,GACA,GAAA2F,GAAApqB,EAAAqmB,GAAA5B,GAAA3xB,EAAAkN,EAAAlN,MAAAy0B,EAAAvnB,EAAAunB,UAAAF,EAAArnB,EAAAqnB,UAqBA,OApBArnB,GAAAlN,MAAA,WACA,GAAAyS,GAAAzS,EAAA8F,MAAAoH,EAAAtJ,UACA,OAAA6O,KAAAvF,EAAAoqB,EAAApqB,EAAAqnB,WAAA,MAAArnB,EAAAuF,GAEAvF,EAAAunB,UAAA,WACA,GAAAhiB,GAAAgiB,EAAA3uB,MAAAoH,EAAAtJ,UACA,OAAA6O,KAAAvF,EAAAoqB,EAAApqB,EAAAqnB,WAAA,MAAArnB,EAAAuF,GAEAvF,EAAAqnB,WAAA,SAAA7vB,GACA,GAAA+N,GAAA8hB,EAAAzuB,MAAAoH,EAAAtJ,UACA,IAAA6O,IAAAvF,GACA,GAAAoqB,EAAA,MAAA5yB,EAAA,CACA,GAAAR,GAAAqN,GAAAvR,IAAA4X,EAAA6c,GACAF,KAAA3c,EAAA,GAAA1T,EAAA0T,EAAA,GAAA1T,IAAA0T,EAAA,GAAA1T,EAAA0T,EAAA,GAAA1T,UAEOozB,KACP7kB,EAAA,KAEA,OAAAA,IAEAvF,EAAAqnB,WAAA,MAmBA,QAAAgD,IAAA5T,EAAAC,GACA,OAAApS,KAAAqH,IAAArH,KAAAylB,IAAA1lB,GAAA,EAAAqS,EAAA,KAAAD,GAiBA,QAAA6T,IAAAv2B,GACA,MAAAA,GAAA,GAEA,QAAAw2B,IAAAx2B,GACA,MAAAA,GAAA,GA2BA,QAAAy2B,IAAA5P,GAEA,OADAzhB,GAAAyhB,EAAAjkB,OAAA8zB,GAAA,KAAAC,EAAA,EACAxxB,EAAA,EAAmBC,EAAAD,EAAOA,IAAA,CAC1B,KAAAwxB,EAAA,GAAAvmB,GAAAyW,EAAA6P,EAAAC,EAAA,IAAA9P,EAAA6P,EAAAC,EAAA,IAAA9P,EAAA1hB,KAAA,KAAAwxB,CACAD,GAAAC,KAAAxxB,EAEA,MAAAuxB,GAAA3yB,MAAA,EAAA4yB,GAEA,QAAAC,IAAA50B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAqDA,QAAA40B,IAAAnf,EAAA1V,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAA0V,EAAA,GAAA1V,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA0V,EAAA,GAAA1V,EAAA,IAEA,QAAA80B,IAAAntB,EAAA3J,EAAAgC,EAAAC,GACA,GAAAuqB,GAAA7iB,EAAA,GAAAotB,EAAA/0B,EAAA,GAAAg1B,EAAAh3B,EAAA,GAAAwsB,EAAAyK,EAAAh1B,EAAA,GAAA80B,EAAAtK,EAAA9iB,EAAA,GAAAutB,EAAAl1B,EAAA,GAAAm1B,EAAAn3B,EAAA,GAAAysB,EAAA2K,EAAAn1B,EAAA,GAAAi1B,EAAAG,GAAAJ,GAAAxK,EAAAyK,GAAAE,GAAA5K,EAAAuK,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAA3K,EAAA6K,EAAAL,EAAAvK,EAAA4K,EAAAF,GAEA,QAAAG,IAAAtV,GACA,GAAAhgB,GAAAggB,EAAA,GAAA/f,EAAA+f,IAAApf,OAAA,EACA,SAAAZ,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAGA,QAAAs1B,MACAC,GAAA/4B,MACAA,KAAAg5B,KAAAh5B,KAAAi5B,KAAAj5B,KAAAk5B,OAAA,KAEA,QAAAC,IAAAF,GACA,GAAAG,GAAAC,GAAA7P,OAAA,GAAAsP,GAEA,OADAM,GAAAH,OACAG,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAA5xB,OAAAwxB,GACAC,GAAAl3B,KAAAi3B,GACAL,GAAAK,GAEA,QAAAK,IAAAL,GACA,GAAAF,GAAAE,EAAAF,OAAA53B,EAAA43B,EAAA53B,EAAAG,EAAAy3B,EAAApS,GAAA4S,GACAp4B,IACAG,KACKk4B,EAAAP,EAAAQ,EAAAC,EAAAT,EAAAU,EAAAC,GAAAX,EACLE,IAAAF,EAEA,KADA,GAAAY,GAAAL,EACAK,EAAAd,QAAA5f,GAAAhY,EAAA04B,EAAAd,OAAA53B,GAAAqkB,IAAArM,GAAA7X,EAAAu4B,EAAAd,OAAApS,IAAAnB,IACAgU,EAAAK,EAAAJ,EACAG,EAAAE,QAAAD,GACAV,GAAAU,GACAA,EAAAL,CAEAI,GAAAE,QAAAD,GACAT,GAAAS,EAEA,KADA,GAAAE,GAAAL,EACAK,EAAAhB,QAAA5f,GAAAhY,EAAA44B,EAAAhB,OAAA53B,GAAAqkB,IAAArM,GAAA7X,EAAAy4B,EAAAhB,OAAApS,IAAAnB,IACAkU,EAAAK,EAAAJ,EACAC,EAAA53B,KAAA+3B,GACAZ,GAAAY,GACAA,EAAAL,CAEAE,GAAA53B,KAAA+3B,GACAX,GAAAW,EACA,IAAAC,GAAAC,EAAAL,EAAA51B,MACA,KAAAg2B,EAAA,EAAkBC,EAAAD,IAAcA,EAChCD,EAAAH,EAAAI,GACAH,EAAAD,EAAAI,EAAA,GACAE,GAAAH,EAAAlB,KAAAgB,EAAAf,KAAAiB,EAAAjB,KAAAS,EAEAM,GAAAD,EAAA,GACAG,EAAAH,EAAAK,EAAA,GACAF,EAAAlB,KAAAsB,GAAAN,EAAAf,KAAAiB,EAAAjB,KAAA,KAAAS,GACAa,GAAAP,GACAO,GAAAL,GAEA,QAAAM,IAAAvB,GAEA,IADA,GAAAe,GAAAE,EAAAO,EAAAC,EAAAp5B,EAAA23B,EAAA33B,EAAAq5B,EAAA1B,EAAAx3B,EAAAuB,EAAAw2B,GAAAx0B,EACAhC,GAEA,GADAy3B,EAAAG,GAAA53B,EAAA23B,GAAAr5B,EACAm5B,EAAA9U,GAAA3iB,IAAAwa,MAAiC,CAEjC,GADAkd,EAAAp5B,EAAAu5B,GAAA73B,EAAA23B,KACAD,EAAA/U,IAMS,CACT8U,GAAA9U,IACAqU,EAAAh3B,EAAA42B,EACAM,EAAAl3B,GACW03B,GAAA/U,IACXqU,EAAAh3B,EACAk3B,EAAAl3B,EAAA82B,GAEAE,EAAAE,EAAAl3B,CAEA,OAfA,IAAAA,EAAA83B,EAAA,CACAd,EAAAh3B,CACA,OAEAA,IAAA83B,EAeA,GAAAC,GAAA5B,GAAAF,EAEA,IADAO,GAAAwB,OAAAhB,EAAAe,GACAf,GAAAE,EAAA,CACA,GAAAF,IAAAE,EAOA,MANAX,IAAAS,GACAE,EAAAf,GAAAa,EAAAf,MACAO,GAAAwB,OAAAD,EAAAb,GACAa,EAAA/B,KAAAkB,EAAAlB,KAAAsB,GAAAN,EAAAf,KAAA8B,EAAA9B,MACAsB,GAAAP,OACAO,IAAAL,EAGA,KAAAA,EAEA,YADAa,EAAA/B,KAAAsB,GAAAN,EAAAf,KAAA8B,EAAA9B,MAGAM,IAAAS,GACAT,GAAAW,EACA,IAAAe,GAAAjB,EAAAf,KAAAhL,EAAAgN,EAAA35B,EAAA4sB,EAAA+M,EAAAx5B,EAAA0sB,EAAA8K,EAAA33B,EAAA2sB,EAAAG,EAAA6K,EAAAx3B,EAAAysB,EAAAgN,EAAAhB,EAAAjB,KAAApS,EAAAqU,EAAA55B,EAAA2sB,EAAAnH,EAAAoU,EAAAz5B,EAAAysB,EAAA3sB,EAAA,GAAA4sB,EAAArH,EAAAsH,EAAAvH,GAAAsU,EAAAhN,IAAAC,IAAAgN,EAAAvU,IAAAC,IAAA4S,GACAp4B,GAAAwlB,EAAAqU,EAAA/M,EAAAgN,GAAA75B,EAAA0sB,EACAxsB,GAAA0sB,EAAAiN,EAAAvU,EAAAsU,GAAA55B,EAAA2sB,EAEAmM,IAAAH,EAAAlB,KAAAiC,EAAAC,EAAAxB,GACAqB,EAAA/B,KAAAsB,GAAAW,EAAAhC,EAAA,KAAAS,GACAQ,EAAAlB,KAAAsB,GAAArB,EAAAiC,EAAA,KAAAxB,GACAa,GAAAP,GACAO,GAAAL,IAEA,QAAAU,IAAAhP,EAAA+O,GACA,GAAA1B,GAAArN,EAAAqN,KAAAoC,EAAApC,EAAA33B,EAAAg6B,EAAArC,EAAAx3B,EAAA85B,EAAAD,EAAAX,CACA,KAAAY,EAAA,MAAAF,EACA,IAAArB,GAAApO,EAAAgO,CACA,KAAAI,EAAA,QAAAjhB,IACAkgB,GAAAe,EAAAf,IACA,IAAAuC,GAAAvC,EAAA33B,EAAAm6B,EAAAxC,EAAAx3B,EAAAi6B,EAAAD,EAAAd,CACA,KAAAe,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAAl4B,EAAAm4B,EAAAD,CACA,OAAAE,KAAAp4B,EAAAsO,KAAAyC,KAAA/Q,IAAA,EAAAo4B,GAAAD,KAAA,GAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAX,IAAAjP,EAAA+O,GACA,GAAAT,GAAAtO,EAAAkO,CACA,IAAAI,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAA1B,GAAArN,EAAAqN,IACA,OAAAA,GAAAx3B,IAAAk5B,EAAA1B,EAAA33B,EAAAyX,IAEA,QAAA8iB,IAAA5C,GACAj5B,KAAAi5B,OACAj5B,KAAA87B,SAWA,QAAAC,IAAAC,GAEA,IADA,GAAA5I,GAAAC,EAAAiF,EAAAG,EAAAwD,EAAAC,EAAAC,EAAAC,EAAA/T,EAAAgU,EAAAhW,EAAA2V,EAAA,MAAAjO,EAAAiO,EAAA,MAAA7V,EAAA6V,EAAA,MAAAhO,EAAAgO,EAAA,MAAAM,EAAAC,GAAAC,EAAAF,EAAAn4B,OACAq4B,KAEA,GADAP,EAAAK,EAAAE,GACAP,KAAAQ,UAIA,IAHAN,EAAAF,EAAAH,MACAM,EAAAD,EAAAh4B,OACA+3B,EAAA,EACAE,EAAAF,GACAG,EAAAF,EAAAD,GAAAG,MAAA/D,EAAA+D,EAAA/6B,EAAAm3B,EAAA4D,EAAA56B,EACA4mB,EAAA8T,IAAAD,EAAAE,GAAA/T,QAAA+K,EAAA/K,EAAA/mB,EAAA+xB,EAAAhL,EAAA5mB,GACA6X,GAAAgf,EAAAlF,GAAAzN,IAAArM,GAAAmf,EAAApF,GAAA1N,MACAwW,EAAAO,OAAAR,EAAA,KAAAS,IAAAC,GAAAX,EAAAhD,KAAAoD,EAAA/iB,GAAAgf,EAAAjS,GAAAV,IAAAqI,EAAAyK,EAAA9S,IACArkB,EAAA+kB,EACA5kB,EAAA6X,GAAA8Z,EAAA/M,GAAAV,GAAA0N,EAAArF,GACW1U,GAAAmf,EAAAzK,GAAArI,IAAAoI,EAAAuK,EAAA3S,IACXrkB,EAAAgY,GAAA+Z,EAAArF,GAAArI,GAAAyN,EAAArF,EACAtsB,EAAAusB,GACW1U,GAAAgf,EAAAvK,GAAApI,IAAA8S,EAAAtS,EAAAR,IACXrkB,EAAAysB,EACAtsB,EAAA6X,GAAA8Z,EAAArF,GAAApI,GAAA0N,EAAAlN,GACW7M,GAAAmf,EAAAtS,GAAAR,IAAA2S,EAAAjS,EAAAV,IACXrkB,EAAAgY,GAAA+Z,EAAAlN,GAAAR,GAAAyN,EAAA/M,EACA5kB,EAAA0kB,GACW,MAAA8V,EAAAhD,KAAA,SACXmD,GAKA,QAAAS,IAAAt5B,EAAAC,GACA,MAAAA,GAAAoyB,MAAAryB,EAAAqyB,MAEA,QAAAkH,MACA/D,GAAA/4B,MACAA,KAAAsB,EAAAtB,KAAAyB,EAAAzB,KAAA4rB,IAAA5rB,KAAAi5B,KAAAj5B,KAAA8mB,GAAA,KAEA,QAAAyT,IAAA3O,GACA,GAAAoO,GAAApO,EAAAgO,EAAAM,EAAAtO,EAAAkO,CACA,IAAAE,GAAAE,EAAA,CACA,GAAAe,GAAAjB,EAAAf,KAAA8D,EAAAnR,EAAAqN,KAAAiC,EAAAhB,EAAAjB,IACA,IAAAgC,IAAAC,EAAA,CACA,GAAA/M,GAAA4O,EAAAz7B,EAAA8sB,EAAA2O,EAAAt7B,EAAAwsB,EAAAgN,EAAA35B,EAAA6sB,EAAAD,EAAA+M,EAAAx5B,EAAA2sB,EAAAvH,EAAAqU,EAAA55B,EAAA6sB,EAAArH,EAAAoU,EAAAz5B,EAAA2sB,EACA7sB,EAAA,GAAA0sB,EAAAnH,EAAAoH,EAAArH,EACA,MAAAtlB,IAAAy7B,IAAA,CACA,GAAAC,GAAAhP,IAAAC,IAAAkN,EAAAvU,IAAAC,IAAAxlB,GAAAwlB,EAAAmW,EAAA/O,EAAAkN,GAAA75B,EAAAE,GAAAwsB,EAAAmN,EAAAvU,EAAAoW,GAAA17B,EAAAulB,EAAArlB,EAAA2sB,EACA8K,EAAAgE,GAAA1T,OAAA,GAAAsT,GACA5D,GAAAtN,MACAsN,EAAAD,KAAA8D,EACA7D,EAAA53B,IAAA6sB,EACA+K,EAAAz3B,EAAAqlB,EAAAhV,KAAAyC,KAAAjT,IAAAG,KACAy3B,EAAApS,KACA8E,EAAAsN,QAEA,KADA,GAAAzd,GAAA,KAAAzY,EAAAm6B,GAAAn4B,EACAhC,GACA,GAAAk2B,EAAAz3B,EAAAuB,EAAAvB,GAAAy3B,EAAAz3B,IAAAuB,EAAAvB,GAAAy3B,EAAA53B,GAAA0B,EAAA1B,EAAA,CACA,IAAA0B,EAAAwa,EAAkC,CAClC/B,EAAAzY,EAAA42B,CACA,OAFA52B,IAAAwa,MAIO,CACP,IAAAxa,EAAA83B,EAAkC,CAClCrf,EAAAzY,CACA,OAFAA,IAAA83B,EAMAqC,GAAAnC,OAAAvf,EAAAyd,GACAzd,IAAA2hB,GAAAlE,MAEA,QAAAK,IAAA3N,GACA,GAAAsN,GAAAtN,EAAAsN,MACAA,KACAA,EAAAU,IAAAwD,GAAAlE,EAAAY,GACAqD,GAAAv1B,OAAAsxB,GACAgE,GAAA/6B,KAAA+2B,GACAH,GAAAG,GACAtN,EAAAsN,OAAA,MAGA,QAAAmE,IAAArB,GAEA,IADA,GAAA7zB,GAAA2zB,EAAAwB,GAAA1V,EAAAkG,GAAAkO,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAt1B,EAAAo1B,EAAA33B,OACAuC,KACAyB,EAAA2zB,EAAAp1B,KACA62B,GAAAp1B,EAAA6zB,KAAApU,EAAAzf,IAAAmR,GAAAnR,EAAA5E,EAAAjC,EAAA6G,EAAA3E,EAAAlC,GAAAqkB,IAAArM,GAAAnR,EAAA5E,EAAA9B,EAAA0G,EAAA3E,EAAA/B,GAAAkkB,MACAxd,EAAA5E,EAAA4E,EAAA3E,EAAA,KACAs4B,EAAAY,OAAAh2B,EAAA,IAIA,QAAA62B,IAAAvE,EAAAgD,GACA,GAAAwB,GAAAxE,EAAAx1B,CACA,IAAAg6B,EAAA,QACA,IAAAC,GAAAC,EAAAC,EAAA3E,EAAAz1B,EAAA8iB,EAAA2V,EAAA,MAAAjO,EAAAiO,EAAA,MAAA7V,EAAA6V,EAAA,MAAAhO,EAAAgO,EAAA,MAAAf,EAAAjC,EAAA7xB,EAAA+zB,EAAAlC,EAAAtlB,EAAAkqB,EAAA3C,EAAA35B,EAAAu8B,EAAA5C,EAAAx5B,EAAAq8B,EAAA5C,EAAA55B,EAAAy8B,EAAA7C,EAAAz5B,EAAAu8B,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAxX,EAAA2X,MAAAjQ,EAAA,MACA,IAAA6P,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAAl8B,GAAAusB,EAAA,WAHV2P,IACAr8B,EAAA08B,EACAv8B,EAAA0kB,EAEAqX,IACAl8B,EAAA08B,EACAv8B,EAAAusB,OAEO,CACP,GAAA2P,GAGU,GAAAA,EAAAl8B,EAAA0kB,EAAA,WAHVwX,IACAr8B,EAAA08B,EACAv8B,EAAAusB,EAEAwP,IACAl8B,EAAA08B,EACAv8B,EAAA0kB,QAMA,IAFAsX,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACA,GAAAP,KAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAAl8B,GAAAusB,EAAA,WAHZ2P,IACAr8B,GAAA6kB,EAAAuX,GAAAD,EACAh8B,EAAA0kB,EAEAqX,IACAl8B,GAAA0sB,EAAA0P,GAAAD,EACAh8B,EAAAusB,OAES,CACT,GAAA2P,GAGY,GAAAA,EAAAl8B,EAAA0kB,EAAA,WAHZwX,IACAr8B,GAAA0sB,EAAA0P,GAAAD,EACAh8B,EAAAusB,EAEAwP,IACAl8B,GAAA6kB,EAAAuX,GAAAD,EACAh8B,EAAA0kB,OAIA,IAAA4X,EAAAF,EAAA,CACA,GAAAF,GAGY,GAAAA,EAAAr8B,GAAAysB,EAAA,WAHZ4P,IACAr8B,EAAA+kB,EACA5kB,EAAAg8B,EAAApX,EAAAqX,EAEAF,IACAl8B,EAAAysB,EACAtsB,EAAAg8B,EAAA1P,EAAA2P,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAr8B,EAAA+kB,EAAA,WAHZsX,IACAr8B,EAAAysB,EACAtsB,EAAAg8B,EAAA1P,EAAA2P,EAEAF,IACAl8B,EAAA+kB,EACA5kB,EAAAg8B,EAAApX,EAAAqX,GAOA,MAFA1E,GAAAz1B,EAAAo6B,EACA3E,EAAAx1B,EAAAg6B,GACA,EAEA,QAAAU,IAAAjD,EAAAC,GACAl7B,KAAAmH,EAAA8zB,EACAj7B,KAAA0T,EAAAwnB,EACAl7B,KAAAuD,EAAAvD,KAAAwD,EAAA,KAEA,QAAA82B,IAAAW,EAAAC,EAAAyC,EAAAH,GACA,GAAAxE,GAAA,GAAAkF,IAAAjD,EAAAC,EAMA,OALAoC,IAAAn7B,KAAA62B,GACA2E,GAAAtD,GAAArB,EAAAiC,EAAAC,EAAAyC,GACAH,GAAAnD,GAAArB,EAAAkC,EAAAD,EAAAuC,GACAjB,GAAAtB,EAAAv0B,GAAAo1B,MAAA35B,KAAA,GAAAw6B,IAAA3D,EAAAiC,EAAAC,IACAqB,GAAArB,EAAAx0B,GAAAo1B,MAAA35B,KAAA,GAAAw6B,IAAA3D,EAAAkC,EAAAD,IACAjC,EAEA,QAAA4D,IAAA3B,EAAA0C,EAAAH,GACA,GAAAxE,GAAA,GAAAkF,IAAAjD,EAAA,KAIA,OAHAjC,GAAAz1B,EAAAo6B,EACA3E,EAAAx1B,EAAAg6B,EACAF,GAAAn7B,KAAA62B,GACAA,EAEA,QAAAqB,IAAArB,EAAAiC,EAAAC,EAAAxB,GACAV,EAAAz1B,GAAAy1B,EAAAx1B,EAIKw1B,EAAA7xB,IAAA+zB,EACLlC,EAAAx1B,EAAAk2B,EAEAV,EAAAz1B,EAAAm2B,GANAV,EAAAz1B,EAAAm2B,EACAV,EAAA7xB,EAAA8zB,EACAjC,EAAAtlB,EAAAwnB,GAOA,QAAAyB,IAAA3D,EAAAiC,EAAAC,GACA,GAAAyC,GAAA3E,EAAAz1B,EAAAi6B,EAAAxE,EAAAx1B,CACAxD,MAAAg5B,OACAh5B,KAAAi5B,KAAAgC,EACAj7B,KAAA41B,MAAAsF,EAAAppB,KAAAuC,MAAA6mB,EAAAz5B,EAAAw5B,EAAAx5B,EAAAy5B,EAAA55B,EAAA25B,EAAA35B,GAAA03B,EAAA7xB,IAAA8zB,EAAAnpB,KAAAuC,MAAAmpB,EAAAl8B,EAAAq8B,EAAAr8B,EAAAq8B,EAAAl8B,EAAA+7B,EAAA/7B,GAAAqQ,KAAAuC,MAAAspB,EAAAr8B,EAAAk8B,EAAAl8B,EAAAk8B,EAAA/7B,EAAAk8B,EAAAl8B,GAUA,QAAA08B,MACAn+B,KAAAgF,EAAA,KAEA,QAAA+zB,IAAA/1B,GACAA,EAAA+a,EAAA/a,EAAAktB,EAAAltB,EAAAwa,EAAAxa,EAAA83B,EAAA93B,EAAA42B,EAAA52B,EAAA82B,EAAA,KAkKA,QAAAsE,IAAAC,EAAAr7B,GACA,GAAAiW,GAAAjW,EAAAyqB,EAAAzqB,EAAA83B,EAAAluB,EAAAqM,EAAA8E,CACAnR,GACAA,EAAA4Q,IAAAvE,EAAArM,EAAA4Q,EAAAiQ,EAAuC7gB,EAAAkuB,EAAArN,EAEvC4Q,EAAAr5B,EAAAyoB,EAEAA,EAAA1P,EAAAnR,EACAqM,EAAA8E,EAAA0P,EACAxU,EAAA6hB,EAAArN,EAAAjQ,EACAvE,EAAA6hB,IAAA7hB,EAAA6hB,EAAA/c,EAAA9E,GACAwU,EAAAjQ,EAAAvE,EAEA,QAAAqlB,IAAAD,EAAAr7B,GACA,GAAAiW,GAAAjW,EAAAyqB,EAAAzqB,EAAAwa,EAAA5Q,EAAAqM,EAAA8E,CACAnR,GACAA,EAAA4Q,IAAAvE,EAAArM,EAAA4Q,EAAAiQ,EAAuC7gB,EAAAkuB,EAAArN,EAEvC4Q,EAAAr5B,EAAAyoB,EAEAA,EAAA1P,EAAAnR,EACAqM,EAAA8E,EAAA0P,EACAxU,EAAAuE,EAAAiQ,EAAAqN,EACA7hB,EAAAuE,IAAAvE,EAAAuE,EAAAO,EAAA9E,GACAwU,EAAAqN,EAAA7hB,EAEA,QAAAslB,IAAAv7B,GACA,KAAAA,EAAAwa,GAAAxa,IAAAwa,CACA,OAAAxa,GAEA,QAAAw7B,IAAAC,EAAAC,GACA,GAAArY,GAAAF,EAAA+S,EAAAD,EAAAwF,EAAAxW,KAAA0W,IAAAnV,KAKA,KAJA8T,MACAf,GAAA,GAAA3gB,OAAA6iB,EAAAt6B,QACAq1B,GAAA,GAAA2E,IACAhB,GAAA,GAAAgB,MAGA,GADAjF,EAAAkE,GACAnE,KAAAC,GAAAD,EAAAx3B,EAAAy3B,EAAAz3B,GAAAw3B,EAAAx3B,IAAAy3B,EAAAz3B,GAAAw3B,EAAA33B,EAAA43B,EAAA53B,GACA23B,EAAA33B,IAAA+kB,GAAA4S,EAAAx3B,IAAA0kB,IACAoW,GAAAtD,EAAAvyB,GAAA,GAAAm1B,IAAA5C,GACAuB,GAAAvB,GACA5S,EAAA4S,EAAA33B,EAAA6kB,EAAA8S,EAAAx3B,GAEAw3B,EAAAwF,EAAAjV,UACO,KAAA0P,EAGP,KAFAO,IAAAP,EAAAtN,KAKA8S,IAAArB,GAAAqB,GAAA3C,GAAA2C,GACA,IAAAE,IACAtC,MAAAC,GACAT,MAAAwB,GAGA,OADA9D,IAAA2D,GAAAG,GAAAf,GAAA,KACAqC,EAEA,QAAAD,IAAAp7B,EAAAC,GACA,MAAAA,GAAA/B,EAAA8B,EAAA9B,GAAA+B,EAAAlC,EAAAiC,EAAAjC,EAqEA,QAAAu9B,IAAAt7B,EAAAC,EAAA0H,GACA,OAAA3H,EAAAjC,EAAA4J,EAAA5J,IAAAkC,EAAA/B,EAAA8B,EAAA9B,IAAA8B,EAAAjC,EAAAkC,EAAAlC,IAAA4J,EAAAzJ,EAAA8B,EAAA9B,GAgHA,QAAAq9B,IAAAv9B,GACA,MAAAA,GAAAD,EAEA,QAAAy9B,IAAAx9B,GACA,MAAAA,GAAAE,EAEA,QAAAu9B,MACA,OACAC,MAAA,EACAC,SACAhvB,MAAA,KACA5O,EAAA,KACAG,EAAA,MAGA,QAAA09B,IAAAtuB,EAAA7N,EAAA+qB,EAAAC,EAAAoF,EAAAC,GACA,IAAAxiB,EAAA7N,EAAA+qB,EAAAC,EAAAoF,EAAAC,GAAA,CACA,GAAA+L,GAAA,IAAArR,EAAAqF,GAAAiM,EAAA,IAAArR,EAAAqF,GAAAiM,EAAAt8B,EAAAk8B,KACAI,GAAA,IAAAH,GAAAtuB,EAAAyuB,EAAA,GAAAvR,EAAAC,EAAAoR,EAAAC,GACAC,EAAA,IAAAH,GAAAtuB,EAAAyuB,EAAA,GAAAF,EAAApR,EAAAoF,EAAAiM,GACAC,EAAA,IAAAH,GAAAtuB,EAAAyuB,EAAA,GAAAvR,EAAAsR,EAAAD,EAAA/L,GACAiM,EAAA,IAAAH,GAAAtuB,EAAAyuB,EAAA,GAAAF,EAAAC,EAAAjM,EAAAC,IAGA,QAAAkM,IAAAC,EAAAl+B,EAAAG,EAAA4kB,EAAAF,EAAAmS,EAAAG,GACA,GAAAgH,GAAAC,EAAA3mB,GAiCA,OAhCA,SAAA4mB,GAAA38B,EAAA+qB,EAAAC,EAAAoF,EAAAC,GACA,KAAAtF,EAAAuK,GAAAtK,EAAAyK,GAAApS,EAAA+M,GAAAjN,EAAAkN,GAAA,CACA,GAAAnjB,EAAAlN,EAAAkN,MAAA,CACA,GAAAA,GAAAme,EAAA/sB,EAAA0B,EAAA1B,EAAAgtB,EAAA7sB,EAAAuB,EAAAvB,EAAAm+B,EAAAvR,IAAAC,GACA,IAAAoR,EAAAE,EAAA,CACA,GAAAjJ,GAAA7kB,KAAAyC,KAAAmrB,EAAAE,EACAvZ,GAAA/kB,EAAAq1B,EAAAxQ,EAAA1kB,EAAAk1B,EACA2B,EAAAh3B,EAAAq1B,EAAA8B,EAAAh3B,EAAAk1B,EACA8I,EAAAvvB,GAIA,OADAovB,GAAAt8B,EAAAk8B,MAAAW,EAAA,IAAA9R,EAAAqF,GAAA0M,EAAA,IAAA9R,EAAAqF,GAAAhvB,EAAA/C,GAAAu+B,EAAAE,EAAAt+B,GAAAq+B,EACAp5B,EAAAq5B,GAAA,EAAA17B,EAAAkJ,EAAA7G,EAAA,EAAiD6G,EAAA7G,IAAOA,EACxD,GAAA1D,EAAAs8B,EAAA,EAAA54B,GAAA,SAAAA,GACA,OACAi5B,EAAA38B,EAAA+qB,EAAAC,EAAA6R,EAAAC,EACA,MAEA,QACAH,EAAA38B,EAAA68B,EAAA7R,EAAAoF,EAAA0M,EACA,MAEA,QACAH,EAAA38B,EAAA+qB,EAAA+R,EAAAD,EAAAxM,EACA,MAEA,QACAsM,EAAA38B,EAAA68B,EAAAC,EAAA1M,EAAAC,MAIKmM,EAAAnZ,EAAAF,EAAAmS,EAAAG,GACLgH,EAGA,QAAAO,IAAAz8B,EAAAC,GACAD,EAAAwE,GAAA0L,IAAAlQ,GACAC,EAAAuE,GAAA0L,IAAAjQ,EACA,IAAAy8B,GAAA18B,EAAAmQ,EAAAwsB,EAAA38B,EAAAoQ,EAAAwsB,EAAA58B,EAAAC,EAAA48B,EAAA58B,EAAAkQ,EAAAusB,EAAAI,EAAA78B,EAAAmQ,EAAAusB,EAAAI,EAAA98B,IAAA28B,CACA,iBAAAjoB,GACA,UAAAtD,GAAA9C,KAAAqB,MAAA8sB,EAAAG,EAAAloB,IAAAtD,GAAA9C,KAAAqB,MAAA+sB,EAAAG,EAAAnoB,IAAAtD,GAAA9C,KAAAqB,MAAAgtB,EAAAG,EAAApoB,KAIA,QAAAqoB,IAAAh9B,EAAAC,GACA,GAAsBgB,GAAtBkC,KAAcwE,IACd,KAAA1G,IAAAjB,GACAiB,IAAAhB,GACAkD,EAAAlC,GAAAg8B,GAAAj9B,EAAAiB,GAAAhB,EAAAgB,IAEA0G,EAAA1G,GAAAjB,EAAAiB,EAGA,KAAAA,IAAAhB,GACAgB,IAAAjB,KACA2H,EAAA1G,GAAAhB,EAAAgB,GAGA,iBAAA0T,GACA,IAAA1T,IAAAkC,GAAAwE,EAAA1G,GAAAkC,EAAAlC,GAAA0T,EACA,OAAAhN,IAIA,QAAAu1B,IAAAl9B,EAAAC,GAEA,MADAD,MAAAC,KACA,SAAA0U,GACA,MAAA3U,IAAA,EAAA2U,GAAA1U,EAAA0U,GAIA,QAAAwoB,IAAAn9B,EAAAC,GACA,GAAAm9B,GAAAC,EAAAC,EAAAC,EAAAC,GAAAz1B,UAAA01B,GAAA11B,UAAA,EAAA5E,EAAA,GAAAwB,KAAAulB,IAEA,KADAlqB,GAAA,GAAAC,GAAA,IACAm9B,EAAAI,GAAA7rB,KAAA3R,MAAAq9B,EAAAI,GAAA9rB,KAAA1R,MACAq9B,EAAAD,EAAAK,OAAAH,IACAD,EAAAr9B,EAAA8B,MAAAw7B,EAAAD,GACA34B,EAAAxB,GAAAwB,EAAAxB,IAAAm6B,EAA6B34B,IAAAxB,GAAAm6B,IAE7BF,IAAA,OAAAC,IAAA,IACA14B,EAAAxB,GAAAwB,EAAAxB,IAAAk6B,EAA6B14B,IAAAxB,GAAAk6B,GAE7B14B,IAAAxB,GAAA,KACA+mB,EAAAtrB,MACAuE,IACApF,EAAAm/B,GAAAE,EAAAC,MAGAE,EAAAE,GAAA11B,SAMA,OAJAw1B,GAAAt9B,EAAAW,SACA08B,EAAAr9B,EAAA8B,MAAAw7B,GACA54B,EAAAxB,GAAAwB,EAAAxB,IAAAm6B,EAA2B34B,IAAAxB,GAAAm6B,GAE3B34B,EAAA/D,OAAA,EAAAspB,EAAA,IAAAjqB,EAAAiqB,EAAA,GAAAnsB,EAAA,SAAA4W,GACA,MAAA1U,GAAA0U,GAAA,KACK,WACL,MAAA1U,KACKA,EAAAiqB,EAAAtpB,OAAA,SAAA+T,GACL,OAAAjJ,GAAAvI,EAAA,EAAwBlD,EAAAkD,IAAOA,EAAAwB,GAAA+G,EAAAwe,EAAA/mB,OAAAuI,EAAA3N,EAAA4W,EAC/B,OAAAhQ,GAAAmS,KAAA,MAKA,QAAAmmB,IAAAj9B,EAAAC,GAEA,IADA,GAAAqN,GAAAnK,EAAAqB,GAAAm5B,cAAA/8B,SACAuC,GAAA,KAAAmK,EAAA9I,GAAAm5B,cAAAx6B,GAAAnD,EAAAC,MACA,MAAAqN,GAOA,QAAAswB,IAAA59B,EAAAC,GACA,GAAAkD,GAAApF,KAAA4J,KAAAk2B,EAAA79B,EAAAY,OAAAk9B,EAAA79B,EAAAW,OAAAm9B,EAAAxvB,KAAAiD,IAAAxR,EAAAY,OAAAX,EAAAW,OACA,KAAAuC,EAAA,EAAe46B,EAAA56B,IAAQA,EAAApF,EAAAa,KAAAq+B,GAAAj9B,EAAAmD,GAAAlD,EAAAkD,IACvB,MAAU06B,EAAA16B,IAAOA,EAAAwE,EAAAxE,GAAAnD,EAAAmD,EACjB,MAAU26B,EAAA36B,IAAOA,EAAAwE,EAAAxE,GAAAlD,EAAAkD,EACjB,iBAAAwR,GACA,IAAAxR,EAAA,EAAiB46B,EAAA56B,IAAQA,EAAAwE,EAAAxE,GAAApF,EAAAoF,GAAAwR,EACzB,OAAAhN,IA4CA,QAAAq2B,IAAA1wB,GACA,gBAAAqH,GACA,UAAAA,EAAA,EAAAA,GAAA,IAAArH,EAAAqH,IAGA,QAAAspB,IAAA3wB,GACA,gBAAAqH,GACA,SAAArH,EAAA,EAAAqH,IAGA,QAAAupB,IAAA5wB,GACA,gBAAAqH,GACA,aAAAA,EAAArH,EAAA,EAAAqH,GAAA,EAAArH,EAAA,IAAAqH,KAGA,QAAAwpB,IAAAxpB,GACA,MAAAA,KAEA,QAAAypB,IAAAzpB,GACA,MAAAA,OAEA,QAAA0pB,IAAA1pB,GACA,MAAAA,EAAA,QACA,IAAAA,GAAA,UACA,IAAAsV,GAAAtV,IAAA2pB,EAAArU,EAAAtV,CACA,cAAAA,EAAA2pB,EAAA,GAAA3pB,EAAAsV,GAAAqU,EAAA,KAEA,QAAAC,IAAA35B,GACA,gBAAA+P,GACA,MAAApG,MAAA2C,IAAAyD,EAAA/P,IAGA,QAAA45B,IAAA7pB,GACA,SAAApG,KAAA+B,IAAAqE,EAAAjG,IAEA,QAAA+vB,IAAA9pB,GACA,MAAApG,MAAA2C,IAAA,MAAAyD,EAAA,IAEA,QAAA+pB,IAAA/pB,GACA,SAAApG,KAAAyC,KAAA,EAAA2D,KAEA,QAAAgqB,IAAA3+B,EAAA0V,GACA,GAAA/Q,EAGA,OAFAhE,WAAAC,OAAA,IAAA8U,EAAA,KACA/U,UAAAC,OAAA+D,EAAA+Q,EAAA0S,GAAA7Z,KAAAI,KAAA,EAAA3O,IAAuDA,EAAA,EAAA2E,EAAA+Q,EAAA,GACvD,SAAAf,GACA,SAAA3U,EAAAuO,KAAA2C,IAAA,MAAAyD,GAAApG,KAAAU,KAAA0F,EAAAhQ,GAAAyjB,GAAA1S,IAGA,QAAAkpB,IAAAj6B,GAEA,MADAA,OAAA,SACA,SAAAgQ,GACA,MAAAA,OAAAhQ,EAAA,GAAAgQ,EAAAhQ,IAGA,QAAAk6B,IAAAlqB,GACA,cAAAA,EAAA,OAAAA,IAAA,OAAAA,EAAA,QAAAA,GAAA,UAAAA,EAAA,aAAAA,EAAA,QAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAGA,QAAAmqB,IAAA9+B,EAAAC,GACAD,EAAAwE,GAAAu6B,IAAA/+B,GACAC,EAAAuE,GAAAu6B,IAAA9+B,EACA,IAAA++B,GAAAh/B,EAAAoP,EAAA6vB,EAAAj/B,EAAA2H,EAAAu3B,EAAAl/B,EAAA4D,EAAAu7B,EAAAl/B,EAAAmP,EAAA4vB,EAAAI,EAAAn/B,EAAA0H,EAAAs3B,EAAAI,EAAAp/B,EAAA2D,EAAAs7B,CAGA,OAFA7+B,OAAA++B,OAAA,EAAAH,EAAA5+B,MAAA4+B,GAAAh/B,EAAA0H,EAAAs3B,GACA5+B,MAAA8+B,MAAA,EAAAH,EAAA3+B,MAAA2+B,GAAA/+B,EAAAmP,EAAA4vB,GAAqDG,EAAA,IAAAA,GAAA,IAA8B,KAAAA,OAAA,KACnF,SAAAxqB,GACA,MAAAtE,IAAA2uB,EAAAG,EAAAxqB,EAAAsqB,EAAAG,EAAAzqB,EAAAuqB,EAAAG,EAAA1qB,GAAA,IAIA,QAAA2qB,IAAAt/B,EAAAC,GACAD,EAAAwE,GAAAiN,IAAAzR,GACAC,EAAAuE,GAAAiN,IAAAxR,EACA,IAAA++B,GAAAh/B,EAAAoP,EAAAmwB,EAAAv/B,EAAA2E,EAAAu6B,EAAAl/B,EAAA4D,EAAAu7B,EAAAl/B,EAAAmP,EAAA4vB,EAAA1B,EAAAr9B,EAAA0E,EAAA46B,EAAAF,EAAAp/B,EAAA2D,EAAAs7B,CAGA,OAFA7+B,OAAAi9B,OAAA,EAAAiC,EAAAl/B,MAAAk/B,GAAAt/B,EAAA0E,EAAA46B,GACAl/B,MAAA8+B,MAAA,EAAAH,EAAA3+B,MAAA2+B,GAAA/+B,EAAAmP,EAAA4vB,GAAqDG,EAAA,IAAAA,GAAA,IAA8B,KAAAA,OAAA,KACnF,SAAAxqB,GACA,MAAApF,IAAAyvB,EAAAG,EAAAxqB,EAAA4qB,EAAAjC,EAAA3oB,EAAAuqB,EAAAG,EAAA1qB,GAAA,IAIA,QAAA6qB,IAAAx/B,EAAAC,GACAD,EAAAwE,GAAAi7B,IAAAz/B,GACAC,EAAAuE,GAAAi7B,IAAAx/B,EACA,IAAAi/B,GAAAl/B,EAAA4D,EAAA87B,EAAA1/B,IAAA48B,EAAA58B,EAAAC,EAAAo/B,EAAAp/B,EAAA2D,EAAAs7B,EAAAS,EAAA1/B,EAAAD,EAAA0/B,EAAA3C,EAAA98B,IAAA28B,CACA,iBAAAjoB,GACA,MAAAnE,IAAA0uB,EAAAG,EAAA1qB,EAAA+qB,EAAAC,EAAAhrB,EAAAioB,EAAAG,EAAApoB,GAAA,IAIA,QAAAirB,IAAA5/B,EAAAC,GAEA,MADAA,IAAAD,EACA,SAAA2U,GACA,MAAApG,MAAAqB,MAAA5P,EAAAC,EAAA0U,IAaA,QAAAkrB,IAAA51B,GACA,GAAA61B,IAAA71B,EAAAjK,EAAAiK,EAAAhK,GAAA8/B,GAAA91B,EAAAtC,EAAAsC,EAAAjM,GAAAgiC,EAAAC,GAAAH,GAAAI,EAAAC,GAAAL,EAAAC,GAAAK,EAAAH,GAAAI,GAAAN,EAAAD,GAAAI,KAAA,CACAJ,GAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KACAA,EAAA,OACAA,EAAA,OACAE,GAAA,GACAE,GAAA,IAEAzjC,KAAA8oB,QAAAya,EAAAzxB,KAAAuC,MAAAgvB,EAAA,GAAAA,EAAA,IAAAvxB,KAAAuC,OAAAivB,EAAA,GAAAA,EAAA,KAAAhvB,GACAtU,KAAA+0B,WAAAvnB,EAAArF,EAAAqF,EAAAqD,GACA7Q,KAAAM,OAAAijC,EAAAI,GACA3jC,KAAA6jC,KAAAF,EAAA7xB,KAAAuC,MAAAovB,EAAAE,GAAArvB,GAAA,EAKA,QAAAovB,IAAAngC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAggC,IAAAjgC,GACA,GAAAiB,GAAAsN,KAAAyC,KAAAmvB,GAAAngC,KAKA,OAJAiB,KACAjB,EAAA,IAAAiB,EACAjB,EAAA,IAAAiB,GAEAA,EAEA,QAAAo/B,IAAArgC,EAAAC,EAAAgB,GAGA,MAFAjB,GAAA,IAAAiB,EAAAhB,EAAA,GACAD,EAAA,IAAAiB,EAAAhB,EAAA,GACAD,EAWA,QAAAugC,IAAA57B,GACA,MAAAA,GAAA/D,OAAA+D,EAAAshB,MAAA,OAEA,QAAAua,IAAAC,EAAAC,EAAA/7B,EAAAulB,GACA,GAAAuW,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAv9B,GAAAwB,EAAA/F,KAAA,+BACAsrB,GAAAtrB,MACAuE,IAAA,EACApF,EAAAm/B,GAAAuD,EAAA,GAAAC,EAAA,MAEAv9B,IAAA,EACApF,EAAAm/B,GAAAuD,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACL/7B,EAAA/F,KAAA,aAAA8hC,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAl8B,EAAAulB,GACA0W,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnC1W,EAAAtrB,MACAuE,EAAAwB,EAAA/F,KAAA2hC,GAAA57B,GAAA,sBACA5G,EAAAm/B,GAAA0D,EAAAC,MAEKA,GACLl8B,EAAA/F,KAAA2hC,GAAA57B,GAAA,UAAAk8B,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAr8B,EAAAulB,GACA6W,IAAAC,EACA9W,EAAAtrB,MACAuE,EAAAwB,EAAA/F,KAAA2hC,GAAA57B,GAAA,qBACA5G,EAAAm/B,GAAA6D,EAAAC,KAEKA,GACLr8B,EAAA/F,KAAA2hC,GAAA57B,GAAA,SAAAq8B,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAx8B,EAAAulB,GACA,GAAAgX,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAh+B,GAAAwB,EAAA/F,KAAA2hC,GAAA57B,GAAA,2BACAulB,GAAAtrB,MACAuE,IAAA,EACApF,EAAAm/B,GAAAgE,EAAA,GAAAC,EAAA,MAEAh+B,IAAA,EACApF,EAAAm/B,GAAAgE,EAAA,GAAAC,EAAA,UAEK,KAAAA,EAAA,QAAAA,EAAA,IACLx8B,EAAA/F,KAAA2hC,GAAA57B,GAAA,SAAAw8B,EAAA,KAGA,QAAAC,IAAAphC,EAAAC,GACA,GAAA0E,MAAAulB,IAOA,OANAlqB,GAAAwE,GAAA68B,UAAArhC,GAAAC,EAAAuE,GAAA68B,UAAAphC,GACAugC,GAAAxgC,EAAAwxB,UAAAvxB,EAAAuxB,UAAA7sB,EAAAulB,GACAyW,GAAA3gC,EAAAulB,OAAAtlB,EAAAslB,OAAA5gB,EAAAulB,GACA4W,GAAA9gC,EAAAsgC,KAAArgC,EAAAqgC,KAAA37B,EAAAulB,GACA+W,GAAAjhC,EAAAjD,MAAAkD,EAAAlD,MAAA4H,EAAAulB,GACAlqB,EAAAC,EAAA,KACA,SAAA0U,GAEA,IADA,GAAAjJ,GAAAvI,EAAA,GAAAC,EAAA8mB,EAAAtpB,SACAuC,EAAAC,GAAAuB,GAAA+G,EAAAwe,EAAA/mB,OAAAuI,EAAA3N,EAAA4W,EACA,OAAAhQ,GAAAmS,KAAA,KAGA,QAAAwqB,IAAAthC,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAAlC,GACA,OAAAA,EAAAiC,GAAAC,GAGA,QAAAshC,IAAAvhC,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAAlC,GACA,MAAAwQ,MAAA+C,IAAA,EAAA/C,KAAAiD,IAAA,GAAAzT,EAAAiC,GAAAC,KAWA,QAAAuhC,IAAAC,GAEA,IADA,GAAA3c,GAAA2c,EAAA9+B,OAAAm2B,EAAA2I,EAAA/+B,OAAAg/B,EAAAC,GAAA7c,EAAAgU,GAAAjU,GAAAC,GACAA,IAAA4c,GACA5c,IAAAzb,OACAwb,EAAAjmB,KAAAkmB,EAGA,KADA,GAAA7jB,GAAA4jB,EAAAjkB,OACAk4B,IAAA4I,GACA7c,EAAAsU,OAAAl4B,EAAA,EAAA63B,GACAA,IAAAzvB,MAEA,OAAAwb,GAEA,QAAA+c,IAAAniC,GAEA,IADA,GAAAoiC,MAAAx4B,EAAA5J,EAAA4J,OACA,MAAAA,GACAw4B,EAAAjjC,KAAAa,GACAA,EAAA4J,EACAA,UAGA,OADAw4B,GAAAjjC,KAAAa,GACAoiC,EAEA,QAAAF,IAAA3hC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EAEA,KADA,GAAA8hC,GAAAF,GAAA5hC,GAAA+hC,EAAAH,GAAA3hC,GAAA+hC,EAAAF,EAAA7b,MAAAgc,EAAAF,EAAA9b,MAAAic,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAA7b,MACAgc,EAAAF,EAAA9b,KAEA,OAAAic,GA6UA,QAAAC,IAAAnkC,GACAA,EAAAokC,OAAA,EAEA,QAAAC,IAAArkC,GACAA,EAAAokC,OAAA,GAEA,QAAAE,IAAAtkC,GACAA,EAAAokC,OAAA,EACApkC,EAAAukC,GAAAvkC,EAAAD,EAAAC,EAAAwkC,GAAAxkC,EAAAE,EAEA,QAAAukC,IAAAzkC,GACAA,EAAAokC,OAAA,GAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAAvf,GAAA,EAAAC,EAAA,CAEA,IADAof,EAAAG,OAAA,GACAH,EAAAjH,KAEA,IADA,GAAA/zB,GAAAg0B,EAAAgH,EAAAhH,MAAAv4B,EAAAu4B,EAAA/6B,OAAAuC,EAAA,KACAA,EAAAC,GACAuE,EAAAg0B,EAAAx4B,GACA,MAAAwE,IACA+6B,GAAA/6B,EAAAi7B,EAAAC,GACAF,EAAAG,QAAAn7B,EAAAm7B,OACAxf,GAAA3b,EAAAm7B,OAAAn7B,EAAA2b,GACAC,GAAA5b,EAAAm7B,OAAAn7B,EAAA4b,GAGA,IAAAof,EAAAh2B,MAAA,CACAg2B,EAAAjH,OACAiH,EAAAh2B,MAAA5O,GAAAwQ,KAAAw0B,SAAA,GACAJ,EAAAh2B,MAAAzO,GAAAqQ,KAAAw0B,SAAA,GAEA,IAAA9hC,GAAA2hC,EAAAC,EAAAF,EAAAh2B,MAAA+wB,MACAiF,GAAAG,QAAAH,EAAAK,YAAA/hC,EACAqiB,GAAAriB,EAAA0hC,EAAAh2B,MAAA5O,EACAwlB,GAAAtiB,EAAA0hC,EAAAh2B,MAAAzO,EAEAykC,EAAArf,KAAAqf,EAAAG,OACAH,EAAApf,KAAAof,EAAAG,OA6DA,QAAAG,IAAAlgC,EAAAmgC,GAIA,MAHA1+B,IAAAyP,OAAAlR,EAAAmgC,EAAA,2BACAngC,EAAA44B,MAAA54B,EACAA,EAAAogC,MAAAC,GACArgC,EAEA,QAAAsgC,IAAA5jC,EAAAsK,GAEA,IADA,GAAA4xB,IAAAl8B,GACA,OAAAA,EAAAk8B,EAAA1V,QAEA,GADAlc,EAAAtK,IACAs8B,EAAAt8B,EAAAs8B,YAAA34B,EAAA24B,EAAAn7B,QAEA,IADA,GAAAwC,GAAA24B,IACA34B,GAAA,GAAAu4B,EAAA/8B,KAAAm9B,EAAA34B,IAIA,QAAAkgC,IAAA7jC,EAAAsK,GAEA,IADA,GAAA4xB,IAAAl8B,GAAA8jC,KACA,OAAA9jC,EAAAk8B,EAAA1V,QAEA,GADAsd,EAAA3kC,KAAAa,IACAs8B,EAAAt8B,EAAAs8B,YAAA34B,EAAA24B,EAAAn7B,QAEA,IADA,GAAAwC,GAAA24B,EAAA54B,EAAA,KACAA,EAAAC,GAAAu4B,EAAA/8B,KAAAm9B,EAAA54B,GAGA,aAAA1D,EAAA8jC,EAAAtd,QACAlc,EAAAtK,GAGA,QAAA+jC,IAAAxlC,GACA,MAAAA,GAAA+9B,SAEA,QAAA0H,IAAAzlC,GACA,MAAAA,GAAA9B,MAEA,QAAAwnC,IAAA1jC,EAAAC,GACA,MAAAA,GAAA/D,MAAA8D,EAAA9D,MAEA,QAAAknC,IAAAzH,GACA,MAAAn3B,IAAA+hB,MAAAoV,EAAAn0B,IAAA,SAAA6B,GACA,OAAAA,EAAA0yB,cAAAv0B,IAAA,SAAAm8B,GACA,OACAhhC,OAAA0G,EACA3G,OAAAihC,QAqJA,QAAAC,IAAA5lC,GACA,MAAAA,GAAAD,EAEA,QAAA8lC,IAAA7lC,GACA,MAAAA,GAAAE,EAEA,QAAA4lC,IAAA9lC,EAAA4kB,EAAA1kB,GACAF,EAAA4kB,KACA5kB,EAAAE,IAiEA,QAAA6lC,IAAA1nC,GACA,MAAAmI,IAAAtH,MAAAb,EAAAuE,QAEA,QAAAojC,IAAA3nC,GAEA,IADA,GAAA2N,GAAA,GAAAC,EAAA5N,EAAA,GAAAuE,OAAAgiB,OACA5Y,EAAAC,GAAA2Y,EAAA5Y,GAAA,CACA,OAAA4Y,GAEA,QAAAqhB,IAAAhf,GAEA,IADA,GAAAhkB,GAAAkC,EAAA,EAAA6G,EAAA,EAAAwF,EAAAyV,EAAA,MAAA7hB,EAAA6hB,EAAArkB,OACUwC,EAAAD,IAAMA,GAChBlC,EAAAgkB,EAAA9hB,GAAA,IAAAqM,IACAxF,EAAA7G,EACAqM,EAAAvO,EAGA,OAAA+I,GAEA,QAAAk6B,IAAAlmC,GACA,MAAAA,GAAAmmC,OAAAC,GAAA,GAEA,QAAAA,IAAA1uB,EAAA1X,GACA,MAAA0X,GAAA1X,EAAA,GAgDA,QAAAqmC,IAAAnnC,EAAAonC,GACA,MAAAC,IAAArnC,EAAAqR,KAAAoH,KAAApH,KAAAqH,IAAA0uB,EAAA1jC,QAAA2N,KAAAi2B,IAAA,IAEA,QAAAD,IAAArnC,EAAAkG,GAEA,IADA,GAAArF,GAAA,GAAAkC,GAAA/C,EAAA,GAAA+M,GAAA/M,EAAA,GAAA+C,GAAAmD,EAAAkK,OACAvP,GAAAqF,GAAAkK,EAAAvP,GAAAkM,EAAAlM,EAAAkC,CACA,OAAAqN,GAEA,QAAAm3B,IAAAH,GACA,OAAA9/B,GAAAgN,IAAA8yB,GAAA9/B,GAAA8M,IAAAgzB,IA2CA,QAAAI,IAAA1kC,EAAAC,GACA,MAAAD,GAAA9D,MAAA+D,EAAA/D,MAEA,QAAAyoC,IAAA3kC,EAAAC,GACA,GAAA0H,GAAA3H,EAAA4kC,UACA5kC,GAAA4kC,WAAA3kC,EACAA,EAAA4kC,WAAA7kC,EACAC,EAAA2kC,WAAAj9B,EACAA,EAAAk9B,WAAA5kC,EAEA,QAAA6kC,IAAA9kC,EAAAC,GACAD,EAAA4kC,WAAA3kC,EACAA,EAAA4kC,WAAA7kC,EAEA,QAAA+kC,IAAA/kC,EAAAC,GACA,GAAA6qB,GAAA7qB,EAAAlC,EAAAiC,EAAAjC,EAAAgtB,EAAA9qB,EAAA/B,EAAA8B,EAAA9B,EAAA8mC,EAAAhlC,EAAAmQ,EAAAlQ,EAAAkQ,CACA,YAAA60B,IAAAla,IAAAC,IAEA,QAAAka,IAAAxlC,GAGA,QAAAylC,GAAAzlC,GACA0lC,EAAA52B,KAAAiD,IAAA/R,EAAA1B,EAAA0B,EAAA0Q,EAAAg1B,GACAC,EAAA72B,KAAA+C,IAAA7R,EAAA1B,EAAA0B,EAAA0Q,EAAAi1B,GACAC,EAAA92B,KAAAiD,IAAA/R,EAAAvB,EAAAuB,EAAA0Q,EAAAk1B,GACAC,EAAA/2B,KAAA+C,IAAA7R,EAAAvB,EAAAuB,EAAA0Q,EAAAm1B,GANA,IAAA3J,EAAAl8B,EAAAs8B,YAAA34B,EAAAu4B,EAAA/6B,QAAA,CACA,GAAA+6B,GAAA37B,EAAAC,EAAA0H,EAAAxE,EAAA6G,EAAA/I,EAAAmC,EAAA+hC,EAAA3vB,IAAA4vB,IAAA5vB,KAAA6vB,EAAA7vB,IAAA8vB,IAAA9vB,IAYA,IALAmmB,EAAAjoB,QAAA6xB,IACAvlC,EAAA27B,EAAA,GACA37B,EAAAjC,GAAAiC,EAAAmQ,EACAnQ,EAAA9B,EAAA,EACAgnC,EAAAllC,GACAoD,EAAA,IACAnD,EAAA07B,EAAA,GACA17B,EAAAlC,EAAAkC,EAAAkQ,EACAlQ,EAAA/B,EAAA,EACAgnC,EAAAjlC,GACAmD,EAAA,GAQA,IAPAuE,EAAAg0B,EAAA,GACA6J,GAAAxlC,EAAAC,EAAA0H,GACAu9B,EAAAv9B,GACAg9B,GAAA3kC,EAAA2H,GACA3H,EAAA6kC,WAAAl9B,EACAg9B,GAAAh9B,EAAA1H,GACAA,EAAAD,EAAA4kC,WACAzhC,EAAA,EAAmBC,EAAAD,EAAOA,IAAA,CAC1BqiC,GAAAxlC,EAAAC,EAAA0H,EAAAg0B,EAAAx4B,GACA,IAAAsiC,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAA37B,EAAA/J,EAAA2kC,WAAgC56B,IAAA/J,EAAS+J,IAAA46B,WAAAc,IACzC,GAAAX,GAAA/6B,EAAArC,GAAA,CACA89B,EAAA,CACA,OAGA,MAAAA,EACA,IAAAxkC,EAAAjB,EAAA6kC,WAAkC5jC,IAAA+I,EAAA66B,aAClCE,GAAA9jC,EAAA0G,GADsD1G,IAAA4jC,WAAAc,KAMtDF,GACAE,EAAAD,MAAAC,GAAA1lC,EAAAkQ,EAAAnQ,EAAAmQ,EAAA20B,GAAA9kC,EAAAC,EAAA+J,GAAiF86B,GAAA9kC,EAAAiB,EAAAhB,GACjFkD,MAEAwhC,GAAA3kC,EAAA2H,GACA1H,EAAA0H,EACAu9B,EAAAv9B,IAKA,GAAA2b,IAAA6hB,EAAAC,GAAA,EAAA7hB,GAAA8hB,EAAAC,GAAA,EAAA3c,EAAA,CACA,KAAAxlB,EAAA,EAAeC,EAAAD,EAAOA,IACtBwE,EAAAg0B,EAAAx4B,GACAwE,EAAA5J,GAAAulB,EACA3b,EAAAzJ,GAAAqlB,EACAoF,EAAApa,KAAA+C,IAAAqX,EAAAhhB,EAAAwI,EAAA5B,KAAAyC,KAAArJ,EAAA5J,EAAA4J,EAAA5J,EAAA4J,EAAAzJ,EAAAyJ,EAAAzJ,GAEAuB,GAAA0Q,EAAAwY,EACAgT,EAAAjoB,QAAAkyB,KAEA,QAAAL,IAAA9lC,GACAA,EAAAmlC,WAAAnlC,EAAAolC,WAAAplC,EAEA,QAAAmmC,IAAAnmC,SACAA,GAAAmlC,iBACAnlC,GAAAolC,WAEA,QAAAgB,IAAApmC,EAAA1B,EAAAG,EAAA+C,GACA,GAAA86B,GAAAt8B,EAAAs8B,QAIA,IAHAt8B,EAAA1B,KAAAkD,EAAAxB,EAAA1B,EACA0B,EAAAvB,KAAA+C,EAAAxB,EAAAvB,EACAuB,EAAA0Q,GAAAlP,EACA86B,EAEA,IADA,GAAA54B,GAAA,GAAAC,EAAA24B,EAAAn7B,SACAuC,EAAAC,GAAAyiC,GAAA9J,EAAA54B,GAAApF,EAAAG,EAAA+C,GAGA,QAAAukC,IAAAxlC,EAAAC,EAAA0H,GACA,GAAAm+B,GAAA9lC,EAAAmQ,EAAAxI,EAAAwI,EAAA2a,EAAA7qB,EAAAlC,EAAAiC,EAAAjC,EAAAgtB,EAAA9qB,EAAA/B,EAAA8B,EAAA9B,CACA,IAAA4nC,IAAAhb,GAAAC,GAAA,CACA,GAAAgb,GAAA9lC,EAAAkQ,EAAAxI,EAAAwI,EAAA61B,EAAAlb,IAAAC,GACAgb,MACAD,IACA,IAAA/nC,GAAA,IAAA+nC,EAAAC,IAAA,EAAAC,GAAA9nC,EAAAqQ,KAAAyC,KAAAzC,KAAA+C,IAAA,IAAAy0B,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,OAAA,EAAAC,EACAr+B,GAAA5J,EAAAiC,EAAAjC,IAAA+sB,EAAA5sB,EAAA6sB,EACApjB,EAAAzJ,EAAA8B,EAAA9B,EAAAH,EAAAgtB,EAAA7sB,EAAA4sB,MAEAnjB,GAAA5J,EAAAiC,EAAAjC,EAAA+nC,EACAn+B,EAAAzJ,EAAA8B,EAAA9B,EAuHA,QAAA+nC,IAAAjmC,EAAAC,GACA,MAAAD,GAAAqJ,QAAApJ,EAAAoJ,OAAA,IAEA,QAAA68B,IAAA12B,GACA,GAAAusB,GAAAvsB,EAAAusB,QACA,OAAAA,GAAAn7B,OAAAm7B,EAAA,GAAAvsB,EAAAmF,EAEA,QAAAwxB,IAAA32B,GACA,GAAApM,GAAA24B,EAAAvsB,EAAAusB,QACA,QAAA34B,EAAA24B,EAAAn7B,QAAAm7B,EAAA34B,EAAA,GAAAoM,EAAAmF,EAEA,QAAAyxB,IAAAC,EAAAC,EAAAlgB,GACA,GAAAmgB,GAAAngB,GAAAkgB,EAAAnjC,EAAAkjC,EAAAljC,EACAmjC,GAAA3+B,GAAA4+B,EACAD,EAAA3hC,GAAAyhB,EACAigB,EAAA1+B,GAAA4+B,EACAD,EAAAziC,GAAAuiB,EACAkgB,EAAAr8B,GAAAmc,EAEA,QAAAogB,IAAAh3B,GAEA,IADA,GAAAvD,GAAAma,EAAA,EAAAmgB,EAAA,EAAAxK,EAAAvsB,EAAAusB,SAAA54B,EAAA44B,EAAAn7B,SACAuC,GAAA,GACA8I,EAAA8vB,EAAA54B,GACA8I,EAAApI,GAAAuiB,EACAna,EAAAhC,GAAAmc,EACAA,GAAAna,EAAAtH,GAAA4hC,GAAAt6B,EAAAtE,GAGA,QAAA8+B,IAAAC,EAAAl3B,EAAAm3B,GACA,MAAAD,GAAA1mC,EAAAqJ,SAAAmG,EAAAnG,OAAAq9B,EAAA1mC,EAAA2mC,EA4CA,QAAAC,IAAA7K,GACA,SAAAv3B,GAAA8M,IAAAyqB,EAAA,SAAA4H,GACA,MAAAA,GAAAzlC,IAGA,QAAA2oC,IAAA9K,GACA,MAAAA,GAAAoI,OAAA,SAAApmC,EAAA4lC,GACA,MAAA5lC,GAAA4lC,EAAA5lC,GACK,GAAAg+B,EAAAn7B,OAEL,QAAAkmC,IAAArnC,GACA,GAAAs8B,GAAAt8B,EAAAs8B,QACA,OAAAA,MAAAn7B,OAAAkmC,GAAA/K,EAAA,IAAAt8B,EAEA,QAAAsnC,IAAAtnC,GACA,GAAA2D,GAAA24B,EAAAt8B,EAAAs8B,QACA,OAAAA,KAAA34B,EAAA24B,EAAAn7B,QAAAmmC,GAAAhL,EAAA34B,EAAA,IAAA3D,EAoJA,QAAAunC,IAAAvnC,GACA,OACA1B,EAAA0B,EAAA1B,EACAG,EAAAuB,EAAAvB,EACA4sB,GAAArrB,EAAAqrB,GACAC,GAAAtrB,EAAAsrB,IAGA,QAAAkc,IAAAxnC,EAAAyN,GACA,GAAAnP,GAAA0B,EAAA1B,EAAAmP,EAAA,GAAAhP,EAAAuB,EAAAvB,EAAAgP,EAAA,GAAA4d,EAAArrB,EAAAqrB,GAAA5d,EAAA,GAAAA,EAAA,GAAA6d,EAAAtrB,EAAAsrB,GAAA7d,EAAA,GAAAA,EAAA,EASA,OARA,GAAA4d,IACA/sB,GAAA+sB,EAAA,EACAA,EAAA,GAEA,EAAAC,IACA7sB,GAAA6sB,EAAA,EACAA,EAAA,IAGAhtB,IACAG,IACA4sB,KACAC,MAsCA,QAAAmc,IAAAjqC,GACA,GAAA6nB,GAAA7nB,EAAA,GAAAkqC,EAAAlqC,IAAA2D,OAAA,EACA,OAAAumC,GAAAriB,KAAAqiB,MAAAriB,GAEA,QAAAsiB,IAAArqC,GACA,MAAAA,GAAAsqC,YAAAtqC,EAAAsqC,cAAAH,GAAAnqC,EAAAG,SAEA,QAAAoqC,IAAArqC,EAAAC,EAAAqqC,EAAApjB,GACA,GAAAhD,GAAAomB,EAAAtqC,EAAA,GAAAA,EAAA,IAAAkG,EAAAghB,EAAAjnB,EAAA,GAAAA,EAAA,GACA,iBAAAa,GACA,MAAAoF,GAAAge,EAAApjB,KAGA,QAAAypC,IAAAvqC,EAAAwqC,GACA,GAAA3c,GAAAtgB,EAAA,EAAAk9B,EAAAzqC,EAAA2D,OAAA,EAAAkiB,EAAA7lB,EAAAuN,GAAAggB,EAAAvtB,EAAAyqC,EAOA,OANA5kB,GAAA0H,IACAM,EAAAtgB,IAAAk9B,IAAA5c,EACAA,EAAAhI,IAAA0H,IAAAM,GAEA7tB,EAAAuN,GAAAi9B,EAAAruB,MAAA0J,GACA7lB,EAAAyqC,GAAAD,EAAA9xB,KAAA6U,GACAvtB,EAEA,QAAA0qC,IAAAlvB,GACA,MAAAA,IACAW,MAAA,SAAArb,GACA,MAAAwQ,MAAA6K,MAAArb,EAAA0a,MAEA9C,KAAA,SAAA5X,GACA,MAAAwQ,MAAAoH,KAAA5X,EAAA0a,OAEKmvB,GAML,QAAAC,IAAA5qC,EAAAC,EAAAqqC,EAAApjB,GACA,GAAAhD,MAAAhe,KAAA6G,EAAA,EAAA/I,EAAAsN,KAAAiD,IAAAvU,EAAA2D,OAAA1D,EAAA0D,QAAA,CAKA,KAJA3D,EAAAgE,GAAAhE,EAAA,KACAA,IAAA8E,QAAA8U,UACA3Z,IAAA6E,QAAA8U,aAEA7M,GAAA/I,GACAkgB,EAAAviB,KAAA2oC,EAAAtqC,EAAA+M,EAAA,GAAA/M,EAAA+M,KACA7G,EAAAvE,KAAAulB,EAAAjnB,EAAA8M,EAAA,GAAA9M,EAAA8M,IAEA,iBAAAjM,GACA,GAAAiM,GAAAxF,GAAAsjC,OAAA7qC,EAAAc,EAAA,EAAAkD,GAAA,CACA,OAAAkC,GAAA6G,GAAAmX,EAAAnX,GAAAjM,KAMA,QAAAgqC,IAAA9qC,EAAAC,EAAAinB,EAAA6jB,GAEA,QAAAC,KACA,GAAAjrC,GAAAuR,KAAAiD,IAAAvU,EAAA2D,OAAA1D,EAAA0D,QAAA,EAAAinC,GAAAP,GAAAC,EAAAS,EAAAzG,GAAAD,EAGA,OAFA/P,GAAAv0B,EAAAC,EAAAC,EAAAqqC,EAAApjB,GACA+jB,EAAAlrC,EAAAE,EAAAD,EAAAsqC,EAAAtK,IACAlgC,EAEA,QAAAA,GAAAgB,GACA,MAAAwzB,GAAAxzB,GARA,GAAAwzB,GAAA2W,CAiDA,OAvCAnrC,GAAA+mB,OAAA,SAAA5lB,GACA,MAAAgqC,GAAAhqC,IAEAnB,EAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACA3D,EAAAc,EAAAyJ,IAAA2gC,QACAF,KAFAhrC,GAIAF,EAAAG,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA1D,EAAAa,EACAkqC,KAFA/qC,GAIAH,EAAAqrC,WAAA,SAAArqC,GACA,MAAAhB,GAAAG,MAAAa,GAAAomB,YAAAyb,KAEA7iC,EAAAirC,MAAA,SAAAjqC,GACA,MAAA4C,WAAAC,QACAonC,EAAAjqC,EACAkqC,KAFAD,GAIAjrC,EAAAonB,YAAA,SAAApmB,GACA,MAAA4C,WAAAC,QACAujB,EAAApmB,EACAkqC,KAFA9jB,GAIApnB,EAAAU,MAAA,SAAAwM,GACA,MAAAo+B,IAAAprC,EAAAgN,IAEAlN,EAAAW,WAAA,SAAAuM,EAAAtM,GACA,MAAA2qC,IAAArrC,EAAAgN,EAAAtM,IAEAZ,EAAA0qC,KAAA,SAAAx9B,GAEA,MADAs+B,IAAAtrC,EAAAgN,GACAg+B,KAEAlrC,EAAAyrC,KAAA,WACA,MAAAT,IAAA9qC,EAAAC,EAAAinB,EAAA6jB,IAEAC,IAEA,QAAAQ,IAAA1rC,EAAAC,GACA,MAAAwH,IAAAyP,OAAAlX,EAAAC,EAAA,4CAEA,QAAAurC,IAAAtrC,EAAAgN,GAGA,MAFAu9B,IAAAvqC,EAAA0qC,GAAAe,GAAAzrC,EAAAgN,GAAA,KACAu9B,GAAAvqC,EAAA0qC,GAAAe,GAAAzrC,EAAAgN,GAAA,KACAhN,EAEA,QAAAyrC,IAAAzrC,EAAAgN,GACA,MAAAA,MAAA,GACA,IAAAwuB,GAAAyO,GAAAjqC,GAAA0rC,EAAAlQ,EAAA,GAAAA,EAAA,GAAAhgB,EAAAlK,KAAA2C,IAAA,GAAA3C,KAAA6K,MAAA7K,KAAAqH,IAAA+yB,EAAA1+B,GAAAsE,KAAAsH,OAAA+yB,EAAA3+B,EAAA0+B,EAAAlwB,CAKA,OAJA,KAAAmwB,EAAAnwB,GAAA,GAA+B,KAAAmwB,EAAAnwB,GAAA,EAAgC,KAAAmwB,IAAAnwB,GAAA,GAC/DggB,EAAA,GAAAlqB,KAAAoH,KAAA8iB,EAAA,GAAAhgB,KACAggB,EAAA,GAAAlqB,KAAA6K,MAAAqf,EAAA,GAAAhgB,KAAA,GAAAA,EACAggB,EAAA,GAAAhgB,EACAggB,EAEA,QAAA4P,IAAAprC,EAAAgN,GACA,MAAAzF,IAAAtH,MAAA2F,MAAA2B,GAAAkkC,GAAAzrC,EAAAgN,IAEA,QAAAq+B,IAAArrC,EAAAgN,EAAAtM,GACA,GAAAT,GAAAwrC,GAAAzrC,EAAAgN,EACA,IAAAtM,EAAA,CACA,GAAA0N,GAAA2L,GAAArF,KAAAhU,EAEA,IADA0N,EAAA+a,QACA,MAAA/a,EAAA,IACA,GAAAkM,GAAA/S,GAAAyT,aAAA1J,KAAA+C,IAAAyE,GAAA7Y,EAAA,IAAA6Y,GAAA7Y,EAAA,KAIA,OAHAmO,GAAA,KAAAA,EAAA,OAAAw9B,GAAAtxB,EAAAxa,MAAAG,EAAA,MACAmO,EAAA,OACA1N,EAAA6G,GAAA7G,OAAA0N,EAAAyL,KAAA,KACA,SAAA9Y,GACA,MAAAL,GAAA4Z,EAAAxa,MAAAiB,IAAAuZ,EAAAvB,QAGA3K,EAAA,KAAAA,EAAA,OAAAy9B,GAAAz9B,EAAA,GAAAnO,IACAS,EAAA0N,EAAAyL,KAAA,QAEAnZ,GAAA,KAAAkrC,GAAA3rC,EAAA,OAEA,OAAAsH,IAAA7G,UASA,QAAAkrC,IAAA3sC,GACA,OAAAqS,KAAA6K,MAAA7K,KAAAqH,IAAA1Z,GAAAqS,KAAAsH,KAAA,KAEA,QAAAizB,IAAA1jC,EAAAlI,GACA,GAAAwY,GAAAmzB,GAAA3rC,EAAA,GACA,OAAAkI,KAAA2jC,IAAAx6B,KAAAwH,IAAAL,EAAAmzB,GAAAt6B,KAAA+C,IAAAyE,GAAA7Y,EAAA,IAAA6Y,GAAA7Y,EAAA,gBAAAkI,GAAAsQ,EAAA,SAAAtQ,GAKA,QAAA4jC,IAAAhsC,EAAAisC,EAAAC,EAAAjsC,GACA,QAAA2Y,GAAA7X,GACA,OAAAmrC,EAAA36B,KAAAqH,IAAA,EAAA7X,EAAA,EAAAA,IAAAwQ,KAAAqH,IAAA7X,EAAA,KAAAA,IAAAwQ,KAAAqH,IAAAqzB,GAEA,QAAA/3B,GAAAnT,GACA,MAAAmrC,GAAA36B,KAAA2C,IAAA+3B,EAAAlrC,IAAAwQ,KAAA2C,IAAA+3B,GAAAlrC,GAEA,QAAAhB,GAAAgB,GACA,MAAAf,GAAA4Y,EAAA7X,IAoDA,MAlDAhB,GAAA+mB,OAAA,SAAA/lB,GACA,MAAAmT,GAAAlU,EAAA8mB,OAAA/lB,KAEAhB,EAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACAsoC,EAAAnrC,EAAA,MACAf,EAAAC,UAAAc,EAAAyJ,IAAA2gC,SAAA3gC,IAAAoO,IACA7Y,GAHAE,GAKAF,EAAAksC,KAAA,SAAAxnC,GACA,MAAAd,WAAAC,QACAqoC,GAAAxnC,EACAzE,EAAAC,SAAAuK,IAAAoO,IACA7Y,GAHAksC,GAKAlsC,EAAA0qC,KAAA,WACA,GAAA0B,GAAA3B,GAAAvqC,EAAAuK,IAAAoO,GAAAszB,EAAA36B,KAAA66B,GAGA,OAFApsC,GAAAC,OAAAksC,GACAlsC,EAAAksC,EAAA3hC,IAAA0J,GACAnU,GAEAA,EAAAU,MAAA,WACA,GAAAg7B,GAAAyO,GAAAjqC,GAAAQ,KAAA0jB,EAAAsX,EAAA,GAAAjpB,EAAAipB,EAAA,GAAAt1B,EAAAoL,KAAA6K,MAAAxD,EAAAuL,IAAAnX,EAAAuE,KAAAoH,KAAAC,EAAApG,IAAApM,EAAA6lC,EAAA,IAAAA,CACA,IAAA5zB,SAAArL,EAAA7G,GAAA,CACA,GAAA+lC,EAAA,CACA,KAAgBl/B,EAAA7G,EAAMA,IAAA,OAAAlC,GAAA,EAAqBmC,EAAAnC,EAAOA,IAAAxD,EAAAmB,KAAAsS,EAAA/N,GAAAlC,EAClDxD,GAAAmB,KAAAsS,EAAA/N,QAGA,KADA1F,EAAAmB,KAAAsS,EAAA/N,IACgBA,IAAA6G,GAAQ,OAAA/I,GAAAmC,EAAA,EAAsBnC,EAAA,EAAOA,IAAAxD,EAAAmB,KAAAsS,EAAA/N,GAAAlC,EAErD,KAAAkC,EAAA,EAAmB1F,EAAA0F,GAAAge,EAAche,KACjC,IAAA6G,EAAAvM,EAAAmD,OAA8BnD,EAAAuM,EAAA,GAAAwF,EAAkBxF,KAChDvM,IAAAsE,MAAAoB,EAAA6G,GAEA,MAAAvM,IAEAV,EAAAW,WAAA,SAAA0F,EAAAzF,GACA,IAAAgD,UAAAC,OAAA,MAAAyoC,GACA1oC,WAAAC,OAAA,EAAAjD,EAAA0rC,GAA4D,kBAAA1rC,OAAA6G,GAAA7G,UAC5D,IAAAsD,GAAAsN,KAAA+C,IAAA,EAAA23B,EAAA7lC,EAAArG,EAAAU,QAAAmD,OACA,iBAAA5C,GACA,GAAAmF,GAAAnF,EAAAkT,EAAA3C,KAAAqB,MAAAgG,EAAA5X,IAEA,OADAirC,GAAA,GAAA9lC,EAAA8lC,IAAA9lC,GAAA8lC,GACAhoC,GAAAkC,EAAAxF,EAAAK,GAAA,KAGAjB,EAAAyrC,KAAA,WACA,MAAAQ,IAAAhsC,EAAAwrC,OAAAS,EAAAC,EAAAjsC,IAEAwrC,GAAA1rC,EAAAC,GAaA,QAAAssC,IAAAtsC,EAAA0a,EAAAza,GAEA,QAAAF,GAAAgB,GACA,MAAAf,GAAAusC,EAAAxrC,IAFA,GAAAwrC,GAAAC,GAAA9xB,GAAA+xB,EAAAD,GAAA,EAAA9xB,EA+BA,OA3BA3a,GAAA+mB,OAAA,SAAA/lB,GACA,MAAA0rC,GAAAzsC,EAAA8mB,OAAA/lB,KAEAhB,EAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACA5D,EAAAC,UAAAc,EAAAyJ,IAAA2gC,SAAA3gC,IAAA+hC,IACAxsC,GAFAE,GAIAF,EAAAU,MAAA,SAAAwM,GACA,MAAAo+B,IAAAprC,EAAAgN,IAEAlN,EAAAW,WAAA,SAAAuM,EAAAtM,GACA,MAAA2qC,IAAArrC,EAAAgN,EAAAtM,IAEAZ,EAAA0qC,KAAA,SAAAx9B,GACA,MAAAlN,GAAAE,OAAAsrC,GAAAtrC,EAAAgN,KAEAlN,EAAA2a,SAAA,SAAA3Z,GACA,MAAA4C,WAAAC,QACA2oC,EAAAC,GAAA9xB,EAAA3Z,GACA0rC,EAAAD,GAAA,EAAA9xB,GACA1a,EAAAC,SAAAuK,IAAA+hC,IACAxsC,GAJA2a,GAMA3a,EAAAyrC,KAAA,WACA,MAAAc,IAAAtsC,EAAAwrC,OAAA9wB,EAAAza,IAEAwrC,GAAA1rC,EAAAC,GAEA,QAAAwsC,IAAA5kC,GACA,gBAAA7G,GACA,SAAAA,GAAAwQ,KAAA2C,KAAAnT,EAAA6G,GAAA2J,KAAA2C,IAAAnT,EAAA6G,IAYA,QAAA8kC,IAAAzsC,EAAA0sC,GAEA,QAAA5sC,GAAAgB,GACA,MAAAb,KAAAwgC,EAAAx5B,IAAAnG,KAAA,UAAA4rC,EAAAh1B,EAAA+oB,EAAAp5B,IAAAvG,EAAAd,EAAA2B,KAAAb,IAAAmC,MAAA,GAAAhD,EAAA0D,QAEA,QAAAgpC,GAAA9kB,EAAArM,GACA,MAAAjU,IAAAtH,MAAAD,EAAA2D,QAAA4G,IAAA,SAAArE,GACA,MAAA2hB,GAAArM,EAAAtV,IANA,GAAAu6B,GAAAxgC,EAAA2sC,CAsFA,OA7EA9sC,GAAAE,OAAA,SAAAc,GACA,IAAA4C,UAAAC,OAAA,MAAA3D,EACAA,MACAygC,EAAA,GAAAl8B,EAEA,KADA,GAAAsoC,GAAA3mC,EAAA,GAAAC,EAAArF,EAAA6C,SACAuC,EAAAC,GAAAs6B,EAAAqM,IAAAD,EAAA/rC,EAAAoF,KAAAu6B,EAAAp5B,IAAAwlC,EAAA7sC,EAAA2B,KAAAkrC,GACA,OAAA/sC,GAAA4sC,EAAAh1B,GAAA9R,MAAA9F,EAAA4sC,EAAA3pC,IAEAjD,EAAAG,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA1D,EAAAa,EACA8rC,EAAA,EACAF,GACAh1B,EAAA,QACA3U,EAAAW,WAEA5D,GAPAG,GASAH,EAAAitC,YAAA,SAAAjsC,EAAAmP,GACAvM,UAAAC,OAAA,IAAAsM,EAAA,EACA,IAAA4X,GAAA/mB,EAAA,GAAAopC,EAAAppC,EAAA,GAAA0a,EAAAxb,EAAA2D,OAAA,GAAAkkB,KAAAqiB,GAAA,EACA,IAAAA,EAAAriB,IAAA7nB,EAAA2D,OAAA,EAAAsM,EAOA,OANAhQ,GAAA0sC,EAAA9kB,EAAArM,EAAAvL,EAAA,EAAAuL,GACAoxB,EAAA,EACAF,GACAh1B,EAAA,cACA3U,EAAAW,WAEA5D,GAEAA,EAAAktC,iBAAA,SAAAlsC,EAAAmP,GACAvM,UAAAC,OAAA,IAAAsM,EAAA,EACA,IAAA4X,GAAA/mB,EAAA,GAAAopC,EAAAppC,EAAA,GAAA0a,EAAAxb,EAAA2D,OAAA,GAAAkkB,EAAAqiB,EAAA54B,KAAAqB,OAAAkV,EAAAqiB,GAAA,GACA,IAAAA,EAAAriB,IAAA7nB,EAAA2D,OAAA,EAAAsM,GAAA,CAOA,OANAhQ,GAAA0sC,EAAA9kB,EAAAvW,KAAAqB,MAAA6I,EAAAvL,EAAA,GAAAi6B,EAAAriB,GAAA7nB,EAAA2D,OAAA,EAAAsM,GAAAuL,GAAA,GAAAA,GACAoxB,EAAA,EACAF,GACAh1B,EAAA,mBACA3U,EAAAW,WAEA5D,GAEAA,EAAAmtC,WAAA,SAAAnsC,EAAAmP,EAAAi9B,GACAxpC,UAAAC,OAAA,IAAAsM,EAAA,GACAvM,UAAAC,OAAA,IAAAupC,EAAAj9B,EACA,IAAA2J,GAAA9Y,EAAA,GAAAA,EAAA,GAAA+mB,EAAA/mB,EAAA8Y,EAAA,GAAAswB,EAAAppC,EAAA,EAAA8Y,GAAA4B,GAAA0uB,EAAAriB,IAAA7nB,EAAA2D,OAAAsM,EAAA,EAAAi9B,EAQA,OAPAjtC,GAAA0sC,EAAA9kB,EAAArM,EAAA0xB,EAAA1xB,GACA5B,GAAA3Z,EAAA2Z,UACAgzB,EAAApxB,GAAA,EAAAvL,GACAy8B,GACAh1B,EAAA,aACA3U,EAAAW,WAEA5D,GAEAA,EAAAqtC,gBAAA,SAAArsC,EAAAmP,EAAAi9B,GACAxpC,UAAAC,OAAA,IAAAsM,EAAA,GACAvM,UAAAC,OAAA,IAAAupC,EAAAj9B,EACA,IAAA2J,GAAA9Y,EAAA,GAAAA,EAAA,GAAA+mB,EAAA/mB,EAAA8Y,EAAA,GAAAswB,EAAAppC,EAAA,EAAA8Y,GAAA4B,EAAAlK,KAAA6K,OAAA+tB,EAAAriB,IAAA7nB,EAAA2D,OAAAsM,EAAA,EAAAi9B,GAQA,OAPAjtC,GAAA0sC,EAAA9kB,EAAAvW,KAAAqB,OAAAu3B,EAAAriB,GAAA7nB,EAAA2D,OAAAsM,GAAAuL,GAAA,GAAAA,GACA5B,GAAA3Z,EAAA2Z,UACAgzB,EAAAt7B,KAAAqB,MAAA6I,GAAA,EAAAvL,IACAy8B,GACAh1B,EAAA,kBACA3U,EAAAW,WAEA5D,GAEAA,EAAA8sC,UAAA,WACA,MAAAA,IAEA9sC,EAAAsqC,YAAA,WACA,MAAAH,IAAAyC,EAAA3pC,EAAA,KAEAjD,EAAAyrC,KAAA,WACA,MAAAkB,IAAAzsC,EAAA0sC,IAEA5sC,EAAAE,UAqBA,QAAAotC,IAAAptC,EAAAC,GAEA,QAAA+qC,KACA,GAAAhnC,GAAA,EAAAipB,EAAAhtB,EAAA0D,MAEA,KADA0pC,OACArpC,EAAAipB,GAAAogB,EAAArpC,EAAA,GAAAuD,GAAA+lC,SAAAttC,EAAAgE,EAAAipB,EACA,OAAAntB,GAEA,QAAAA,GAAAgB,GACA,MAAAsC,OAAAtC,MAAA,OAAAb,EAAAsH,GAAAsjC,OAAAwC,EAAAvsC,IARA,GAAAusC,EA8BA,OApBAvtC,GAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACA3D,EAAAc,EAAAyJ,IAAArH,GAAAoL,OAAAnL,GAAAskB,KAAA3kB,GACAkoC,KAFAhrC,GAIAF,EAAAG,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA1D,EAAAa,EACAkqC,KAFA/qC,GAIAH,EAAAytC,UAAA,WACA,MAAAF,IAEAvtC,EAAA0tC,aAAA,SAAAvsC,GAEA,MADAA,GAAAhB,EAAAiH,QAAAjG,GACA,EAAAA,GAAAgC,UAAAhC,EAAA,EAAAosC,EAAApsC,EAAA,GAAAjB,EAAA,GAAAiB,EAAAosC,EAAA1pC,OAAA0pC,EAAApsC,GAAAjB,IAAA2D,OAAA,KAEA7D,EAAAyrC,KAAA,WACA,MAAA6B,IAAAptC,EAAAC,IAEA+qC,IAKA,QAAAyC,IAAA5nB,EAAA0H,EAAAttB,GAEA,QAAAH,GAAAgB,GACA,MAAAb,GAAAqR,KAAA+C,IAAA,EAAA/C,KAAAiD,IAAArO,EAAAoL,KAAA6K,MAAA4mB,GAAAjiC,EAAA+kB,OAEA,QAAAmlB,KAGA,MAFAjI,GAAA9iC,EAAA0D,QAAA4pB,EAAA1H,GACA3f,EAAAjG,EAAA0D,OAAA,EACA7D,EAPA,GAAAijC,GAAA78B,CA4BA,OAnBApG,GAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACAkiB,GAAA/kB,EAAA,GACAysB,GAAAzsB,IAAA6C,OAAA,GACAqnC,MAHAnlB,EAAA0H,IAKAztB,EAAAG,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA1D,EAAAa,EACAkqC,KAFA/qC,GAIAH,EAAA0tC,aAAA,SAAAvsC,GAGA,MAFAA,GAAAhB,EAAAiH,QAAAjG,GACAA,EAAA,EAAAA,EAAAgC,IAAAhC,EAAA8hC,EAAAld,GACA5kB,IAAA,EAAA8hC,IAEAjjC,EAAAyrC,KAAA,WACA,MAAAkC,IAAA5nB,EAAA0H,EAAAttB,IAEA+qC,IAKA,QAAA0C,IAAA1tC,EAAAC,GACA,QAAAH,GAAAgB,GACA,MAAAA,MAAAb,EAAAsH,GAAAsjC,OAAA7qC,EAAAc,IAAA,OAmBA,MAjBAhB,GAAAE,OAAA,SAAAwE,GACA,MAAAd,WAAAC,QACA3D,EAAAwE,EACA1E,GAFAE,GAIAF,EAAAG,MAAA,SAAAuE,GACA,MAAAd,WAAAC,QACA1D,EAAAuE,EACA1E,GAFAG,GAIAH,EAAA0tC,aAAA,SAAAvsC,GAEA,MADAA,GAAAhB,EAAAiH,QAAAjG,IACAjB,EAAAiB,EAAA,GAAAjB,EAAAiB,KAEAnB,EAAAyrC,KAAA,WACA,MAAAmC,IAAA1tC,EAAAC,IAEAH,EAKA,QAAA6tC,IAAA3tC,GACA,QAAA4tC,GAAA9sC,GACA,OAAAA,EAiBA,MAfA8sC,GAAA/mB,OAAA+mB,EACAA,EAAA5tC,OAAA4tC,EAAA3tC,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA3D,EAAAc,EAAAyJ,IAAAqjC,GACAA,GAFA5tC,GAIA4tC,EAAAptC,MAAA,SAAAwM,GACA,MAAAo+B,IAAAprC,EAAAgN,IAEA4gC,EAAAntC,WAAA,SAAAuM,EAAAtM,GACA,MAAA2qC,IAAArrC,EAAAgN,EAAAtM,IAEAktC,EAAArC,KAAA,WACA,MAAAoC,IAAA3tC,IAEA4tC,EAGA,QAAAC,MACA,SA+HA,QAAAC,IAAA/sC,GACA,MAAAA,GAAAgtC,YAEA,QAAAC,IAAAjtC,GACA,MAAAA,GAAAktC,YAEA,QAAAC,IAAAntC,GACA,MAAAA,GAAAotC,WAEA,QAAAC,IAAArtC,GACA,MAAAA,GAAAstC,SAEA,QAAAC,IAAAvtC,GACA,MAAAA,MAAAwtC,SAEA,QAAAC,IAAA3oB,EAAAF,EAAA4H,EAAAC,GACA,OAAA3H,EAAA0H,GAAA5H,KAAA6H,GAAA3H,EAAA,MAEA,QAAA4oB,IAAAnnB,EAAAC,EAAAub,EAAA4L,EAAAC,GACA,GAAAC,GAAAtnB,EAAA,GAAAC,EAAA,GAAAsnB,EAAAvnB,EAAA,GAAAC,EAAA,GAAA/jB,GAAAmrC,EAAAD,MAAAp9B,KAAAyC,KAAA66B,IAAAC,KAAAC,EAAAtrC,EAAAqrC,EAAAE,GAAAvrC,EAAAorC,EAAArhB,EAAAjG,EAAA,GAAAwnB,EAAAthB,EAAAlG,EAAA,GAAAynB,EAAAnc,EAAArL,EAAA,GAAAunB,EAAAjc,EAAAtL,EAAA,GAAAwnB,EAAAjX,GAAAvK,EAAAqF,GAAA,EAAAqF,GAAAzK,EAAAqF,GAAA,EAAAhF,EAAA+E,EAAArF,EAAAO,EAAA+E,EAAArF,EAAAgF,EAAA3E,IAAAC,IAAA5a,EAAA4vB,EAAA4L,EAAAM,EAAAzhB,EAAAsF,EAAAD,EAAApF,EAAAzsB,GAAA,EAAA+sB,EAAA,MAAAxc,KAAAyC,KAAAzC,KAAA+C,IAAA,EAAAnB,IAAAsf,EAAAwc,MAAAC,GAAAD,EAAAlhB,EAAAD,EAAA9sB,GAAAyxB,EAAAmD,IAAAqZ,EAAAnhB,EAAAC,EAAA/sB,GAAAyxB,EAAA0c,GAAAF,EAAAlhB,EAAAD,EAAA9sB,GAAAyxB,EAAAqD,IAAAmZ,EAAAnhB,EAAAC,EAAA/sB,GAAAyxB,EAAA2c,EAAAF,EAAAnX,EAAAsX,EAAAzZ,EAAAsC,EAAAoX,EAAAH,EAAApX,EAAAwX,EAAAzZ,EAAAoC,CAEA,OADAkX,KAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAAvZ,EAAAE,KACAoZ,EAAAH,EAAAnZ,EAAAoZ,IAAAE,EAAAnM,EAAA5vB,EAAAyiB,EAAAmN,EAAA5vB,IAEA,QAAAq8B,IAAAjc,GAEA,QAAAzyB,GAAAzB,GAEA,QAAAioB,KACAL,EAAArlB,KAAA,IAAAulB,EAAAoM,EAAA1L,GAAA4nB,IAEA,IAJA,GAAAzuC,GAAAimB,KAAAY,KAAA1hB,EAAA,GAAAC,EAAA/G,EAAAuE,OAAA65B,EAAAxoB,GAAAlU,GAAA28B,EAAAzoB,GAAA/T,KAIAiF,EAAAC,GACAspC,EAAAjuC,KAAAhC,KAAAuB,EAAA3B,EAAA8G,MACA0hB,EAAAjmB,OAAA67B,EAAAh8B,KAAAhC,KAAAuB,EAAAmF,IAAAu3B,EAAAj8B,KAAAhC,KAAAuB,EAAAmF,KACS0hB,EAAAjkB,SACT0jB,IACAO,KAIA,OADAA,GAAAjkB,QAAA0jB,IACAL,EAAArjB,OAAAqjB,EAAAnN,KAAA,SAfA,GAAA/Y,GAAAw2B,GAAAr2B,EAAAs2B,GAAAkY,EAAA3oB,GAAAI,EAAAwoB,GAAAC,EAAAzoB,EAAA9iB,IAAAorC,EAAA,EA0CA,OAzBA3uC,GAAAC,EAAA,SAAA0D,GACA,MAAAd,WAAAC,QACA7C,EAAA0D,EACA3D,GAFAC,GAIAD,EAAAI,EAAA,SAAAuD,GACA,MAAAd,WAAAC,QACA1C,EAAAuD,EACA3D,GAFAI,GAIAJ,EAAA4uC,QAAA,SAAAjrC,GACA,MAAAd,WAAAC,QACA8rC,EAAAjrC,EACA3D,GAFA4uC,GAIA5uC,EAAAqmB,YAAA,SAAA1iB,GACA,MAAAd,WAAAC,QACAgsC,EAAA,kBAAAnrC,GAAA0iB,EAAA1iB,GAAoE0iB,EAAA0oB,GAAA3oC,IAAAzC,IAAAkrC,IAAAtrC,IACpEvD,GAFA8uC,GAIA9uC,EAAA2uC,QAAA,SAAAhrC,GACA,MAAAd,WAAAC,QACA6rC,EAAAhrC,EACA3D,GAFA2uC,GAIA3uC,EAwBA,QAAA6uC,IAAA9nB,GACA,MAAAA,GAAAjkB,OAAA,EAAAikB,EAAA/N,KAAA,KAAA+N,EAAA,IAEA,QAAAioB,IAAAjoB,GACA,MAAAA,GAAA/N,KAAA,SAEA,QAAAi2B,IAAAloB,GAEA,IADA,GAAA1hB,GAAA,EAAAC,EAAAyhB,EAAAjkB,OAAA8U,EAAAmP,EAAA,GAAAmoB,GAAAt3B,EAAA,OAAAA,EAAA,MACAvS,EAAAC,GAAA4pC,EAAApuC,KAAA,KAAA8W,EAAA,IAAAA,EAAAmP,EAAA1hB,IAAA,UAAAuS,EAAA,GAEA,OADAtS,GAAA,GAAA4pC,EAAApuC,KAAA,IAAA8W,EAAA,IACAs3B,EAAAl2B,KAAA,IAEA,QAAAm2B,IAAApoB,GAEA,IADA,GAAA1hB,GAAA,EAAAC,EAAAyhB,EAAAjkB,OAAA8U,EAAAmP,EAAA,GAAAmoB,GAAAt3B,EAAA,OAAAA,EAAA,MACAvS,EAAAC,GAAA4pC,EAAApuC,KAAA,KAAA8W,EAAAmP,EAAA1hB,IAAA,OAAAuS,EAAA,GACA,OAAAs3B,GAAAl2B,KAAA,IAEA,QAAAo2B,IAAAroB,GAEA,IADA,GAAA1hB,GAAA,EAAAC,EAAAyhB,EAAAjkB,OAAA8U,EAAAmP,EAAA,GAAAmoB,GAAAt3B,EAAA,OAAAA,EAAA,MACAvS,EAAAC,GAAA4pC,EAAApuC,KAAA,KAAA8W,EAAAmP,EAAA1hB,IAAA,OAAAuS,EAAA,GACA,OAAAs3B,GAAAl2B,KAAA,IAEA,QAAAq2B,IAAAtoB,EAAA4nB,GACA,MAAA5nB,GAAAjkB,OAAA,EAAA+rC,GAAA9nB,KAAA,GAAAuoB,GAAAvoB,EAAA9iB,MAAA,MAAAsrC,GAAAxoB,EAAA4nB,IAEA,QAAAa,IAAAzoB,EAAA4nB,GACA,MAAA5nB,GAAAjkB,OAAA,EAAAksC,GAAAjoB,KAAA,GAAAuoB,IAAAvoB,EAAAjmB,KAAAimB,EAAA,IACAA,GAAAwoB,IAAAxoB,IAAAjkB,OAAA,IAAAwD,OAAAygB,KAAA,KAAA4nB,IAEA,QAAAc,IAAA1oB,EAAA4nB,GACA,MAAA5nB,GAAAjkB,OAAA,EAAA+rC,GAAA9nB,KAAA,GAAAuoB,GAAAvoB,EAAAwoB,GAAAxoB,EAAA4nB,IAEA,QAAAW,IAAAvoB,EAAA2oB,GACA,GAAAA,EAAA5sC,OAAA,GAAAikB,EAAAjkB,QAAA4sC,EAAA5sC,QAAAikB,EAAAjkB,QAAA4sC,EAAA5sC,OAAA,EACA,MAAA+rC,IAAA9nB,EAEA,IAAA8d,GAAA9d,EAAAjkB,QAAA4sC,EAAA5sC,OAAAosC,EAAA,GAAAzoB,EAAAM,EAAA,GAAAnP,EAAAmP,EAAA,GAAAvP,EAAAk4B,EAAA,GAAA74B,EAAAW,EAAAm4B,EAAA,CAMA,IALA9K,IACAqK,GAAA,KAAAt3B,EAAA,KAAAJ,EAAA,WAAAI,EAAA,KAAAJ,EAAA,UAAAI,EAAA,OAAAA,EAAA,GACA6O,EAAAM,EAAA,GACA4oB,EAAA,GAEAD,EAAA5sC,OAAA,GACA+T,EAAA64B,EAAA,GACA93B,EAAAmP,EAAA4oB,GACAA,IACAT,GAAA,KAAAzoB,EAAA,GAAAjP,EAAA,SAAAiP,EAAA,GAAAjP,EAAA,SAAAI,EAAA,GAAAf,EAAA,SAAAe,EAAA,GAAAf,EAAA,QAAAe,EAAA,OAAAA,EAAA;AACA,OAAAvS,GAAA,EAAqBA,EAAAqqC,EAAA5sC,OAAqBuC,IAAAsqC,IAC1C/3B,EAAAmP,EAAA4oB,GACA94B,EAAA64B,EAAArqC,GACA6pC,GAAA,KAAAt3B,EAAA,GAAAf,EAAA,SAAAe,EAAA,GAAAf,EAAA,QAAAe,EAAA,OAAAA,EAAA,GAGA,GAAAitB,EAAA,CACA,GAAA+K,GAAA7oB,EAAA4oB,EACAT,IAAA,KAAAt3B,EAAA,KAAAf,EAAA,WAAAe,EAAA,KAAAf,EAAA,UAAA+4B,EAAA,OAAAA,EAAA,GAEA,MAAAV,GAEA,QAAAK,IAAAxoB,EAAA4nB,GAEA,IADA,GAAAloB,GAAAipB,KAAAxtC,GAAA,EAAAysC,GAAA,EAAAjoB,EAAAK,EAAA,GAAA8oB,EAAA9oB,EAAA,GAAA1hB,EAAA,EAAAC,EAAAyhB,EAAAjkB,SACAuC,EAAAC,GACAmhB,EAAAC,EACAA,EAAAmpB,EACAA,EAAA9oB,EAAA1hB,GACAqqC,EAAA5uC,MAAAoB,GAAA2tC,EAAA,GAAAppB,EAAA,IAAAvkB,GAAA2tC,EAAA,GAAAppB,EAAA,KAEA,OAAAipB,GAEA,QAAAI,IAAA/oB,GACA,GAAAA,EAAAjkB,OAAA,QAAA+rC,IAAA9nB,EACA,IAAA1hB,GAAA,EAAAC,EAAAyhB,EAAAjkB,OAAA6sC,EAAA5oB,EAAA,GAAA/B,EAAA2qB,EAAA,GAAA7qB,EAAA6qB,EAAA,GAAAlL,GAAAzf,OAAA2qB,EAAA5oB,EAAA,QAAA2d,GAAA5f,MAAA6qB,EAAA,IAAAT,GAAAlqB,EAAA,IAAAF,EAAA,IAAAirB,GAAAC,GAAAvL,GAAA,IAAAsL,GAAAC,GAAAtL,GAEA,KADA3d,EAAAjmB,KAAAimB,EAAAzhB,EAAA,MACAD,GAAAC,GACAqqC,EAAA5oB,EAAA1hB,GACAo/B,EAAAnc,QACAmc,EAAA3jC,KAAA6uC,EAAA,IACAjL,EAAApc,QACAoc,EAAA5jC,KAAA6uC,EAAA,IACAM,GAAAf,EAAAzK,EAAAC,EAIA,OAFA3d,GAAAoB,MACA+mB,EAAApuC,KAAA,IAAA6uC,GACAT,EAAAl2B,KAAA,IAEA,QAAAk3B,IAAAnpB,GACA,GAAAA,EAAAjkB,OAAA,QAAA+rC,IAAA9nB,EAEA,KADA,GAAA4oB,GAAAT,KAAA7pC,EAAA,GAAAC,EAAAyhB,EAAAjkB,OAAA2hC,GAAA,GAAAC,GAAA,KACAr/B,EAAA,GACAsqC,EAAA5oB,EAAA1hB,GACAo/B,EAAA3jC,KAAA6uC,EAAA,IACAjL,EAAA5jC,KAAA6uC,EAAA,GAIA,KAFAT,EAAApuC,KAAAivC,GAAAC,GAAAvL,GAAA,IAAAsL,GAAAC,GAAAtL,MACAr/B,IACAA,EAAAC,GACAqqC,EAAA5oB,EAAA1hB,GACAo/B,EAAAnc,QACAmc,EAAA3jC,KAAA6uC,EAAA,IACAjL,EAAApc,QACAoc,EAAA5jC,KAAA6uC,EAAA,IACAM,GAAAf,EAAAzK,EAAAC,EAEA,OAAAwK,GAAAl2B,KAAA,IAEA,QAAAm3B,IAAAppB,GAEA,IADA,GAAAmoB,GAAAS,EAAAtqC,EAAA,GAAAC,EAAAyhB,EAAAjkB,OAAAqJ,EAAA7G,EAAA,EAAAm/B,KAAAC,OACAr/B,EAAA,GACAsqC,EAAA5oB,EAAA1hB,EAAAC,GACAm/B,EAAA3jC,KAAA6uC,EAAA,IACAjL,EAAA5jC,KAAA6uC,EAAA,GAIA,KAFAT,GAAAa,GAAAC,GAAAvL,GAAA,IAAAsL,GAAAC,GAAAtL,MACAr/B,IACAA,EAAA8G,GACAwjC,EAAA5oB,EAAA1hB,EAAAC,GACAm/B,EAAAnc,QACAmc,EAAA3jC,KAAA6uC,EAAA,IACAjL,EAAApc,QACAoc,EAAA5jC,KAAA6uC,EAAA,IACAM,GAAAf,EAAAzK,EAAAC,EAEA,OAAAwK,GAAAl2B,KAAA,IAEA,QAAAo3B,IAAArpB,EAAA4nB,GACA,GAAArpC,GAAAyhB,EAAAjkB,OAAA,CACA,IAAAwC,EAEA,IADA,GAAAsS,GAAAf,EAAAmO,EAAA+B,EAAA,MAAAjC,EAAAiC,EAAA,MAAAiG,EAAAjG,EAAAzhB,GAAA,GAAA0f,EAAAiI,EAAAlG,EAAAzhB,GAAA,GAAAwf,EAAAzf,EAAA,KACAA,GAAAC,GACAsS,EAAAmP,EAAA1hB,GACAwR,EAAAxR,EAAAC,EACAsS,EAAA,GAAA+2B,EAAA/2B,EAAA,MAAA+2B,IAAA3pB,EAAAnO,EAAAmW,GACApV,EAAA,GAAA+2B,EAAA/2B,EAAA,MAAA+2B,IAAA7pB,EAAAjO,EAAAoW,EAGA,OAAA6iB,IAAA/oB,GAEA,QAAAgpB,IAAA7tC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA8tC,IAAAf,EAAAjvC,EAAAG,GACA8uC,EAAApuC,KAAA,IAAAivC,GAAAM,GAAApwC,GAAA,IAAA8vC,GAAAM,GAAAjwC,GAAA,IAAA2vC,GAAAO,GAAArwC,GAAA,IAAA8vC,GAAAO,GAAAlwC,GAAA,IAAA2vC,GAAAC,GAAA/vC,GAAA,IAAA8vC,GAAAC,GAAA5vC,IAEA,QAAAmwC,IAAA9pB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAA+pB,IAAAzpB,GAEA,IADA,GAAA1hB,GAAA,EAAA6G,EAAA6a,EAAAjkB,OAAA,EAAAqJ,KAAAsa,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAA7mB,EAAAiM,EAAA,GAAAokC,GAAA9pB,EAAAC,KACArhB,EAAA6G,GACAC,EAAA9G,IAAAnF,KAAAqwC,GAAA9pB,EAAAC,IAAAK,EAAA1hB,EAAA,OAGA,OADA8G,GAAA9G,GAAAnF,EACAiM,EAEA,QAAAskC,IAAA1pB,GAEA,IADA,GAAA7mB,GAAAgC,EAAAC,EAAA0E,EAAA6oC,KAAAvjC,EAAAqkC,GAAAzpB,GAAA1hB,EAAA,GAAA6G,EAAA6a,EAAAjkB,OAAA,IACAuC,EAAA6G,GACAhM,EAAAqwC,GAAAxpB,EAAA1hB,GAAA0hB,EAAA1hB,EAAA,IACA4S,GAAA/X,GAAAokB,GACAnY,EAAA9G,GAAA8G,EAAA9G,EAAA,MAEAnD,EAAAiK,EAAA9G,GAAAnF,EACAiC,EAAAgK,EAAA9G,EAAA,GAAAnF,EACA2G,EAAA3E,IAAAC,IACA0E,EAAA,IACAA,EAAA,EAAA3G,EAAAuQ,KAAAyC,KAAArM,GACAsF,EAAA9G,GAAAwB,EAAA3E,EACAiK,EAAA9G,EAAA,GAAAwB,EAAA1E,GAKA,KADAkD,EAAA,KACAA,GAAA6G,GACArF,GAAAkgB,EAAAtW,KAAAiD,IAAAxH,EAAA7G,EAAA,OAAA0hB,EAAAtW,KAAA+C,IAAA,EAAAnO,EAAA,cAAA8G,EAAA9G,GAAA8G,EAAA9G,KACAqqC,EAAA5uC,MAAA+F,GAAA,EAAAsF,EAAA9G,GAAAwB,GAAA,GAEA,OAAA6oC,GAEA,QAAAgB,IAAA3pB,GACA,MAAAA,GAAAjkB,OAAA,EAAA+rC,GAAA9nB,KAAA,GAAAuoB,GAAAvoB,EAAA0pB,GAAA1pB,IAQA,QAAA4pB,IAAA5pB,GAEA,IADA,GAAAlY,GAAAwD,EAAAnQ,EAAAmD,EAAA,GAAAC,EAAAyhB,EAAAjkB,SACAuC,EAAAC,GACAuJ,EAAAkY,EAAA1hB,GACAgN,EAAAxD,EAAA,GACA3M,EAAA2M,EAAA,GAAA+B,GACA/B,EAAA,GAAAwD,EAAA5B,KAAA+B,IAAAtQ,GACA2M,EAAA,GAAAwD,EAAA5B,KAAAU,IAAAjP,EAEA,OAAA6kB,GAEA,QAAA6pB,IAAAne,GAEA,QAAAoe,GAAAtyC,GAMA,QAAAioB,KACAL,EAAArlB,KAAA,IAAAulB,EAAAoM,EAAAqe,GAAAnC,GAAAxyB,EAAA40B,EAAAte,EAAAue,EAAAj4B,WAAA41B,GAAA,KAEA,IARA,GAAAzuC,GAIOD,EAAAG,EAJP+lB,KAAA6qB,KAAAF,KAAAzrC,EAAA,GAAAC,EAAA/G,EAAAuE,OAAAmuC,EAAA98B,GAAA6Q,GAAAksB,EAAA/8B,GAAA2Q,GAAAqsB,EAAAnsB,IAAA0H,EAAA,WACA,MAAAzsB,IACOkU,GAAAuY,GAAA0kB,EAAAtsB,IAAA6H,EAAA,WACP,MAAAvsB,IACO+T,GAAAwY,KAIPtnB,EAAAC,GACAspC,EAAAjuC,KAAAhC,KAAAuB,EAAA3B,EAAA8G,OACA2rC,EAAAlwC,MAAAb,GAAAgxC,EAAAtwC,KAAAhC,KAAAuB,EAAAmF,GAAAjF,GAAA8wC,EAAAvwC,KAAAhC,KAAAuB,EAAAmF,KACAyrC,EAAAhwC,OAAAqwC,EAAAxwC,KAAAhC,KAAAuB,EAAAmF,IAAA+rC,EAAAzwC,KAAAhC,KAAAuB,EAAAmF,MACS2rC,EAAAluC,SACT0jB,IACAwqB,KACAF,KAIA,OADAE,GAAAluC,QAAA0jB,IACAL,EAAArjB,OAAAqjB,EAAAnN,KAAA,SArBA,GAAAgM,GAAAyR,GAAA/J,EAAA+J,GAAA3R,EAAA,EAAA6H,EAAA+J,GAAAkY,EAAA3oB,GAAAI,EAAAwoB,GAAAC,EAAAzoB,EAAA9iB,IAAAwtC,EAAA1qB,EAAAlK,EAAA,IAAAwyB,EAAA,EAsEA,OA/CAkC,GAAA5wC,EAAA,SAAA0D,GACA,MAAAd,WAAAC,QACAkiB,EAAA0H,EAAA/oB,EACAktC,GAFAnkB,GAIAmkB,EAAA7rB,GAAA,SAAArhB,GACA,MAAAd,WAAAC,QACAkiB,EAAArhB,EACAktC,GAFA7rB,GAIA6rB,EAAAnkB,GAAA,SAAA/oB,GACA,MAAAd,WAAAC,QACA4pB,EAAA/oB,EACAktC,GAFAnkB,GAIAmkB,EAAAzwC,EAAA,SAAAuD,GACA,MAAAd,WAAAC,QACAgiB,EAAA6H,EAAAhpB,EACAktC,GAFAlkB,GAIAkkB,EAAA/rB,GAAA,SAAAnhB,GACA,MAAAd,WAAAC,QACAgiB,EAAAnhB,EACAktC,GAFA/rB,GAIA+rB,EAAAlkB,GAAA,SAAAhpB,GACA,MAAAd,WAAAC,QACA6pB,EAAAhpB,EACAktC,GAFAlkB,GAIAkkB,EAAAjC,QAAA,SAAAjrC,GACA,MAAAd,WAAAC,QACA8rC,EAAAjrC,EACAktC,GAFAjC,GAIAiC,EAAAxqB,YAAA,SAAA1iB,GACA,MAAAd,WAAAC,QACAgsC,EAAA,kBAAAnrC,GAAA0iB,EAAA1iB,GAAoE0iB,EAAA0oB,GAAA3oC,IAAAzC,IAAAkrC,IAAAtrC,IACpEwtC,EAAA1qB,EAAAtN,SAAAsN,EACAlK,EAAAkK,EAAAlE,OAAA,QACA0uB,GAJA/B,GAMA+B,EAAAlC,QAAA,SAAAhrC,GACA,MAAAd,WAAAC,QACA6rC,EAAAhrC,EACAktC,GAFAlC,GAIAkC,EAqEA,QAAAQ,IAAAnxC,GACA,MAAAA,GAAAyqB,OAgCA,QAAA2mB,IAAApxC,GACA,OAAAA,EAAAD,EAAAC,EAAAE,GASA,QAAAmxC,IAAA9e,GACA,kBACA,GAAAvyB,GAAAuyB,EAAA1tB,MAAApG,KAAAkE,WAAAwP,EAAAnS,EAAA,GAAAgC,EAAAhC,EAAA,GAAA0Q,EACA,QAAAyB,EAAA5B,KAAA+B,IAAAtQ,GAAAmQ,EAAA5B,KAAAU,IAAAjP,KAoBA,QAAAsvC,MACA,UAEA,QAAAC,MACA,eAEA,QAAAC,IAAAntC,GACA,GAAA8N,GAAA5B,KAAAyC,KAAA3O,EAAAiM,GACA,aAAA6B,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAAs/B,IAAA9oC,GACA,kBACA,GAAA+oC,GAAAC,EAAAC,GACAF,EAAAjzC,KAAAkK,MAAAipC,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAAl7B,MAAA/M,EAAA,KACAioC,EAAAl7B,MAAAC,EAAAzU,MACAwvC,EAAAG,YAAAH,GAAAC,SAAgDlzC,MAAAkK,GAChD+oC,EAAAE,QAAA,GACAA,EAAAjsC,OAAAisC,EAAAjsC,MAAAmsC,UAAArxC,KAAAhC,UAAAgN,SAAAmmC,EAAAlS,SAIA,QAAAqS,IAAAzqC,EAAAqB,EAAA9H,GAIA,MAHA0G,IAAAD,EAAA0qC,IACA1qC,EAAAwD,UAAAnC,EACArB,EAAAzG,KACAyG,EAoEA,QAAA2qC,IAAA3qC,EAAAtC,EAAA9G,EAAAg0C,GACA,GAAArxC,GAAAyG,EAAAzG,GAAA8H,EAAArB,EAAAwD,SACA,OAAAgB,GAAAxE,EAAA,kBAAApJ,GAAA,SAAAuD,EAAA0D,EAAA6G,GACAvK,EAAAkH,GAAA9H,GAAAqxC,MAAA5rC,IAAAtB,EAAAktC,EAAAh0C,EAAAuC,KAAAgB,IAAAgK,SAAAtG,EAAA6G,OACK9N,EAAAg0C,EAAAh0C,GAAA,SAAAuD,GACLA,EAAAkH,GAAA9H,GAAAqxC,MAAA5rC,IAAAtB,EAAA9G,MAqFA,QAAAi0C,IAAAlwC,GAEA,MADA,OAAAA,MAAA,IACA,WACAxD,KAAA2zC,YAAAnwC,GA6EA,QAAAowC,IAAArtC,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,QAAAstC,IAAA7wC,EAAA0D,EAAAwD,EAAA9H,EAAA0xC,GAKA,QAAAC,GAAAC,GACA,GAAAp8B,GAAAq8B,EAAAr8B,KAEA,OADAK,GAAAC,EAAAN,EAAAI,EACAg8B,GAAAp8B,EAAAyQ,EAAA2rB,EAAAp8B,QACAK,EAAA/M,EAAAmd,GAEA,QAAAA,GAAA2rB,GACA,GAAAd,GAAAD,EAAAE,SAAAF,EAAAC,EACAC,KACAA,EAAAl7B,MAAA/M,EAAA,KACAioC,EAAAl7B,MAAAC,EAAAzU,MACAwvC,EAAAG,YACAH,GAAAC,GACAC,EAAAjsC,OAAAisC,EAAAjsC,MAAAmsC,UAAArxC,KAAAgB,IAAAgK,SAAAmmC,EAAAlS,OAEA,QAAAiT,KAAAjB,GACA,GAAA7wC,GAAA8xC,EAAA,CACA,GAAAC,GAAAlB,EAAAiB,EACAC,GAAAl8B,MAAA/M,EAAA,KACAipC,EAAAl8B,MAAAC,EAAAzU,MACAwvC,EAAAG,YACAH,GAAAiB,GAGAj8B,EAAA/M,EAAAkpC,EACAz8B,GAAA,WAKA,MAJAM,GAAA/M,GAAAkpC,EAAAJ,GAAA,KACA/7B,EAAA/M,EAAA,KACA+M,EAAAC,EAAAzU,KAEA,GACO,EAAAuU,GACPi7B,EAAAE,OAAA/wC,EACA6xC,EAAA/sC,OAAA+sC,EAAA/sC,MAAAmhB,MAAArmB,KAAAgB,IAAAgK,SAAAtG,GACA2tC,KACAJ,EAAAR,MAAAx8B,QAAA,SAAArS,EAAAnF,IACAA,IAAAuC,KAAAgB,IAAAgK,SAAAtG,KACA2tC,EAAAlyC,KAAA1C,KAGA60C,EAAAL,EAAAK,KACAC,EAAAN,EAAAM,SAEA,QAAAH,GAAAJ,GAEA,IADA,GAAA97B,GAAA87B,EAAAO,EAAApsC,EAAAmsC,EAAAp8B,GAAAvR,EAAA0tC,EAAAlwC,OACAwC,EAAA,GACA0tC,IAAA1tC,GAAA3E,KAAAgB,EAAAmF,EAEA,OAAA+P,IAAA,GACA+7B,EAAA/sC,OAAA+sC,EAAA/sC,MAAAm1B,IAAAr6B,KAAAgB,IAAAgK,SAAAtG,KACAusC,EAAAG,YAAAH,GAAA7wC,SAA0CY,GAAAkH,GAC1C,GAHA,OApDA,GAGK8N,GAAAC,EAAAs8B,EAAAD,EAAAD,EAHLpB,EAAAjwC,EAAAkH,KAAAlH,EAAAkH,IACAipC,OAAA,EACAC,MAAA,IACKa,EAAAhB,EAAA7wC,EAuDL6xC,KACAj8B,EAAA87B,EAAA97B,KACAC,EAAAN,GAAAo8B,EAAA,EAAA/7B,GACAi8B,EAAAhB,EAAA7wC,IACAqxC,MAAA,GAAA1uC,GACAiT,OACAC,QACAL,MAAAk8B,EAAAl8B,MACA28B,SAAAT,EAAAS,SACAD,KAAAR,EAAAQ,KACArT,MAAAv6B,GAEAotC,EAAA,OACAb,EAAAG,OAoGA,QAAAoB,IAAA7mC,EAAA0Y,EAAA0H,GACApgB,EAAA5L,KAAA,qBAAAR,GACA,GAAA6qB,GAAA/F,EAAA9kB,EACA,qBAAAqX,SAAAwT,KAAA2B,EAAAxsB,IAAA,QAGA,QAAAkzC,IAAA9mC,EAAAwY,EAAA6H,GACArgB,EAAA5L,KAAA,qBAAAR,GACA,GAAA6qB,GAAAjG,EAAA5kB,EACA,uBAAAqX,SAAAwT,KAAA4B,EAAAzsB,IAAA,MAySA,QAAAmzC,IAAAx4B,GACA,MAAAA,GAAAy4B,cA8CA,QAAAC,IAAAr0C,EAAAT,EAAAoB,GACA,QAAAZ,GAAAgB,GACA,MAAAf,GAAAe,GAUA,QAAAuzC,GAAA7Y,EAAAoX,GACA,GAAAlH,GAAAlQ,EAAA,GAAAA,EAAA,GAAA/1B,EAAAimC,EAAAkH,EAAA1sC,EAAAqB,GAAAsjC,OAAAyJ,GAAA7uC,EACA,OAAAS,IAAAouC,GAAA3wC,QAAArE,EAAAi1C,KAAA9I,GAAAjQ,EAAAjxB,IAAA,SAAAxJ,GACA,MAAAA,GAAA,UACO6xC,GAAA,IAAA1sC,EAAA5G,EAAAmG,EAAA6uC,GAAApuC,EAAA,GAAAouC,GAAApuC,GAAAT,EAAAS,EAAA,EAAAA,IAAAsuC,GAAA/I,GAAAjQ,EAAAoX,GAAA,IAgCP,MA5CA9yC,GAAA+mB,OAAA,SAAA/lB,GACA,MAAA2zC,IAAA10C,EAAA8mB,OAAA/lB,KAEAhB,EAAAE,OAAA,SAAAc,GACA,MAAA4C,WAAAC,QACA5D,EAAAC,OAAAc,GACAhB,GAFAC,EAAAC,SAAAuK,IAAAkqC,KAUA30C,EAAA0qC,KAAA,SAAAkK,EAAAC,GAGA,QAAAC,GAAAl5B,GACA,OAAAtY,MAAAsY,KAAAg5B,EAAAz0C,MAAAyb,EAAA+4B,IAAA/4B,EAAA,GAAAi5B,GAAAhxC,OAHA,GAAA3D,GAAAF,EAAAE,SAAAw7B,EAAAyO,GAAAjqC,GAAA2F,EAAA,MAAA+uC,EAAAL,EAAA7Y,EAAA,oBAAAkZ,IAAAL,EAAA7Y,EAAAkZ,EAKA,OAJA/uC,KAAA+uC,EAAA/uC,EAAA,GAAAgvC,EAAAhvC,EAAA,IAIA7F,EAAAE,OAAAuqC,GAAAvqC,EAAA20C,EAAA,GACAx4B,MAAA,SAAAT,GACA,KAAAk5B,EAAAl5B,EAAAg5B,EAAAv4B,MAAAT,OAAA+4B,GAAA/4B,EAAA,EACA,OAAAA,IAEAhD,KAAA,SAAAgD,GACA,KAAAk5B,EAAAl5B,EAAAg5B,EAAAh8B,KAAAgD,OAAA+4B,IAAA/4B,EAAA,EACA,OAAAA,KAEOg5B,KAEP50C,EAAAU,MAAA,SAAAk0C,EAAAC,GACA,GAAAnZ,GAAAyO,GAAAnqC,EAAAE,UAAA2F,EAAA,MAAA+uC,EAAAL,EAAA7Y,EAAA,oBAAAkZ,GAAAL,EAAA7Y,EAAAkZ,MAAAz0C,SACAA,MAAAy0C,GACOC,EAEP,OADAhvC,KAAA+uC,EAAA/uC,EAAA,GAAAgvC,EAAAhvC,EAAA,IACA+uC,EAAAz0C,MAAAu7B,EAAA,GAAAiZ,IAAAjZ,EAAA,QAAAmZ,EAAA,EAAAA,IAEA70C,EAAAW,WAAA,WACA,MAAAC,IAEAZ,EAAAyrC,KAAA,WACA,MAAA6I,IAAAr0C,EAAAwrC,OAAAjsC,EAAAoB,IAEA8qC,GAAA1rC,EAAAC,GAEA,QAAA00C,IAAA/8B,GACA,UAAAJ,MAAAI,GA0DA,QAAAm9B,IAAAp/B,GACA,MAAAq/B,MAAAl4B,MAAAnH,EAAAyB,cAKA,QAAA69B,IAAAt/B,GACA,GAAAxV,GAAA+0C,GAAAC,aAEA,OADAh1C,GAAAi1C,WAAAF,GAAAG,MACAl1C,EAAAm1C,yBAAA3/B,EAAAyB,cA10SA,GAAA3P,KACA1F,QAAA,UAEAwzC,MAAAvwC,MAAAmJ,GAAA,SAAAqnC,GACA,MAAAD,IAAA7zC,KAAA8zC,IAEAN,GAAAx1C,KAAAkD,QAOA,IAAAsyC,GACA,IACA/mC,GAAA+mC,GAAAryC,gBAAA4yC,YAAA,GAAAC,SACK,MAAA7tC,IACLsG,GAAA,SAAAqnC,GAEA,IADA,GAAApvC,GAAAovC,EAAA3xC,OAAAqkB,EAAA,GAAA5M,OAAAlV,GACAA,KAAA8hB,EAAA9hB,GAAAovC,EAAApvC,EACA,OAAA8hB,IAOA,GAHA1Q,KAAAC,MAAAD,KAAAC,IAAA,WACA,UAAAD,QAEA09B,GACA,IACAA,GAAAhpC,cAAA,OAAAb,MAAAG,YAAA,gBACK,MAAAsK,IACL,GAAA6/B,IAAAj2C,KAAAk2C,QAAArxC,UAAAsxC,GAAAF,GAAApsC,aAAAusC,GAAAH,GAAAlsC,eAAAssC,GAAAr2C,KAAAs2C,oBAAAzxC,UAAA0xC,GAAAF,GAAAvqC,WACAmqC,IAAApsC,aAAA,SAAAtD,EAAA9G,GACA02C,GAAAn0C,KAAAhC,KAAAuG,EAAA9G,EAAA,KAEAw2C,GAAAlsC,eAAA,SAAAL,EAAAC,EAAAlK,GACA22C,GAAAp0C,KAAAhC,KAAA0J,EAAAC,EAAAlK,EAAA,KAEA42C,GAAAvqC,YAAA,SAAAvF,EAAA9G,EAAAgM,GACA8qC,GAAAv0C,KAAAhC,KAAAuG,EAAA9G,EAAA,GAAAgM,IAIA1D,GAAAyuC,UAAAlzC,EAIAyE,GAAA0uC,WAAA,SAAAlzC,EAAAC,GACA,MAAAD,GAAAC,EAAA,GAAAA,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAE,KAEAsE,GAAAgN,IAAA,SAAAyT,EAAA3X,GACA,GAAAtN,GAAAC,EAAAkD,EAAA,GAAAC,EAAA6hB,EAAArkB,MACA,QAAAD,UAAAC,OAAA,CACA,OAAAuC,EAAAC,GAAA,UAAAnD,EAAAglB,EAAA9hB,KAAAlD,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAglB,EAAA9hB,KAAAnD,EAAAC,IAAAD,EAAAC,OACK,CACL,OAAAkD,EAAAC,GAAA,UAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,QAAAlD,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,QAAAnD,EAAAC,IAAAD,EAAAC,GAEA,MAAAD,IAEAwE,GAAA8M,IAAA,SAAA2T,EAAA3X,GACA,GAAAtN,GAAAC,EAAAkD,EAAA,GAAAC,EAAA6hB,EAAArkB,MACA,QAAAD,UAAAC,OAAA,CACA,OAAAuC,EAAAC,GAAA,UAAAnD,EAAAglB,EAAA9hB,KAAAlD,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAglB,EAAA9hB,KAAAlD,EAAAD,MAAAC,OACK,CACL,OAAAkD,EAAAC,GAAA,UAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,QAAAlD,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,QAAAlD,EAAAD,MAAAC,GAEA,MAAAD,IAEAwE,GAAAi0B,OAAA,SAAAxT,EAAA3X,GACA,GAAAtN,GAAAC,EAAA0H,EAAAxE,EAAA,GAAAC,EAAA6hB,EAAArkB,MACA,QAAAD,UAAAC,OAAA,CACA,OAAAuC,EAAAC,GAAA,UAAAnD,EAAAglB,EAAA9hB,KAAAlD,KAAA,CACAD,EAAA2H,EAAA1H,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAglB,EAAA9hB,MACAnD,EAAAC,IAAAD,EAAAC,GACAA,EAAA0H,MAAA1H,QAEK,CACL,OAAAkD,EAAAC,GAAA,UAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,QAAAlD,KAAA,CACAD,EAAA2H,EAAA1H,CACA,OAEA,OAAAkD,EAAAC,GAAA,OAAAnD,EAAAqN,EAAA7O,KAAAwmB,IAAA9hB,SACAnD,EAAAC,IAAAD,EAAAC,GACAA,EAAA0H,MAAA1H,IAGA,OAAAD,EAAA2H,IAQAnD,GAAA2uC,IAAA,SAAAluB,EAAA3X,GACA,GAAAtN,GAAA2E,EAAA,EAAAvB,EAAA6hB,EAAArkB,OAAAuC,EAAA,EACA,QAAAxC,UAAAC,OACA,OAAAuC,EAAAC,GAAAhD,EAAAJ,GAAAilB,EAAA9hB,MAAAwB,GAAA3E,OAEA,QAAAmD,EAAAC,GAAAhD,EAAAJ,GAAAsN,EAAA7O,KAAAwmB,IAAA9hB,SAAAwB,GAAA3E,EAEA,OAAA2E,IAEAH,GAAA4uC,KAAA,SAAAnuB,EAAA3X,GACA,GAAAtN,GAAA2E,EAAA,EAAAvB,EAAA6hB,EAAArkB,OAAAuC,EAAA,GAAA6G,EAAA5G,CACA,QAAAzC,UAAAC,OACA,OAAAuC,EAAAC,GAAAhD,EAAAJ,EAAAG,EAAA8kB,EAAA9hB,KAAAwB,GAAA3E,IAAsEgK,MAEtE,QAAA7G,EAAAC,GAAAhD,EAAAJ,EAAAG,EAAAmN,EAAA7O,KAAAwmB,IAAA9hB,QAAAwB,GAAA3E,IAAwFgK,CAExF,OAAAA,GAAArF,EAAAqF,EAAA,QAEAxF,GAAA+lC,SAAA,SAAAjG,EAAA5uB,GACA,GAAAoE,IAAAwqB,EAAA1jC,OAAA,GAAA8U,EAAA,EAAAtG,EAAAb,KAAA6K,MAAAU,GAAAtK,GAAA80B,EAAAl1B,EAAA,GAAAxK,EAAAkV,EAAA1K,CACA,OAAAxK,GAAA4K,EAAA5K,GAAA0/B,EAAAl1B,GAAAI,MAEAhL,GAAA6uC,OAAA,SAAApuB,EAAA3X,GACA,GAAAtN,GAAAszC,KAAAlwC,EAAA6hB,EAAArkB,OAAAuC,EAAA,EACA,QAAAxC,UAAAC,OACA,OAAAuC,EAAAC,GAAAhD,EAAAJ,EAAAG,EAAA8kB,EAAA9hB,MAAAmwC,EAAA10C,KAAAoB,OAEA,QAAAmD,EAAAC,GAAAhD,EAAAJ,EAAAG,EAAAmN,EAAA7O,KAAAwmB,IAAA9hB,SAAAmwC,EAAA10C,KAAAoB,EAEA,OAAAszC,GAAA1yC,OAAA4D,GAAA+lC,SAAA+I,EAAA5uB,KAAA3kB,GAAA,YAEAyE,GAAA+uC,SAAA,SAAAtuB,EAAA3X,GACA,GAAAtN,GAAAhC,EAAAoF,EAAA6hB,EAAArkB,OAAAqJ,EAAA,EAAAtF,EAAA,EAAAxB,EAAA,GAAA6G,EAAA,CACA,QAAArJ,UAAAC,OACA,OAAAuC,EAAAC,GACAhD,EAAAJ,EAAAG,EAAA8kB,EAAA9hB,OACAnF,EAAAgC,EAAAiK,EACAA,GAAAjM,IAAAgM,EACArF,GAAA3G,GAAAgC,EAAAiK,QAIA,QAAA9G,EAAAC,GACAhD,EAAAJ,EAAAG,EAAAmN,EAAA7O,KAAAwmB,IAAA9hB,UACAnF,EAAAgC,EAAAiK,EACAA,GAAAjM,IAAAgM,EACArF,GAAA3G,GAAAgC,EAAAiK,GAIA,OAAAD,GAAA,EAAArF,GAAAqF,EAAA,WAEAxF,GAAAgvC,UAAA,WACA,GAAAhkC,GAAAhL,GAAA+uC,SAAA1wC,MAAApG,KAAAkE,UACA,OAAA6O,GAAAjB,KAAAyC,KAAAxB,KAwBA,IAAAikC,IAAAnzC,EAAAP,EACAyE,IAAAkvC,WAAAD,GAAAjzC,KACAgE,GAAAsjC,OAAAtjC,GAAAmvC,YAAAF,GAAA3yC,MACA0D,GAAAovC,SAAA,SAAAtmC,GACA,MAAAhN,GAAA,IAAAgN,EAAA1M,OAAA,SAAA5C,EAAAD,GACA,MAAAgC,GAAAuN,EAAAtP,GAAAD,IACKuP,IAEL9I,GAAAqvC,QAAA,SAAA5uB,EAAAza,EAAAk9B,IACAz9B,EAAAtJ,UAAAC,QAAA,IACA8mC,EAAAziB,EAAArkB,OACA,EAAAqJ,IAAAO,EAAA,GAGA,KADA,GAAAmK,GAAAxR,EAAA8G,EAAAy9B,EAAAl9B,EACAP,GACA9G,EAAAoL,KAAAw0B,SAAA94B,IAAA,EACA0K,EAAAsQ,EAAAhb,EAAAO,GAAAya,EAAAhb,EAAAO,GAAAya,EAAA9hB,EAAAqH,GAAAya,EAAA9hB,EAAAqH,GAAAmK,CAEA,OAAAsQ,IAEAzgB,GAAAsvC,QAAA,SAAA7uB,EAAA8uB,GAEA,IADA,GAAA5wC,GAAA4wC,EAAAnzC,OAAAozC,EAAA,GAAA37B,OAAAlV,GACAA,KAAA6wC,EAAA7wC,GAAA8hB,EAAA8uB,EAAA5wC,GACA,OAAA6wC,IAEAxvC,GAAAyvC,MAAA,SAAAhvB,GAEA,IADA,GAAAV,GAAAphB,EAAA,EAAAC,EAAA6hB,EAAArkB,OAAA,EAAA4jB,EAAAS,EAAA,GAAAgvB,EAAA,GAAA57B,OAAA,EAAAjV,EAAA,EAAAA,GACAA,EAAAD,GAAA8wC,EAAA9wC,IAAAohB,EAAAC,IAAAS,IAAA9hB,GACA,OAAA8wC,IAEAzvC,GAAA0vC,UAAA,SAAAC,GACA,KAAA/wC,EAAA+wC,EAAAvzC,QAAA,QACA,QAAAuC,GAAA,GAAA8G,EAAAzF,GAAAgN,IAAA2iC,EAAApzC,GAAAmzC,EAAA,GAAA77B,OAAApO,KAAsF9G,EAAA8G,GACtF,OAAA7G,GAAA4G,EAAA,GAAAoqC,EAAAF,EAAA/wC,GAAA,GAAAkV,OAAAjV,KAA4D4G,EAAA5G,GAC5DgxC,EAAApqC,GAAAmqC,EAAAnqC,GAAA7G,EAGA,OAAA+wC,IAKA1vC,GAAA6vC,IAAA,WACA,MAAA7vC,IAAA0vC,UAAAvzC,YAEA6D,GAAArC,KAAA,SAAAqF,GACA,GAAArF,KACA,QAAAd,KAAAmG,GAAArF,EAAAvD,KAAAyC,EACA,OAAAc,IAEAqC,GAAA8/B,OAAA,SAAA98B,GACA,GAAA88B,KACA,QAAAjjC,KAAAmG,GAAA88B,EAAA1lC,KAAA4I,EAAAnG,GACA,OAAAijC,IAEA9/B,GAAA8vC,QAAA,SAAA9sC,GACA,GAAA8sC,KACA,QAAAjzC,KAAAmG,GAAA8sC,EAAA11C,MACAyC,MACAnF,MAAAsL,EAAAnG,IAEA,OAAAizC,IAEA9vC,GAAA+hB,MAAA,SAAAguB,GAEA,IADA,GAAAtqC,GAAAuqC,EAAAvvB,EAAA7hB,EAAAmxC,EAAA3zC,OAAAuC,EAAA,GAAA6G,EAAA,IACA7G,EAAAC,GAAA4G,GAAAuqC,EAAApxC,GAAAvC,MAEA,KADA4zC,EAAA,GAAAn8B,OAAArO,KACA5G,GAAA,GAGA,IAFA6hB,EAAAsvB,EAAAnxC,GACA6G,EAAAgb,EAAArkB,SACAqJ,GAAA,GACAuqC,IAAAxqC,GAAAib,EAAAhb,EAGA,OAAAuqC,GAEA,IAAAz+B,IAAAxH,KAAAwH,GACAvR,IAAAtH,MAAA,SAAA4nB,EAAAqiB,EAAA1uB,GAQA,GAPA9X,UAAAC,OAAA,IACA6X,EAAA,EACA9X,UAAAC,OAAA,IACAumC,EAAAriB,EACAA,EAAA,KAGAqiB,EAAAriB,GAAArM,IAAAjD,IAAA,SAAAi/B,OAAA,iBACA,IAAAzqC,GAAA9M,KAAA+D,EAAAD,EAAA+U,GAAA0C,IAAAtV,EAAA,EAEA,IADA2hB,GAAA7jB,EAAAkmC,GAAAlmC,EAAAwX,GAAAxX,EACA,EAAAwX,EAAA,MAAAzO,EAAA8a,EAAArM,IAAAtV,GAAAgkC,GAAAjqC,EAAA0B,KAAAoL,EAAA/I,OAA4E,OAAA+I,EAAA8a,EAAArM,IAAAtV,GAAAgkC,GAAAjqC,EAAA0B,KAAAoL,EAAA/I,EAC5E,OAAA/D,IAeAsH,GAAAgD,IAAA,SAAAzE,EAAAuK,GACA,GAAA9F,GAAA,GAAAhG,EACA,IAAAuB,YAAAvB,GACAuB,EAAA2Q,QAAA,SAAArS,EAAAnF,GACAsL,EAAAlD,IAAAjD,EAAAnF,SAEK,IAAAmc,MAAAq8B,QAAA3xC,GAAA,CACL,GAAA2I,GAAAvI,EAAA,GAAAC,EAAAL,EAAAnC,MACA,QAAAD,UAAAC,OAAA,OAAAuC,EAAAC,GAAAoE,EAAAlD,IAAAnB,EAAAJ,EAAAI,QAAwE,QAAAA,EAAAC,GAAAoE,EAAAlD,IAAAgJ,EAAA7O,KAAAsE,EAAA2I,EAAA3I,EAAAI,MAAAuI,OAExE,QAAArK,KAAA0B,GAAAyE,EAAAlD,IAAAjD,EAAA0B,EAAA1B,GAEA,OAAAmG,GAKA,IAAA5F,IAAA,YAAAC,GAAA,MACAX,GAAAM,GACAuoC,IAAA/nC,EACAkC,IAAA,SAAA7C,GACA,MAAA5E,MAAAgF,EAAAE,EAAAN,KAEAiD,IAAA,SAAAjD,EAAAnF,GACA,MAAAO,MAAAgF,EAAAE,EAAAN,IAAAnF,GAEAmI,OAAApC,EACAE,KAAAD,EACAoiC,OAAA,WACA,GAAAA,KACA,QAAAjjC,KAAA5E,MAAAgF,EAAA6iC,EAAA1lC,KAAAnC,KAAAgF,EAAAJ,GACA,OAAAijC,IAEAgQ,QAAA,WACA,GAAAA,KACA,QAAAjzC,KAAA5E,MAAAgF,EAAA6yC,EAAA11C,MACAyC,IAAAS,EAAAT,GACAnF,MAAAO,KAAAgF,EAAAJ,IAEA,OAAAizC,IAEAjyC,KAAAD,EACAuyC,MAAAryC,EACAoR,QAAA,SAAApG,GACA,OAAAjM,KAAA5E,MAAAgF,EAAA6L,EAAA7O,KAAAhC,KAAAqF,EAAAT,GAAA5E,KAAAgF,EAAAJ,OA6BAmD,GAAAowC,KAAA,WAEA,QAAAptC,GAAAqtC,EAAA5vB,EAAAuK,GACA,GAAAA,GAAArtB,EAAAvB,OAAA,MAAAk0C,KAAAr2C,KAAAm2C,EAAA3vB,GAAA8vB,EAAA9vB,EAAAP,KAAAqwB,GAAA9vB,CAEA,KADA,GAAA+vB,GAAAjyC,EAAAkyC,EAAA3Q,EAAAnhC,EAAA,GAAAC,EAAA6hB,EAAArkB,OAAAS,EAAAc,EAAAqtB,KAAA0lB,EAAA,GAAA1zC,KACA2B,EAAAC,IACAkhC,EAAA4Q,EAAAhxC,IAAA8wC,EAAA3zC,EAAA0B,EAAAkiB,EAAA9hB,MACAmhC,EAAA1lC,KAAAmE,GAEAmyC,EAAA5wC,IAAA0wC,GAAAjyC,GAeA,OAZA8xC,IACA9xC,EAAA8xC,IACAI,EAAA,SAAAD,EAAA1Q,GACAvhC,EAAAuB,IAAA0wC,EAAAxtC,EAAAqtC,EAAAvQ,EAAA9U,OAGAzsB,KACAkyC,EAAA,SAAAD,EAAA1Q,GACAvhC,EAAAiyC,GAAAxtC,EAAAqtC,EAAAvQ,EAAA9U,KAGA0lB,EAAAxhC,QAAAuhC,GACAlyC,EAEA,QAAAuxC,GAAA9sC,EAAAgoB,GACA,GAAAA,GAAArtB,EAAAvB,OAAA,MAAA4G,EACA,IAAAyd,MAAAkwB,EAAAC,EAAA5lB,IAOA,OANAhoB,GAAAkM,QAAA,SAAArS,EAAAg0C,GACApwB,EAAArmB,MACAyC,MACAijC,OAAAgQ,EAAAe,EAAA7lB,OAGA2lB,EAAAlwB,EAAAP,KAAA,SAAA1kB,EAAAC,GACA,MAAAk1C,GAAAn1C,EAAAqB,IAAApB,EAAAoB,OACO4jB,EApCP,GAAiB8vB,GAAAD,EAAjBF,KAAiBzyC,KAAAizC,IA4DjB,OAtBAR,GAAAptC,IAAA,SAAAyd,EAAA4vB,GACA,MAAArtC,GAAAqtC,EAAA5vB,EAAA,IAEA2vB,EAAAN,QAAA,SAAArvB,GACA,MAAAqvB,GAAA9sC,EAAAhD,GAAAgD,IAAAyd,EAAA,OAEA2vB,EAAAvzC,IAAA,SAAArD,GAEA,MADAmE,GAAAvD,KAAAZ,GACA42C,GAEAA,EAAAQ,SAAA,SAAAE,GAEA,MADAF,GAAAjzC,EAAAvB,OAAA,GAAA00C,EACAV,GAEAA,EAAAG,WAAA,SAAAO,GAEA,MADAP,GAAAO,EACAV,GAEAA,EAAAE,OAAA,SAAAxnC,GAEA,MADAwnC,GAAAxnC,EACAsnC,GAEAA,GAEApwC,GAAAF,IAAA,SAAA2gB,GACA,GAAA3gB,GAAA,GAAA/B,EACA,IAAA0iB,EAAA,OAAA9hB,GAAA,EAAAC,EAAA6hB,EAAArkB,OAAgDwC,EAAAD,IAAOA,EAAAmB,EAAAuD,IAAAod,EAAA9hB,GACvD,OAAAmB,IAKApD,EAAAqB,GACAwnC,IAAA/nC,EACA6F,IAAA,SAAAxG,GAEA,MADA5E,MAAAgF,EAAAE,EAAAN,GAAA,QACAA,GAEAgD,OAAApC,EACAqiC,OAAApiC,EACAG,KAAAD,EACAuyC,MAAAryC,EACAoR,QAAA,SAAApG,GACA,OAAAjM,KAAA5E,MAAAgF,EAAA6L,EAAA7O,KAAAhC,KAAAqF,EAAAT,OAGAmD,GAAA+wC,YAIA/wC,GAAAyP,OAAA,SAAAvR,EAAAC,GAEA,IADA,GAAAC,GAAAO,EAAA,EAAAC,EAAAzC,UAAAC,SACAuC,EAAAC,GAAAV,EAAAE,EAAAjC,UAAAwC,IAAAV,EAAAC,EAAAC,IAAAC,GACA,OAAAF,GAgBA,IAAAW,KAAA,kCAEAmB,IAAAd,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAAL,EAAA,GAAAC,EAAAzC,UAAAC,SACAuC,EAAAC,GAAAM,EAAA/C,UAAAwC,IAAAM,EAAAC,EACA,OAAAA,IAGAF,EAAAlC,UAAAyC,GAAA,SAAAqB,EAAAnB,GACA,GAAAd,GAAAiC,EAAAjB,QAAA,KAAAnB,EAAA,EAKA,IAJAG,GAAA,IACAH,EAAAoC,EAAArD,MAAAoB,EAAA,GACAiC,IAAArD,MAAA,EAAAoB,IAEAiC,EAAA,MAAAzE,WAAAC,OAAA,EAAAnE,KAAA2I,GAAArB,GAAAf,GAAAvG,KAAA2I,GAAArB,GAAAf,EAAAiB,EACA,QAAAtD,UAAAC,OAAA,CACA,SAAAqD,EAAA,IAAAmB,IAAA3I,MACAA,KAAAqjB,eAAA1a,IAAA3I,KAAA2I,GAAArB,GAAAf,EAAA,KAEA,OAAAvG,QAyBA+H,GAAAb,MAAA,KA0BAa,GAAA0C,QAAA,SAAAvC,GACA,MAAAA,GAAAoC,QAAAyuC,GAAA,QAEA,IAAAA,IAAA,kCACAjwC,MAAsBkwC,UAAA,SAAA1yC,EAAAzB,GACtByB,EAAA0yC,UAAAn0C,GACG,SAAAyB,EAAAzB,GACH,OAAAo0C,KAAAp0C,GAAAyB,EAAA2yC,GAAAp0C,EAAAo0C,IAMA/vC,GAAA,SAAAhB,EAAAvB,GACA,MAAAA,GAAAuyC,cAAAhxC,IACGkB,GAAA,SAAAlB,EAAAvB,GACH,MAAAA,GAAAwyC,iBAAAjxC,IACGgF,GAAA,SAAAvG,EAAAuB,GACH,GAAAkxC,GAAAzyC,EAAA0yC,SAAA1yC,EAAAN,EAAAM,EAAA,mBAIA,QAHAuG,GAAA,SAAAvG,EAAAuB,GACA,MAAAkxC,GAAAp3C,KAAA2E,EAAAuB,KAEAvB,EAAAuB,GAEA,mBAAAoxC,UACApwC,GAAA,SAAAhB,EAAAvB,GACA,MAAA2yC,QAAApxC,EAAAvB,GAAA,UAEAyC,GAAAkwC,OACApsC,GAAAosC,OAAAC,iBAEAxxC,GAAA4F,UAAA,WACA,MAAA5F,IAAAlG,OAAA2zC,GAAAryC,iBAEA,IAAA4F,IAAAhB,GAAA4F,UAAA9I,YACAkE,IAAAlH,OAAA,SAAAoH,GACA,GAAAuwC,GAAAC,EAAAhsC,EAAAzK,EAAA02C,IACAzwC,GAAAD,EAAAC,EACA,QAAAsE,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GAAS,CAC9CksC,EAAAv3C,KAAAq3C,MACAA,EAAA3sC,YAAAY,EAAAzN,KAAAuN,IAAAV,UACA,QAAAnG,GAAA,GAAAC,EAAA8G,EAAAtJ,SAAwCuC,EAAAC,IACxC3D,EAAAyK,EAAA/G,KACA8yC,EAAAr3C,KAAAs3C,EAAAxwC,EAAAjH,KAAAgB,IAAAgK,SAAAtG,EAAA6G,IACAksC,GAAA,YAAAz2C,KAAAy2C,EAAAzsC,SAAAhK,EAAAgK,WAEAwsC,EAAAr3C,KAAA,MAIA,MAAAyG,GAAA8wC,IAOA3wC,GAAA4wC,UAAA,SAAA1wC,GACA,GAAAuwC,GAAAx2C,EAAA02C,IACAzwC,GAAAE,EAAAF,EACA,QAAAsE,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GACrC,OAAAC,GAAAzN,KAAAuN,GAAA7G,EAAA,GAAAC,EAAA8G,EAAAtJ,SAAyDuC,EAAAC,IACzD3D,EAAAyK,EAAA/G,MACAgzC,EAAAv3C,KAAAq3C,EAAA/qC,GAAAxF,EAAAjH,KAAAgB,IAAAgK,SAAAtG,EAAA6G,KACAisC,EAAA3sC,WAAA7J,EAIA,OAAA4F,GAAA8wC,GAOA,IAAAntC,IAAA,+BACAqtC,IACAh5C,IAAA,6BACAi5C,MAAAttC,GACAutC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEAjyC,IAAAmC,IACA4Q,OAAA8+B,GACAzvC,QAAA,SAAA5D,GACA,GAAAG,GAAAH,EAAAmB,QAAA,KAAAoT,EAAAvU,CAEA,OADAG,IAAA,cAAAoU,EAAAvU,EAAAjB,MAAA,EAAAoB,MAAAH,IAAAjB,MAAAoB,EAAA,IACAkzC,GAAAv2B,eAAAvI,IACApR,MAAAkwC,GAAA9+B,GACAnR,MAAApD,GACOA,IAGPwC,GAAAhH,KAAA,SAAAwE,EAAA9G,GACA,GAAAyE,UAAAC,OAAA,GACA,mBAAAoC,GAAA,CACA,GAAAvD,GAAAhD,KAAAgD,MAEA,OADAuD,GAAAwB,GAAAmC,GAAAC,QAAA5D,GACAA,EAAAoD,MAAA3G,EAAAi3C,eAAA1zC,EAAAmD,MAAAnD,EAAAoD,OAAA3G,EAAAqI,aAAA9E,GAEA,IAAA9G,IAAA8G,GAAAvG,KAAAk6C,KAAA7wC,EAAA5J,EAAA8G,EAAA9G,IACA,OAAAO,MAEA,MAAAA,MAAAk6C,KAAA7wC,EAAA9C,EAAA9G,KA6BAsJ,GAAAoxC,QAAA,SAAA5zC,EAAA9G,GACA,GAAAyE,UAAAC,OAAA,GACA,mBAAAoC,GAAA,CACA,GAAAvD,GAAAhD,KAAAgD,OAAA2D,GAAAJ,EAAAmE,EAAAnE,IAAApC,OAAAuC,EAAA,EACA,IAAAjH,EAAAuD,EAAAmI,WACA,OAAAzE,EAAAC,GAAA,IAAAlH,EAAA26C,SAAA7zC,EAAAG,IAAA,aAGA,KADAjH,EAAAuD,EAAAqI,aAAA,WACA3E,EAAAC,GAAA,IAAA4D,EAAAhE,EAAAG,IAAA6E,KAAA9L,GAAA,QAEA,UAEA,IAAAA,IAAA8G,GAAAvG,KAAAk6C,KAAAtvC,EAAAnL,EAAA8G,EAAA9G,IACA,OAAAO,MAEA,MAAAA,MAAAk6C,KAAAtvC,EAAArE,EAAA9G,KAkCAsJ,GAAA4C,MAAA,SAAApF,EAAA9G,EAAAgM,GACA,GAAA9E,GAAAzC,UAAAC,MACA,MAAAwC,EAAA,CACA,mBAAAJ,GAAA,CACA,EAAAI,IAAAlH,EAAA,GACA,KAAAgM,IAAAlF,GAAAvG,KAAAk6C,KAAA1uC,EAAAC,EAAAlF,EAAAkF,GAAAhM,GACA,OAAAO,MAEA,KAAA2G,EAAA,CACA,GAAA3D,GAAAhD,KAAAgD,MACA,OAAAI,GAAAJ,GAAAq3C,iBAAAr3C,EAAA,MAAAs3C,iBAAA/zC,GAEAkF,EAAA,GAEA,MAAAzL,MAAAk6C,KAAA1uC,EAAAjF,EAAA9G,EAAAgM,KAeA1C,GAAAkwC,SAAA,SAAA1yC,EAAA9G,GACA,GAAAyE,UAAAC,OAAA,GACA,mBAAAoC,GAAA,MAAAvG,MAAAgD,OAAAuD,EACA,KAAA9G,IAAA8G,GAAAvG,KAAAk6C,KAAAluC,EAAAvM,EAAA8G,EAAA9G,IACA,OAAAO,MAEA,MAAAA,MAAAk6C,KAAAluC,EAAAzF,EAAA9G,KAeAsJ,GAAAwxC,KAAA,SAAA96C,GACA,MAAAyE,WAAAC,OAAAnE,KAAAk6C,KAAA,kBAAAz6C,GAAA,WACA,GAAAsT,GAAAtT,EAAA2G,MAAApG,KAAAkE,UACAlE,MAAA2zC,YAAA,MAAA5gC,EAAA,GAAAA,GACK,MAAAtT,EAAA,WACLO,KAAA2zC,YAAA,IACK,WACL3zC,KAAA2zC,YAAAl0C,IACKO,KAAAgD,OAAA2wC,aAEL5qC,GAAAyxC,KAAA,SAAA/6C,GACA,MAAAyE,WAAAC,OAAAnE,KAAAk6C,KAAA,kBAAAz6C,GAAA,WACA,GAAAsT,GAAAtT,EAAA2G,MAAApG,KAAAkE,UACAlE,MAAAy6C,UAAA,MAAA1nC,EAAA,GAAAA,GACK,MAAAtT,EAAA,WACLO,KAAAy6C,UAAA,IACK,WACLz6C,KAAAy6C,UAAAh7C,IACKO,KAAAgD,OAAAy3C,WAEL1xC,GAAAjH,OAAA,SAAAyE,GAEA,MADAA,GAAA6F,EAAA7F,GACAvG,KAAA6B,OAAA,WACA,MAAA7B,MAAA06C,YAAAn0C,EAAAH,MAAApG,KAAAkE,eAaA6E,GAAAiyB,OAAA,SAAAz0B,EAAAkV,GAGA,MAFAlV,GAAA6F,EAAA7F,GACAkV,EAAAzS,EAAAyS,GACAzb,KAAA6B,OAAA,WACA,MAAA7B,MAAA26C,aAAAp0C,EAAAH,MAAApG,KAAAkE,WAAAuX,EAAArV,MAAApG,KAAAkE,YAAA,SAGA6E,GAAAnB,OAAA,WACA,MAAA5H,MAAAk6C,KAAAvtC,IAMA5D,GAAAnJ,KAAA,SAAAH,EAAAmF,GAWA,QAAAg2C,GAAAntC,EAAAotC,GACA,GAAAn0C,GAAA1D,EAAA83C,EAAAn0C,EAAA8G,EAAAtJ,OAAAqJ,EAAAqtC,EAAA12C,OAAAm9B,EAAAxvB,KAAAiD,IAAApO,EAAA6G,GAAAutC,EAAA,GAAAn/B,OAAApO,GAAAwtC,EAAA,GAAAp/B,OAAApO,GAAAytC,EAAA,GAAAr/B,OAAAjV,EACA,IAAA/B,EAAA,CACA,GAAA2zC,GAAA2C,EAAA,GAAAn2C,GAAAo2C,EAAA,GAAAv/B,OAAAjV,EACA,KAAAD,EAAA,KAAoBA,EAAAC,IACpB3D,EAAAyK,EAAA/G,MACAw0C,EAAA5N,IAAAiL,EAAA3zC,EAAA5C,KAAAgB,IAAAgK,SAAAtG,IACAu0C,EAAAv0C,GAAA1D,EAEAk4C,EAAArzC,IAAA0wC,EAAAv1C,GAEAm4C,EAAAz0C,GAAA6xC,EAGA,KAAA7xC,EAAA,KAAoBA,EAAA8G,IACpBxK,EAAAk4C,EAAAzzC,IAAA8wC,EAAA3zC,EAAA5C,KAAA64C,EAAAC,EAAAD,EAAAn0C,QAEW1D,KAAA,IACX+3C,EAAAr0C,GAAA1D,EACAA,EAAAgK,SAAA8tC,GAHAE,EAAAt0C,GAAAqG,EAAA+tC,GAKAI,EAAArzC,IAAA0wC,GAAA,EAEA,KAAA7xC,EAAA,KAAoBA,EAAAC,GACpBD,IAAAy0C,IAAAD,EAAAzzC,IAAA0zC,EAAAz0C,OAAA,IACAu0C,EAAAv0C,GAAA+G,EAAA/G,QAGO,CACP,IAAAA,EAAA,KAAoBA,EAAA46B,GACpBt+B,EAAAyK,EAAA/G,GACAo0C,EAAAD,EAAAn0C,GACA1D,GACAA,EAAAgK,SAAA8tC,EACAC,EAAAr0C,GAAA1D,GAEAg4C,EAAAt0C,GAAAqG,EAAA+tC,EAGA,MAActtC,EAAA9G,IAAMA,EACpBs0C,EAAAt0C,GAAAqG,EAAA8tC,EAAAn0C,GAEA,MAAcC,EAAAD,IAAMA,EACpBu0C,EAAAv0C,GAAA+G,EAAA/G,GAGAs0C,EAAA/sC,OAAA8sC,EACAC,EAAAnuC,WAAAkuC,EAAAluC,WAAAouC,EAAApuC,WAAAY,EAAAZ,WACAiB,EAAA3L,KAAA64C,GACA/sC,EAAA9L,KAAA44C,GACAK,EAAAj5C,KAAA84C,GA5DA,GAAAxtC,GAAAzK,EAAA0D,EAAA,GAAAC,EAAA3G,KAAAmE,MACA,KAAAD,UAAAC,OAAA,CAEA,IADA1E,EAAA,GAAAmc,OAAAjV,GAAA8G,EAAAzN,KAAA,IAAAmE,UACAuC,EAAAC,IACA3D,EAAAyK,EAAA/G,MACAjH,EAAAiH,GAAA1D,EAAAgK,SAGA,OAAAvN,GAsDA,GAAAqO,GAAAJ,MAAAO,EAAArF,MAAAwyC,EAAAxyC,KACA,sBAAAnJ,GACA,OAAAiH,EAAAC,GACAi0C,EAAAntC,EAAAzN,KAAA0G,GAAAjH,EAAAuC,KAAAyL,IAAAZ,WAAAG,SAAAtG,QAGA,QAAAA,EAAAC,GACAi0C,EAAAntC,EAAAzN,KAAA0G,GAAAjH,EASA,OANAwO,GAAAH,MAAA,WACA,MAAAA,IAEAG,EAAAmtC,KAAA,WACA,MAAAA,IAEAntC,GAOAlF,GAAAsyC,MAAA,SAAA57C,GACA,MAAAyE,WAAAC,OAAAnE,KAAAi5C,SAAA,WAAAx5C,GAAAO,KAAAi5C,SAAA,aAEAlwC,GAAA+F,OAAA,SAAAA,GACA,GAAA0qC,GAAA/rC,EAAAzK,EAAA02C,IACA,mBAAA5qC,OAAA7B,EAAA6B,GACA,QAAAvB,GAAA,EAAAC,EAAAxN,KAAAmE,OAAoCqJ,EAAAD,EAAOA,IAAA,CAC3CmsC,EAAAv3C,KAAAq3C,MACAA,EAAA3sC,YAAAY,EAAAzN,KAAAuN,IAAAV,UACA,QAAAnG,GAAA,EAAAC,EAAA8G,EAAAtJ,OAAuCwC,EAAAD,EAAOA,KAC9C1D,EAAAyK,EAAA/G,KAAAoI,EAAA9M,KAAAgB,IAAAgK,SAAAtG,EAAA6G,IACAisC,EAAAr3C,KAAAa,GAIA,MAAA4F,GAAA8wC,IAOA3wC,GAAA8vC,MAAA,WACA,OAAAtrC,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GACrC,OAAAxK,GAAAyK,EAAAzN,KAAAuN,GAAA7G,EAAA+G,EAAAtJ,OAAA,EAAA01B,EAAApsB,EAAA/G,KAA4EA,GAAA,IAC5E1D,EAAAyK,EAAA/G,MACAmzB,OAAA72B,EAAAs4C,aAAAzhB,EAAAhtB,WAAA8tC,aAAA33C,EAAA62B,GACAA,EAAA72B,EAIA,OAAAhD,OAEA+I,GAAAkf,KAAA,SAAA7a,GACAA,EAAAD,EAAA/G,MAAApG,KAAAkE,UACA,QAAAqJ,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GAASxN,KAAAuN,GAAA0a,KAAA7a,EAC9C,OAAApN,MAAA64C,SAQA9vC,GAAAmxC,KAAA,SAAA5sC,GACA,MAAAD,GAAArN,KAAA,SAAAgD,EAAA0D,EAAA6G,GACAD,EAAAtL,KAAAgB,IAAAgK,SAAAtG,EAAA6G,MAWAxE,GAAA/G,KAAA,SAAAsL,GACA,GAAAiuC,GAAA9sC,GAAAvK,UAEA,OADAoJ,GAAAlH,MAAAm1C,EAAA,GAAAv7C,KAAAu7C,GACAv7C,MAEA+I,GAAAmvC,MAAA,WACA,OAAAl4C,KAAAgD,QAEA+F,GAAA/F,KAAA,WACA,OAAAuK,GAAA,EAAAC,EAAAxN,KAAAmE,OAAoCqJ,EAAAD,EAAOA,IAC3C,OAAAE,GAAAzN,KAAAuN,GAAA7G,EAAA,EAAAC,EAAA8G,EAAAtJ,OAAwDwC,EAAAD,EAAOA,IAAA,CAC/D,GAAA1D,GAAAyK,EAAA/G,EACA,IAAA1D,EAAA,MAAAA,GAGA,aAEA+F,GAAAnD,KAAA,WACA,GAAAe,GAAA,CAIA,OAHA0G,GAAArN,KAAA,aACA2G,IAEAA,EAMA,IAAAiH,MACA7F,IAAA4F,UAAAG,MAAAJ,EACA3F,GAAA4F,UAAAG,MAAAjJ,UAAA+I,GACAA,GAAA9L,OAAAiH,GAAAjH,OACA8L,GAAAsqC,MAAAnvC,GAAAmvC,MACAtqC,GAAA5K,KAAA+F,GAAA/F,KACA4K,GAAA5L,KAAA+G,GAAA/G,KACA4L,GAAAhI,KAAAmD,GAAAnD,KACAgI,GAAA/L,OAAA,SAAAoH,GAEA,OADAuwC,GAAAC,EAAA+B,EAAA/tC,EAAAzK,EAAA02C,KACAnsC,EAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GAAS,CAC9CguC,GAAA/tC,EAAAzN,KAAAuN,IAAAU,OACAyrC,EAAAv3C,KAAAq3C,MACAA,EAAA3sC,WAAAY,EAAAZ,UACA,QAAAnG,GAAA,GAAAC,EAAA8G,EAAAtJ,SAAwCuC,EAAAC,IACxC3D,EAAAyK,EAAA/G,KACA8yC,EAAAr3C,KAAAq5C,EAAA90C,GAAA+yC,EAAAxwC,EAAAjH,KAAAyL,EAAAZ,WAAA7J,EAAAgK,SAAAtG,EAAA6G,IACAksC,EAAAzsC,SAAAhK,EAAAgK,UAEAwsC,EAAAr3C,KAAA,MAIA,MAAAyG,GAAA8wC,IAEA9rC,GAAAotB,OAAA,SAAAz0B,EAAAkV,GAEA,MADAvX,WAAAC,OAAA,IAAAsX,EAAA5N,EAAA7N,OACA+I,GAAAiyB,OAAAh5B,KAAAhC,KAAAuG,EAAAkV,IAYA1T,GAAAlG,OAAA,SAAAmB,GACA,GAAAyK,EAQA,OAPA,gBAAAzK,IACAyK,GAAAvE,GAAAlG,EAAAwyC,KACA/nC,EAAAZ,WAAA2oC,GAAAryC,kBAEAsK,GAAAzK,GACAyK,EAAAZ,WAAA9J,EAAAC,IAEA4F,GAAA6E,KAEA1F,GAAA4xC,UAAA,SAAAza,GACA,GAAAzxB,EAQA,OAPA,gBAAAyxB,IACAzxB,EAAAgB,GAAArF,GAAA81B,EAAAsW,KACA/nC,EAAAZ,WAAA2oC,GAAAryC,kBAEAsK,EAAAgB,GAAAywB,GACAzxB,EAAAZ,WAAA,MAEAjE,GAAA6E,KAEA1E,GAAAzB,GAAA,SAAAqB,EAAAnB,EAAA2G,GACA,GAAAxH,GAAAzC,UAAAC,MACA,MAAAwC,EAAA,CACA,mBAAAgC,GAAA,CACA,EAAAhC,IAAAa,GAAA,EACA,KAAA2G,IAAAxF,GAAA3I,KAAAk6C,KAAAhsC,EAAAC,EAAAxF,EAAAwF,GAAA3G,GACA,OAAAxH,MAEA,KAAA2G,EAAA,OAAAA,EAAA3G,KAAAgD,OAAA,OAAA2F,KAAAhC,EAAA3B,CACAmJ,IAAA,EAEA,MAAAnO,MAAAk6C,KAAAhsC,EAAAvF,EAAAnB,EAAA2G,IAgCA,IAAAY,IAAAhH,GAAAgD,KACA0wC,WAAA,YACAC,WAAA,YAEAlG,KACAzmC,GAAAkI,QAAA,SAAAzS,GACA,KAAAA,IAAAgxC,KAAAzmC,GAAAnH,OAAApD,IAwBA,IAAAiL,IAAAH,GAAA,CAyBAvH,IAAA4zC,MAAA,SAAA7rC,GACA,MAAAD,IAAAC,EAAA7H,KAEA,IAAAkI,IAAAnQ,KAAA47C,WAAA,SAAArwC,KAAAvL,KAAA47C,UAAAC,WAAA,IA8BA9zC,IAAA+zC,MAAA,SAAAhsC,EAAAisC,EAAAtqC,GAEA,GADAvN,UAAAC,OAAA,IAAAsN,EAAAsqC,IAAA9zC,IAAA8H,gBACAgsC,EAAA,OAAAD,GAAAp1C,EAAA,EAAAC,EAAAo1C,EAAA53C,OAA2DwC,EAAAD,IAAOA,EAClE,IAAAo1C,EAAAC,EAAAr1C,IAAA+K,eACA,MAAA5B,IAAAC,EAAAgsC,IAIA/zC,GAAA+wC,SAAAkD,KAAA,WAEA,QAAAA,KACAh8C,KAAAsH,GAAA,iBAAA20C,GAAA30C,GAAA,kBAAA40C,GAEA,QAAAC,GAAA/5C,EAAAmO,EAAAoX,EAAAy0B,EAAA/f,GACA,kBAWA,QAAAggB,KACA,GAAAhuB,GAAAC,EAAAguB,EAAA/rC,EAAA3D,EAAA2vC,EACAD,KACAjuB,EAAAiuB,EAAA,GAAAE,EAAA,GACAluB,EAAAguB,EAAA,GAAAE,EAAA,GACAC,GAAApuB,EAAAC,EACAkuB,EAAAF,EACAr1C,GACA0B,KAAA,OACArH,EAAAg7C,EAAA,GAAAI,EAAA,GACAj7C,EAAA66C,EAAA,GAAAI,EAAA,GACAruB,KACAC,QAGA,QAAAquB,KACApsC,EAAA3D,EAAA2vC,KACAK,EAAAt1C,GAAA80C,EAAAS,EAAA,MAAAv1C,GAAA+0B,EAAAwgB,EAAA,MACAC,EAAAL,GACAx1C,GACA0B,KAAA,aA9BA,GAAA+zC,GAAAK,EAAA/8C,KAAAiG,EAAA8B,GAAAb,MAAAjB,OAAA+2C,sBAAAj1C,GAAAb,MAAAjB,OAAA2G,EAAAmwC,EAAAlwC,WAAA5F,EAAAC,EAAAoB,GAAAy0C,EAAA74C,WAAAu4C,EAAA,EAAAF,EAAAn6C,IAAAy6C,EAAA,eAAAN,EAAA,OAAAA,GAAAK,EAAA70C,GAAAlG,OAAA8lB,EAAA1hB,IAAAqB,GAAA80C,EAAAS,EAAAR,GAAA/0C,GAAA+0B,EAAAwgB,EAAAF,GAAAG,EAAAztC,GAAApJ,GAAAu2C,EAAAjsC,EAAA3D,EAAA2vC,EACAU,IACAP,EAAAO,EAAA72C,MAAA22C,EAAA74C,WACAw4C,KAAAp7C,EAAAk7C,EAAA,GAAAE,EAAAj7C,EAAA+6C,EAAA,KAEAE,GAAA,KAEAz1C,GACA0B,KAAA,eAdA,GAAAzB,GAAAmB,EAAA2zC,EAAA,8BAAAiB,EAAA,KAAAhB,EAAAE,EAAAr1C,EAAAiB,GAAA4zC,MAAAv4C,EAAA,uBAAA84C,EAAAC,EAAA3qC,GAAAzJ,GAAA+zC,MAAA/1C,EAAA,uBA8CA,OALAi2C,GAAAiB,OAAA,SAAA37C,GACA,MAAA4C,WAAAC,QACA84C,EAAA37C,EACA06C,GAFAiB,GAIAl1C,GAAAyP,OAAAwkC,EAAA90C,EAAA,OAKAa,GAAAg0C,QAAA,SAAAjsC,EAAAisC,GAEA,MADA73C,WAAAC,OAAA,IAAA43C,EAAA9zC,IAAA8zC,SACAA,EAAAttC,GAAAstC,GAAAhxC,IAAA,SAAA+wC,GACA,GAAA5rC,GAAAL,GAAAC,EAAAgsC,EAEA,OADA5rC,GAAAuB,WAAAqqC,EAAArqC,WACAvB,OAGA,IAAAyV,IAAA,KAAAqX,GAAArX,MAAA9T,GAAAC,KAAA+jB,GAAAlK,GAAA,EAAA9Z,GAAAqrC,GAAAvxB,GAAAhG,GAAA1T,GAAAJ,GAAA,EAAAiC,GAAAjC,GAAA,IAAAyC,GAAA,IAAAzC,GAyBAoe,GAAAne,KAAAqrC,MAAAC,GAAA,EAAAC,GAAA,CACAt1C,IAAAu1C,gBAAA,SAAAx1B,EAAAC,GACA,GAAArhB,GAAA6W,EAAAggC,EAAAz1B,EAAA,GAAA01B,EAAA11B,EAAA,GAAA21B,EAAA31B,EAAA,GAAA41B,EAAA31B,EAAA,GAAA41B,EAAA51B,EAAA,GAAA61B,EAAA71B,EAAA,GAAAsG,EAAAqvB,EAAAH,EAAAjvB,EAAAqvB,EAAAH,EAAAxqB,EAAA3E,IAAAC,GACA,IAAA0O,GAAAhK,EACAzV,EAAAzL,KAAAqH,IAAAykC,EAAAH,GAAAxtB,GACAvpB,EAAA,SAAAwR,GACA,OAAAqlC,EAAArlC,EAAAmW,EAAAmvB,EAAAtlC,EAAAoW,EAAAmvB,EAAA3rC,KAAAM,IAAA6d,GAAA/X,EAAAqF,SAEK,CACL,GAAAnB,GAAAtK,KAAAyC,KAAAye,GAAAP,GAAAmrB,IAAAH,IAAAJ,GAAArqB,IAAA,EAAAyqB,EAAAL,GAAAhhC,GAAA0W,GAAA8qB,IAAAH,IAAAJ,GAAArqB,IAAA,EAAA4qB,EAAAR,GAAAhhC,GAAAinB,EAAAvxB,KAAAqH,IAAArH,KAAAyC,KAAAke,IAAA,GAAAA,GAAA6Q,EAAAxxB,KAAAqH,IAAArH,KAAAyC,KAAAue,IAAA,GAAAA,EACAvV,IAAA+lB,EAAAD,GAAApT,GACAvpB,EAAA,SAAAwR,GACA,GAAAhQ,GAAAgQ,EAAAqF,EAAAsgC,EAAAxrC,GAAAgxB,GAAA3e,EAAA+4B,GAAAL,GAAAhhC,IAAAyhC,EAAAvrC,GAAA2d,GAAA/nB,EAAAm7B,GAAAlxB,GAAAkxB,GACA,QAAAka,EAAA74B,EAAA2J,EAAAmvB,EAAA94B,EAAA4J,EAAAmvB,EAAAI,EAAAxrC,GAAA4d,GAAA/nB,EAAAm7B,KAIA,MADA38B,GAAA6tC,SAAA,IAAAh3B,EACA7W,GAEAqB,GAAA+wC,SAAAgF,KAAA,WAeA,QAAAA,GAAAnqC,GACAA,EAAArM,GAAA20C,EAAA8B,GAAAz2C,GAAA02C,GAAA,QAAAC,GAAA32C,GAAA,gBAAA42C,GAAA52C,GAAA40C,EAAAiC,GAoGA,QAAAC,GAAAnlC,GACA,QAAAA,EAAA,GAAAolC,EAAA/8C,GAAA+8C,EAAA75C,GAAAyU,EAAA,GAAAolC,EAAA58C,GAAA48C,EAAA75C,GAEA,QAAA0L,GAAA/I,GACA,OAAAA,EAAA,GAAAk3C,EAAA75C,EAAA65C,EAAA/8C,EAAA6F,EAAA,GAAAk3C,EAAA75C,EAAA65C,EAAA58C,GAEA,QAAA68C,GAAAp2C,GACAm2C,EAAA75C,EAAAsN,KAAA+C,IAAA0pC,EAAA,GAAAzsC,KAAAiD,IAAAwpC,EAAA,GAAAr2C,IAEA,QAAAs2C,GAAAvlC,EAAA9R,GACAA,EAAA+I,EAAA/I,GACAk3C,EAAA/8C,GAAA2X,EAAA,GAAA9R,EAAA,GACAk3C,EAAA58C,GAAAwX,EAAA,GAAA9R,EAAA,GAEA,QAAAs3C,GAAA1B,EAAA9jC,EAAA9R,EAAA3C,GACAu4C,EAAA2B,WACAp9C,EAAA+8C,EAAA/8C,EACAG,EAAA48C,EAAA58C,EACA+C,EAAA65C,EAAA75C,GAEA85C,EAAAxsC,KAAA2C,IAAA,EAAAjQ,IACAg6C,EAAAG,EAAA1lC,EAAA9R,GACA41C,EAAAh1C,GAAAlG,OAAAk7C,GACAxI,EAAA,IAAAwI,IAAA9I,aAAAM,aACAwI,EAAA/6C,KAAA87C,EAAA52C,OAEA,QAAAskC,KACAzd,KAAAvtB,OAAA6lB,EAAA5lB,QAAAsK,IAAA,SAAAzJ,GACA,OAAAA,EAAA+8C,EAAA/8C,GAAA+8C,EAAA75C,IACOuG,IAAAsb,EAAAgB,SACP2G,KAAAxtB,OAAA2lB,EAAA1lB,QAAAsK,IAAA,SAAAtJ,GACA,OAAAA,EAAA48C,EAAA58C,GAAA48C,EAAA75C,IACOuG,IAAAob,EAAAkB,SAEP,QAAAu3B,GAAA33C,GACA43C,KAAA53C,GACA0B,KAAA,cAGA,QAAAm2C,GAAA73C,GACAukC,IACAvkC,GACA0B,KAAA,OACArI,MAAA+9C,EAAA75C,EACAuwB,WAAAspB,EAAA/8C,EAAA+8C,EAAA58C,KAGA,QAAAs9C,GAAA93C,KACA43C,IAAA53C,GACA0B,KAAA,YACOg2C,EAAA,MAEP,QAAAZ,KAIA,QAAA1B,KACAI,EAAA,EACA+B,EAAAz2C,GAAA4zC,MAAAoB,GAAAiC,GACAF,EAAA73C,GAEA,QAAA01C,KACAh1B,EAAArgB,GAAA23C,EAAA,MAAA33C,GAAA43C,EAAA,MACApC,EAAAL,GACAsC,EAAA93C,GAXA,GAAA81C,GAAA/8C,KAAAiH,EAAAC,EAAAoB,GAAAy0C,EAAA74C,WAAAu4C,EAAA,EAAA90B,EAAA5f,GAAAlG,OAAAuB,EAAA25C,IAAAz1C,GAAA23C,EAAA5C,GAAA/0C,GAAA43C,EAAAvC,GAAAqC,EAAAZ,EAAAr2C,GAAA4zC,MAAAoB,IAAAD,EAAAztC,GAAA0tC,EACAoC,IAAAn9C,KAAA+6C,GACA6B,EAAA33C,GAYA,QAAAk3C,KAKA,QAAAiB,KACA,GAAArD,GAAAh0C,GAAAg0C,QAAAgB,EAKA,OAJAsC,GAAAhB,EAAA75C,EACAu3C,EAAA9kC,QAAA,SAAAiB,GACAA,EAAAzG,aAAA6tC,OAAApnC,EAAAzG,YAAA2sC,EAAAlmC,MAEA6jC,EAEA,QAAAwD,KACA,GAAAt5C,GAAA8B,GAAAb,MAAAjB,MACA8B,IAAAlG,OAAAoE,GAAAqB,GAAAk4C,EAAAnD,GAAA/0C,GAAAm4C,EAAA9C,GACA+C,EAAAv9C,KAAA8D,EAEA,QADA05C,GAAA53C,GAAAb,MAAA6I,eACArJ,EAAA,EAAAC,EAAAg5C,EAAAx7C,OAA2CwC,EAAAD,IAAOA,EAClD44C,EAAAK,EAAAj5C,GAAA+K,YAAA,IAEA,IAAAsqC,GAAAqD,IAAArnC,EAAAD,KAAAC,KACA,QAAAgkC,EAAA53C,OAAA,CACA,OAAA4T,EAAA6nC,EAAA,CACA,GAAA3mC,GAAA8iC,EAAA,EACA0C,GAAA1B,EAAA9jC,EAAAqmC,EAAArmC,EAAAxH,YAAAK,KAAA6K,MAAA7K,KAAAqH,IAAAklC,EAAA75C,GAAAsN,KAAAi2B,KAAA,GACAjgC,IAEA83C,EAAA7nC,MACS,IAAAgkC,EAAA53C,OAAA,GACT,GAAA8U,GAAA8iC,EAAA,GAAAtuB,EAAAsuB,EAAA,GAAA1tB,EAAApV,EAAA,GAAAwU,EAAA,GAAAa,EAAArV,EAAA,GAAAwU,EAAA,EACAoyB,GAAAxxB,IAAAC,KAGA,QAAA+tB,KACA,GAAAv0B,GAAAg4B,EAAA/3B,EAAAg4B,EAAAhE,EAAAh0C,GAAAg0C,QAAAgB,EACAoC,IAAAn9C,KAAA+6C,EACA,QAAAr2C,GAAA,EAAAC,EAAAo1C,EAAA53C,OAA2CwC,EAAAD,IAAOA,EAAAq5C,EAAA,KAElD,GADAh4B,EAAAg0B,EAAAr1C,GACAq5C,EAAAT,EAAAv3B,EAAAtW,YAAA,CACA,GAAAquC,EAAA,KACAh4B,GAAAC,EAAA+3B,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,MAAAj4B,EAAA,GAAAD,EAAA,IAAAk4B,KAAAj4B,EAAA,GAAAD,EAAA,IAAAk4B,EAAAC,EAAAJ,GAAA/tC,KAAAyC,KAAAyrC,EAAAH,EACA/3B,OAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA+3B,MAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAzB,EAAA2B,EAAAZ,GAEAO,EAAA,KACApB,EAAA12B,EAAAg4B,GACAhB,EAAA73C,GAEA,QAAA01C,KACA,GAAA50C,GAAAb,MAAA60C,QAAA53C,OAAA,CAEA,OADAw7C,GAAA53C,GAAAb,MAAA6I,eACArJ,EAAA,EAAAC,EAAAg5C,EAAAx7C,OAA6CwC,EAAAD,IAAOA,QACpD44C,GAAAK,EAAAj5C,GAAA+K,WAEA,QAAAA,KAAA6tC,GACA,WAAAF,KAGAr3C,GAAA4xC,UAAA+F,GAAAp4C,GAAA44C,EAAA,MACAv4B,EAAArgB,GAAA20C,EAAA8B,GAAAz2C,GAAA40C,EAAAiC,GACArB,IACAiC,EAAA93C,GAlEA,GAA4Eo4C,GAA5EtC,EAAA/8C,KAAAiH,EAAAC,EAAAoB,GAAAy0C,EAAA74C,WAAAo7C,KAA4EO,EAAA,EAAAK,EAAA,SAAAn4C,GAAAb,MAAA6I,eAAA,GAAA0B,WAAA+tC,EAAA,YAAAU,EAAAT,EAAA,WAAAS,EAAAR,KAAA/3B,EAAA5f,GAAAlG,OAAAk7C,GAAAD,EAAAztC,GAAA0tC,EAC5EwC,KACAX,EAAA33C,GACA0gB,EAAArgB,GAAA20C,EAAA,MAAA30C,GAAA40C,EAAAqD,GAkEA,QAAAtB,KACA,GAAAh3C,GAAAC,EAAAoB,GAAAtI,KAAAkE,UACAi8C,GAAA5nC,aAAA4nC,IAAyDhB,GAAAn9C,KAAAhC,MACzDogD,EAAAhC,EAAAO,EAAAtqB,GAAAtsB,GAAA4zC,MAAA37C,OAAA4+C,EAAA33C,IACAk5C,EAAAvwC,WAAA,WACAuwC,EAAA,KACApB,EAAA93C,IACO,IACPa,IACAw2C,EAAAxsC,KAAA2C,IAAA,OAAA4rC,MAAAhC,EAAA75C,GACAg6C,EAAAG,EAAAyB,GACAtB,EAAA73C,GAEA,QAAAi3C,KACA,GAAAjlC,GAAAlR,GAAA4zC,MAAA37C,MAAAwE,EAAAsN,KAAAqH,IAAAklC,EAAA75C,GAAAsN,KAAAi2B,GACA0W,GAAAz+C,KAAAiZ,EAAAmlC,EAAAnlC,GAAAlR,GAAAb,MAAAo5C,SAAAxuC,KAAAoH,KAAA1U,GAAA,EAAAsN,KAAA6K,MAAAnY,GAAA,GA3QA,GAIK47C,GAAAzB,EAAAtqB,EAAA8rB,EAAAP,EAAAv5B,EAAA0H,EAAA5H,EAAA6H,EAJLqwB,GACA/8C,EAAA,EACAG,EAAA,EACA+C,EAAA,GACKoB,GAAA,SAAA24C,EAAAgC,GAAAhM,EAAA,IAAAsK,EAAA,EAAA5C,EAAA,iBAAAgD,EAAA,iBAAAC,EAAA,eAAAhD,EAAA,kBAAAh1C,EAAAmB,EAAAy1C,EAAA,6BAyQL,OAxQAE,MACAA,GAAA,WAAAxI,KAAA6K,GAAA,WACA,OAAAt4C,GAAAb,MAAAs5C,QAAAz4C,GAAAb,MAAAu5C,UAAA,QACO,yBAAAjL,KAAA6K,GAAA,WACP,MAAAt4C,IAAAb,MAAAw5C,YACO,eAAAL,GAAA,WACP,OAAAt4C,GAAAb,MAAAy5C,QACO,wBAKP7C,EAAA52C,MAAA,SAAAyM,GACAA,EAAAumC,KAAA,WACA,GAAAjzC,GAAAC,EAAAoB,GAAAtI,KAAAkE,WAAA08C,EAAAvC,CACAwC,IACA94C,GAAAlG,OAAA7B,MAAAi0C,aAAAiG,KAAA,wBACAmE,EAAAr+C,KAAA0+C,YACAp9C,EAAA,EACAG,EAAA,EACA+C,EAAA,GAEAo6C,EAAA33C,KACWwsC,MAAA,uBACX,GAAAplB,GAAAzoB,EAAA,GAAA0oB,EAAA1oB,EAAA,GAAAihB,EAAA83B,IAAA,GAAAtwB,EAAA,EAAAvH,EAAA63B,IAAA,GAAArwB,EAAA,EAAA5nB,EAAAqB,GAAAu1C,kBAAAz2B,EAAAw3B,EAAA/8C,GAAA+8C,EAAA75C,GAAAsiB,EAAAu3B,EAAA58C,GAAA48C,EAAA75C,EAAA6pB,EAAAgwB,EAAA75C,KAAAqiB,EAAA+5B,EAAAt/C,GAAAs/C,EAAAp8C,GAAAsiB,EAAA85B,EAAAn/C,GAAAm/C,EAAAp8C,EAAA6pB,EAAAuyB,EAAAp8C,GACA,iBAAA0T,GACA,GAAA/Q,GAAAT,EAAAwR,GAAA1T,EAAA6pB,EAAAlnB,EAAA,EACAnH,MAAA0+C,UAAAL,GACA/8C,EAAAulB,EAAA1f,EAAA,GAAA3C,EACA/C,EAAAqlB,EAAA3f,EAAA,GAAA3C,EACAA,KAEAs6C,EAAA73C,MAEWizC,KAAA,4BACX6E,EAAA93C,KACWizC,KAAA,sBACX6E,EAAA93C,MAGAjH,KAAA0+C,UAAAL,EACAO,EAAA33C,GACA63C,EAAA73C,GACA83C,EAAA93C,OAIA62C,EAAA/oB,UAAA,SAAA/vB,GACA,MAAAd,WAAAC,QACAk6C,GACA/8C,GAAA0D,EAAA,GACAvD,GAAAuD,EAAA,GACAR,EAAA65C,EAAA75C,GAEAgnC,IACAsS,IAPAO,EAAA/8C,EAAA+8C,EAAA58C,IASAq8C,EAAAx9C,MAAA,SAAA0E,GACA,MAAAd,WAAAC,QACAk6C,GACA/8C,EAAA+8C,EAAA/8C,EACAG,EAAA48C,EAAA58C,EACA+C,EAAA,MAEA85C,GAAAt5C,GACAwmC,IACAsS,GARAO,EAAA75C,GAUAs5C,EAAAS,YAAA,SAAAv5C,GACA,MAAAd,WAAAC,QACAo6C,EAAA,MAAAv5C,EAAAu7C,KAAAv7C,EAAA,IAAAA,EAAA,IACA84C,GAFAS,GAIAT,EAAAzpB,OAAA,SAAArvB,GACA,MAAAd,WAAAC,QACAkwB,EAAArvB,OAAA,IAAAA,EAAA,IACA84C,GAFAzpB,GAIAypB,EAAAl4C,KAAA,SAAAZ,GACA,MAAAd,WAAAC,QACAyB,EAAAZ,OAAA,IAAAA,EAAA,IACA84C,GAFAl4C,GAIAk4C,EAAAvJ,SAAA,SAAAvvC,GACA,MAAAd,WAAAC,QACAowC,GAAAvvC,EACA84C,GAFAvJ,GAIAuJ,EAAAx8C,EAAA,SAAA8F,GACA,MAAAlD,WAAAC,QACA4pB,EAAA3mB,EACAif,EAAAjf,EAAA2kC,OACAsS,GACA/8C,EAAA,EACAG,EAAA,EACA+C,EAAA,GAEAs5C,GARA/vB,GAUA+vB,EAAAr8C,EAAA,SAAA2F,GACA,MAAAlD,WAAAC,QACA6pB,EAAA5mB,EACA+e,EAAA/e,EAAA2kC,OACAsS,GACA/8C,EAAA,EACAG,EAAA,EACA+C,EAAA,GAEAs5C,GARA9vB,GAoKAjmB,GAAAyP,OAAAsmC,EAAA52C,EAAA,MAEA,IAAAm5C,IAAArC,GAAAuC,IAAA,EAAAxnC,IACAhR,IAAAkN,MAAAxC,GAEAA,GAAA5N,UAAAiQ,SAAA,WACA,MAAA9U,MAAAyT,MAAA,IAEA1L,GAAAiN,IAAAtC,EAIA,IAAAouC,IAAApuC,GAAA7N,UAAA,GAAA4N,GACAquC,IAAAC,SAAA,SAAAv8C,GAEA,MADAA,GAAAsN,KAAA2C,IAAA,GAAAvQ,UAAAC,OAAAK,EAAA,GACA,GAAAkO,IAAA1S,KAAA2S,EAAA3S,KAAAkI,EAAAlI,KAAAmH,EAAA3C,IAEAs8C,GAAAE,OAAA,SAAAx8C,GAEA,MADAA,GAAAsN,KAAA2C,IAAA,GAAAvQ,UAAAC,OAAAK,EAAA,GACA,GAAAkO,IAAA1S,KAAA2S,EAAA3S,KAAAkI,EAAA1D,EAAAxE,KAAAmH,IAEA25C,GAAArtC,IAAA,WACA,MAAAX,IAAA9S,KAAA2S,EAAA3S,KAAAkI,EAAAlI,KAAAmH,IAqBAY,GAAAu6B,IAAAjvB,EAIA,IAAA4tC,IAAA5tC,GAAAxO,UAAA,GAAA4N,GACAwuC,IAAAF,SAAA,SAAAv8C,GACA,UAAA6O,IAAArT,KAAA2S,EAAA3S,KAAAkL,EAAA4G,KAAAiD,IAAA,IAAA/U,KAAAmH,EAAA+5C,IAAAh9C,UAAAC,OAAAK,EAAA,MAEAy8C,GAAAD,OAAA,SAAAx8C,GACA,UAAA6O,IAAArT,KAAA2S,EAAA3S,KAAAkL,EAAA4G,KAAA+C,IAAA,EAAA7U,KAAAmH,EAAA+5C,IAAAh9C,UAAAC,OAAAK,EAAA,MAEAy8C,GAAAxtC,IAAA,WACA,MAAAG,IAAA5T,KAAA2S,EAAA3S,KAAAkL,EAAAlL,KAAAmH,GAAAsM,OAOA1L,GAAAi7B,IAAA1vB,EAIA,IAAA4tC,IAAA,GACAjtC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACAgtC,GAAA7tC,GAAAzO,UAAA,GAAA4N,GACA0uC,IAAAJ,SAAA,SAAAv8C,GACA,UAAA8O,IAAAxB,KAAAiD,IAAA,IAAA/U,KAAAmH,EAAA+5C,IAAAh9C,UAAAC,OAAAK,EAAA,IAAAxE,KAAAuD,EAAAvD,KAAAwD,IAEA29C,GAAAH,OAAA,SAAAx8C,GACA,UAAA8O,IAAAxB,KAAA+C,IAAA,EAAA7U,KAAAmH,EAAA+5C,IAAAh9C,UAAAC,OAAAK,EAAA,IAAAxE,KAAAuD,EAAAvD,KAAAwD,IAEA29C,GAAA1tC,IAAA,WACA,MAAAM,IAAA/T,KAAAmH,EAAAnH,KAAAuD,EAAAvD,KAAAwD,IAqBAuE,GAAA0L,IAAAL,EAUA,IAAAguC,IAAAhuC,GAAAvO,UAAA,GAAA4N,GACA2uC,IAAAL,SAAA,SAAAv8C,GACAA,EAAAsN,KAAA2C,IAAA,GAAAvQ,UAAAC,OAAAK,EAAA,EACA,IAAAkP,GAAA1T,KAAA0T,EAAAC,EAAA3T,KAAA2T,EAAAnQ,EAAAxD,KAAAwD,EAAAkD,EAAA,EACA,OAAAgN,IAAAC,GAAAnQ,GACAkQ,GAAAhN,EAAAgN,MAAAhN,GACAiN,GAAAjN,EAAAiN,MAAAjN,GACAlD,GAAAkD,EAAAlD,MAAAkD,GACA,GAAA0M,IAAAtB,KAAAiD,IAAA,IAAArB,EAAAlP,GAAAsN,KAAAiD,IAAA,IAAApB,EAAAnP,GAAAsN,KAAAiD,IAAA,IAAAvR,EAAAgB,KAJA,GAAA4O,IAAA1M,QAMA06C,GAAAJ,OAAA,SAAAx8C,GAEA,MADAA,GAAAsN,KAAA2C,IAAA,GAAAvQ,UAAAC,OAAAK,EAAA,GACA,GAAA4O,IAAA5O,EAAAxE,KAAA0T,EAAAlP,EAAAxE,KAAA2T,EAAAnP,EAAAxE,KAAAwD,IAEA49C,GAAApsC,IAAA,WACA,MAAAnC,IAAA7S,KAAA0T,EAAA1T,KAAA2T,EAAA3T,KAAAwD,IAEA49C,GAAAtsC,SAAA,WACA,UAAAF,GAAA5U,KAAA0T,GAAAkB,GAAA5U,KAAA2T,GAAAiB,GAAA5U,KAAAwD,GAmEA,IAAA8R,IAAAvN,GAAAgD,KACAs2C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAtyB,IAAA,SACAuyB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEAj1C,IAAA2B,QAAA,SAAArS,EAAAnF,GACA6V,GAAAzN,IAAAjD,EAAA8P,GAAAjV,MAOAsI,GAAAyiD,QAAAh1C,GACAzN,GAAAoO,IAAAV,GAAA1P,GA4FAgC,GAAA0iD,IAAA,SAAAC,EAAA90C,GAEA,QAAA60C,GAAA90C,EAAAgiC,EAAArqC,GACApJ,UAAAC,OAAA,IAAAmJ,EAAAqqC,IAAA,KACA,IAAAxhC,GAAAN,GAAAF,EAAAC,EAAA,MAAA+hC,EAAAjiC,EAAAi1C,EAAAhT,GAAArqC,EAIA,OAHA6I,GAAAwhC,IAAA,SAAA3yC,GACA,MAAAd,WAAAC,OAAAgS,EAAAT,SAAA,OAAAiiC,EAAA3yC,GAAA0Q,EAAAi1C,EAAA3lD,IAAA2yC,GAEAxhC,EAEA,QAAAT,GAAAO,GACA,MAAAw0C,GAAArtC,MAAAnH,EAAAyB,cAEA,QAAAizC,GAAA95C,GACA,gBAAAoF,GACA,MAAAw0C,GAAArtC,MAAAnH,EAAAyB,aAAA7G,IA+EA,QAAA+5C,GAAAjT,GACA,MAAAA,GAAA5sC,IAAA8/C,GAAAxwC,KAAAqwC,GAEA,QAAAG,GAAAtQ,GACA,MAAAuQ,GAAAv/C,KAAAgvC,GAAA,IAAAA,EAAAjwC,QAAA,gBAAAiwC,EAjGA,GAAAuQ,GAAA,GAAAtgD,QAAA,KAAAkgD,EAAA,OAAAK,EAAAL,EAAAztC,WAAA,EAmGA,OAlFAwtC,GAAArtC,MAAA,SAAAm9B,EAAA1pC,GACA,GAAA5B,EACA,OAAAw7C,GAAAO,UAAAzQ,EAAA,SAAA5C,EAAAjxC,GACA,GAAAuI,EAAA,MAAAA,GAAA0oC,EAAAjxC,EAAA,EACA,IAAAnD,GAAA,GAAA0nD,UAAA,eAA2CtT,EAAA5sC,IAAA,SAAAxE,EAAAG,GAC3C,MAAA4uC,MAAA4V,UAAA3kD,GAAA,OAAAG,EAAA,MACS2T,KAAA,SACTpL,GAAA4B,EAAA,SAAA8mC,EAAAjxC,GACA,MAAAmK,GAAAtN,EAAAo0C,GAAAjxC,IACSnD,KAGTknD,EAAAO,UAAA,SAAAzQ,EAAA1pC,GAEA,QAAAs6C,KACA,GAAAvqC,GAAAkZ,EAAA,MAAAsxB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAA/9C,GAAAqT,CACA,SAAA25B,EAAAt9B,WAAA1P,GAAA,CAEA,IADA,GAAA7G,GAAA6G,EACA7G,IAAAozB,GACA,QAAAygB,EAAAt9B,WAAAvW,GAAA,CACA,QAAA6zC,EAAAt9B,WAAAvW,EAAA,WACAA,EAGAka,EAAAla,EAAA,CACA,IAAAwE,GAAAqvC,EAAAt9B,WAAAvW,EAAA,EAOA,OANA,MAAAwE,GACAmgD,GAAA,EACA,KAAA9Q,EAAAt9B,WAAAvW,EAAA,MAAAka,GACW,KAAA1V,IACXmgD,GAAA,GAEA9Q,EAAAj1C,MAAAiI,EAAA,EAAA7G,GAAA4D,QAAA,WAEA,KAAAwvB,EAAAlZ,GAAA,CACA,GAAA1V,GAAAqvC,EAAAt9B,WAAA2D,KAAApc,EAAA,CACA,SAAA0G,EAAAmgD,GAAA,MAAmC,SAAAngD,EACnCmgD,GAAA,EACA,KAAA9Q,EAAAt9B,WAAA2D,WAAApc,OACW,IAAA0G,IAAA6/C,EAAA,QACX,OAAAxQ,GAAAj1C,MAAAiI,EAAAqT,EAAApc,GAEA,MAAA+1C,GAAAj1C,MAAAiI,GAEA,IAjCA,GAA4B2K,GAAAmzC,EAA5BC,KAAkBF,KAAUG,KAAAzxB,EAAAygB,EAAAp2C,OAAAyc,EAAA,EAAAja,EAAA,GAiC5BuR,EAAAizC,OAAAC,GAAA,CAEA,IADA,GAAA7nD,MACA2U,IAAAozC,GAAApzC,IAAAkzC,GACA7nD,EAAApB,KAAA+V,GACAA,EAAAizC,GAEAt6C,IAAA,OAAAtN,EAAAsN,EAAAtN,EAAAoD,OACA4kD,EAAAppD,KAAAoB,GAEA,MAAAgoD,IAEAd,EAAAvpD,OAAA,SAAAqqD,GACA,GAAA3vC,MAAAq8B,QAAAsT,EAAA,UAAAd,GAAAe,WAAAD,EACA,IAAAE,GAAA,GAAA3lD,GAAA4lD,IAQA,OAPAH,GAAAt0C,QAAA,SAAA0gC,GACA,OAAAgU,KAAAhU,GACA8T,EAAAne,IAAAqe,IACAD,EAAAvpD,KAAAspD,EAAArgD,IAAAugD,OAIAD,EAAA3gD,IAAA8/C,GAAAxwC,KAAAqwC,IAAA/iD,OAAA4jD,EAAAxgD,IAAA,SAAA4sC,GACA,MAAA+T,GAAA3gD,IAAA,SAAA4gD,GACA,MAAAd,GAAAlT,EAAAgU,MACStxC,KAAAqwC,MACFrwC,KAAA,OAEPowC,EAAAe,WAAA,SAAAD,GACA,MAAAA,GAAAxgD,IAAA6/C,GAAAvwC,KAAA,OAQAowC,GAEA1iD,GAAA6jD,IAAA7jD,GAAA0iD,IAAA,gBACA1iD,GAAA8jD,IAAA9jD,GAAA0iD,IAAA,gCACA,IAAAryC,IAAAD,GAAAE,GAAAC,GAAAE,GAAAxY,KAAAqG,EAAArG,KAAA,oCAAAsN,GACAsC,WAAAtC,EAAA,IAEAvF,IAAAkQ,MAAA,WACAN,GAAAvR,MAAApG,KAAAkE,YAiCA6D,GAAAkQ,MAAA6zC,MAAA,WACApzC,KACAC,MA0BA5Q,GAAAoL,MAAA,SAAA7R,EAAAqF,GACA,MAAAA,GAAAmL,KAAAqB,MAAA7R,GAAAqF,EAAAmL,KAAA2C,IAAA,GAAA9N,OAAAmL,KAAAqB,MAAA7R,GAEA,IAAAyqD,KAAA,oEAAAhhD,IAAAsO,GACAtR,IAAAyT,aAAA,SAAA/b,EAAAob,GACA,GAAAnU,GAAA,CAOA,QANAjH,QACA,EAAAA,OAAA,IACAob,IAAApb,EAAAsI,GAAAoL,MAAA1T,EAAAuZ,GAAAvZ,EAAAob,KACAnU,EAAA,EAAAoL,KAAA6K,MAAA,MAAA7K,KAAAqH,IAAA1Z,GAAAqS,KAAAsH,MACA1S,EAAAoL,KAAA+C,IAAA,IAAA/C,KAAAiD,IAAA,KAAAjD,KAAA6K,OAAAjW,EAAA,SAEAqlD,GAAA,EAAArlD,EAAA,GAwGA,IAAA6T,IAAA,yEACAW,GAAAnT,GAAAgD,KACAvH,EAAA,SAAAlC,GACA,MAAAA,GAAAwT,SAAA,IAEA5J,EAAA,SAAA5J,GACA,MAAA0qD,QAAAC,aAAA3qD,IAEA2N,EAAA,SAAA3N,GACA,MAAAA,GAAAwT,SAAA,IAEAxT,EAAA,SAAAA,GACA,MAAAA,GAAAwT,SAAA,KAEAmK,EAAA,SAAA3d,GACA,MAAAA,GAAAwT,SAAA,IAAArO,eAEAkN,EAAA,SAAArS,EAAA2X,GACA,MAAA3X,GAAA4qD,YAAAjzC,IAEA9Q,EAAA,SAAA7G,EAAA2X,GACA,MAAA3X,GAAA6qD,cAAAlzC,IAEApI,EAAA,SAAAvP,EAAA2X,GACA,MAAA3X,GAAA8qD,QAAAnzC,IAEAvF,EAAA,SAAApS,EAAA2X,GACA,OAAA3X,EAAAyG,GAAAoL,MAAA7R,EAAA0X,GAAA1X,EAAA2X,KAAAmzC,QAAAt6C,KAAA+C,IAAA,EAAA/C,KAAAiD,IAAA,GAAAiE,GAAA1X,GAAA,SAAA2X,SAMA4H,GAAA9Y,GAAAiQ,QAA4BsE,GAAAxE,IAI5B+D,IAAAhX,WACA6b,QAAA,WACA,MAAA1gB,MAAAgF,EAAAqnD,cAEAvuC,OAAA,WACA,MAAA9d,MAAAgF,EAAAsnD,aAEAlrC,YAAA,WACA,MAAAphB,MAAAgF,EAAAunD,kBAEA5rC,SAAA,WACA,MAAA3gB,MAAAgF,EAAAwnD,eAEAzrC,gBAAA,WACA,MAAA/gB,MAAAgF,EAAAynD,sBAEAzrC,WAAA;AACA,MAAAhhB,MAAAgF,EAAA0nD,iBAEAnsC,SAAA,WACA,MAAAvgB,MAAAgF,EAAA2nD,eAEA1rC,WAAA,WACA,MAAAjhB,MAAAgF,EAAA4nD,iBAEAC,QAAA,WACA,MAAA7sD,MAAAgF,EAAA6nD,WAEArqC,kBAAA,WACA,UAEAsqC,QAAA,WACA,MAAA9sD,MAAAgF,EAAA8nD,WAEAC,QAAA,WACAC,GAAAC,WAAA7mD,MAAApG,KAAAgF,EAAAd,YAEAgpD,OAAA,WACAF,GAAAG,UAAA/mD,MAAApG,KAAAgF,EAAAd,YAEA0Z,YAAA,WACAovC,GAAAI,eAAAhnD,MAAApG,KAAAgF,EAAAd,YAEA8Z,SAAA,WACAgvC,GAAAK,YAAAjnD,MAAApG,KAAAgF,EAAAd,YAEAopD,gBAAA,WACAN,GAAAO,mBAAAnnD,MAAApG,KAAAgF,EAAAd,YAEAspD,WAAA,WACAR,GAAAS,cAAArnD,MAAApG,KAAAgF,EAAAd,YAEAwpD,SAAA,WACAV,GAAAW,YAAAvnD,MAAApG,KAAAgF,EAAAd,YAEA0pD,WAAA,WACAZ,GAAAa,cAAAznD,MAAApG,KAAAgF,EAAAd,YAEA4pD,QAAA,WACAd,GAAAc,QAAA1nD,MAAApG,KAAAgF,EAAAd,YAGA,IAAA8oD,IAAAl1C,KAAAjT,SA6DAgc,IAAAk0B,KAAAh5B,GAAA,SAAAG,GAGA,MAFAA,GAAA2E,GAAAktC,IAAA7xC,GACAA,EAAAwxC,SAAA,KACAxxC,GACG,SAAAA,EAAAG,GACHH,EAAA0B,YAAA1B,EAAAkF,cAAA/E,IACG,SAAAH,GACH,MAAAA,GAAAkF,gBAEAP,GAAAmtC,MAAAntC,GAAAk0B,KAAAt0C,MACAogB,GAAAmtC,MAAAtxC,IAAAmE,GAAAk0B,KAAAr4B,IAAAjc,MACAogB,GAAAktC,IAAAhyC,GAAA,SAAAG,GACA,GAAA6xC,GAAA,GAAAzxC,IAAA,MAEA,OADAyxC,GAAAnwC,YAAA1B,EAAAkF,cAAAlF,EAAAqE,WAAArE,EAAAwE,WACAqtC,GACG,SAAA7xC,EAAAG,GACHH,EAAA6wC,QAAA7wC,EAAAwE,UAAArE,IACG,SAAAH,GACH,MAAAA,GAAAwE,UAAA,IAEAG,GAAAlB,KAAAkB,GAAAktC,IAAAttD,MACAogB,GAAAlB,KAAAjD,IAAAmE,GAAAktC,IAAArxC,IAAAjc,MACAogB,GAAAC,UAAA,SAAA5E,GACA,GAAA64B,GAAAl0B,GAAAk0B,KAAA74B,EACA,OAAApK,MAAA6K,OAAAT,EAAA64B,EAAA,KAAA74B,EAAAsG,oBAAAuyB,EAAAvyB,sBAAA,SAEA,wEAAAvL,QAAA,SAAA82C,EAAArnD,GACAA,EAAA,EAAAA,CACA,IAAAwuC,GAAAr0B,GAAAktC,GAAAhyC,GAAA,SAAAG,GAEA,OADAA,EAAA2E,GAAAktC,IAAA7xC,IAAA6wC,QAAA7wC,EAAAwE,WAAAxE,EAAA4B,SAAApX,GAAA,GACAwV,GACK,SAAAA,EAAAG,GACLH,EAAA6wC,QAAA7wC,EAAAwE,UAAA,EAAA5O,KAAA6K,MAAAN,KACK,SAAAH,GACL,GAAA6xC,GAAAltC,GAAAk0B,KAAA74B,GAAA4B,QACA,OAAAhM,MAAA6K,OAAAkE,GAAAC,UAAA5E,IAAA6xC,EAAArnD,GAAA,OAAAqnD,IAAArnD,IAEAma,IAAAktC,EAAA,KAAA7Y,EAAAz0C,MACAogB,GAAAktC,EAAA,KAAArxC,IAAAw4B,EAAAx4B,IAAAjc,MACAogB,GAAAktC,EAAA,mBAAA7xC,GACA,GAAA6xC,GAAAltC,GAAAk0B,KAAA74B,GAAA4B,QACA,OAAAhM,MAAA6K,OAAAkE,GAAAC,UAAA5E,IAAA6xC,EAAArnD,GAAA,SAGAma,GAAAotC,KAAAptC,GAAAqtC,OACArtC,GAAAstC,MAAAttC,GAAAqtC,OAAAztD,MACAogB,GAAAstC,MAAAzxC,IAAAmE,GAAAqtC,OAAAxxC,IAAAjc,MACAogB,GAAAutC,WAAAvtC,GAAAK,YAyNA,IAAAhE,KACAmxC,IAAA,GACArpD,EAAA,IACAspD,EAAA,KACGhsC,GAAA,UAAAM,GAAA,IAkGH7a,IAAA0R,OAAA,SAAAA,GACA,OACA80C,aAAA/0C,GAAAC,GACA+0C,WAAA3xC,GAAApD,IAGA,IAAAg1C,IAAA1mD,GAAA0R,QACAE,QAAA,IACAE,UAAA,IACAE,UAAA,GACAE,UAAA,QACAoF,SAAA,iBACAnD,KAAA,WACAlE,KAAA,WACAyH,SAAA,WACAE,MAAA,wEACAE,WAAA,2CACAE,QAAA,+GACAE,aAAA,0EAEAlY,IAAA7G,OAAAutD,GAAAF,aACAxmD,GAAA2mD,OAEA5rC,GAAAje,WACAqD,EAAA,EACAgQ,EAAA,EACA9M,IAAA,SAAA3J,GACAshB,GAAAthB,EAAAzB,KAAAkY,EAAAy2C,IACA5rC,GAAA4rC,GAAAzmD,EAAAlI,KAAAkI,EAAAlI,MACAA,KAAAkI,EAAAlI,KAAAkY,GAAAy2C,GAAAz2C,EAA2ClY,KAAAkI,EAAAymD,GAAAz2C,GAE3CsT,MAAA,WACAxrB,KAAAkI,EAAAlI,KAAAkY,EAAA,GAEA40C,QAAA,WACA,MAAA9sD,MAAAkI,GAGA,IAAAymD,IAAA,GAAA7rC,GAKA/a,IAAA2mD,IAAAx9B,OAAA,SAAA5qB,EAAAkB,GACAlB,GAAAsoD,GAAAvrC,eAAA/c,EAAAqC,MACAimD,GAAAtoD,EAAAqC,MAAArC,EAAAkB,GAEA0b,GAAA5c,EAAAkB,GAQA,IAAAonD,KACAC,QAAA,SAAAC,EAAAtnD,GACA0b,GAAA4rC,EAAA3rC,SAAA3b,IAEAunD,kBAAA,SAAAzoD,EAAAkB,GAEA,IADA,GAAAwnD,GAAA1oD,EAAA0oD,SAAAtoD,EAAA,GAAAC,EAAAqoD,EAAA7qD,SACAuC,EAAAC,GAAAuc,GAAA8rC,EAAAtoD,GAAAyc,SAAA3b,KAGA4b,IACA6rC,OAAA,SAAA3oD,EAAAkB,GACAA,EAAAyiB,UAEAilC,MAAA,SAAA5oD,EAAAkB,GACAlB,IAAAid,YACA/b,EAAA0I,MAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA6oD,WAAA,SAAA7oD,EAAAkB,GAEA,IADA,GAAA+b,GAAAjd,EAAAid,YAAA7c,EAAA,GAAAC,EAAA4c,EAAApf,SACAuC,EAAAC,GAAAL,EAAAid,EAAA7c,GAAAc,EAAA0I,MAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA8oD,WAAA,SAAA9oD,EAAAkB,GACA8b,GAAAhd,EAAAid,YAAA/b,EAAA,IAEA6nD,gBAAA,SAAA/oD,EAAAkB,GAEA,IADA,GAAA+b,GAAAjd,EAAAid,YAAA7c,EAAA,GAAAC,EAAA4c,EAAApf,SACAuC,EAAAC,GAAA2c,GAAAC,EAAA7c,GAAAc,EAAA,IAEA8nD,QAAA,SAAAhpD,EAAAkB,GACAoc,GAAAtd,EAAAid,YAAA/b,IAEA+nD,aAAA,SAAAjpD,EAAAkB,GAEA,IADA,GAAA+b,GAAAjd,EAAAid,YAAA7c,EAAA,GAAAC,EAAA4c,EAAApf,SACAuC,EAAAC,GAAAid,GAAAL,EAAA7c,GAAAc,IAEAgoD,mBAAA,SAAAlpD,EAAAkB,GAEA,IADA,GAAAioD,GAAAnpD,EAAAmpD,WAAA/oD,EAAA,GAAAC,EAAA8oD,EAAAtrD,SACAuC,EAAAC,GAAAuc,GAAAusC,EAAA/oD,GAAAc,IAeAO,IAAA2mD,IAAAxc,KAAA,SAAA5rC,GAGA,MAFAopD,IAAA,EACA3nD,GAAA2mD,IAAAx9B,OAAA5qB,EAAAye,IACA2qC,GAEA,IAAAA,IAAA9qC,GAAA,GAAA9B,IACAiC,IACAkF,OAAA,WACAylC,IAAA,EAAA79C,IAEA3B,MAAApJ,EACA4c,UAAA5c,EACA6c,QAAA7c,EACA+c,aAAA,WACAe,GAAA4G,QACAzG,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAAouB,GAAA,EAAAttB,EACA8qC,KAAA,EAAAxd,EAAA,EAAArgC,GAAAqgC,IACAntB,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAA7U,MAAApJ,GAmDAiB,IAAA2mD,IAAAiB,OAAA,WAsBA,QAAAz/C,GAAA+T,EAAAC,GACA0rC,EAAAztD,KAAA1B,GAAA2jB,EAAAH,EAAAuG,EAAAvG,IACAqG,EAAApG,IAAAoG,EAAApG,GACAA,EAAAuG,MAAAvG,GAEA,QAAA6K,GAAA9K,EAAAC,GACA,GAAAjL,GAAA+L,IAAAf,EAAAnQ,GAAAoQ,EAAApQ,IACA,IAAAgU,EAAA,CACA,GAAA+nC,GAAA1qC,GAAA2C,EAAA7O,GAAA62C,GAAAD,EAAA,IAAAA,EAAA,MAAAE,EAAA5qC,GAAA2qC,EAAAD,EACAtqC,IAAAwqC,GACAA,EAAAvqC,GAAAuqC,EACA,IAAA5rC,GAAAF,EAAA+rC,EAAA9nD,EAAAic,EAAA,OAAA8rC,EAAAF,EAAA,GAAAz7C,GAAApM,EAAAwjB,EAAApS,GAAA6K,GAAA,GACA,IAAAuH,GAAAukC,EAAA/nD,EAAA8nD,GAAA9nD,EAAA+b,EAAAgsC,GAAA,CACA,GAAAC,GAAAH,EAAA,GAAAz7C,EACA47C,GAAAzlC,MAAAylC,OACS,IAAAD,KAAA,aAAAvkC,GAAAukC,EAAA/nD,EAAA8nD,GAAA9nD,EAAA+b,EAAAgsC,GAAA,CACT,GAAAC,IAAAH,EAAA,GAAAz7C,EACAgW,GAAA4lC,IAAA5lC,EAAA4lC,OAEA5lC,GAAApG,IAAAoG,EAAApG,GACAA,EAAAuG,MAAAvG,EAEAwH,GACAskC,EAAA/rC,EACA2R,EAAAxR,EAAAH,GAAA2R,EAAAxR,EAAAoG,OAAAvG,GAEA2R,EAAA3R,EAAAuG,GAAAoL,EAAAxR,EAAAoG,KAAApG,EAAAH,GAGAuG,GAAApG,GACAA,EAAAH,IAAAG,EAAAH,GACAA,EAAAuG,MAAAvG,IAEAA,EAAA+rC,EACAp6B,EAAAxR,EAAAH,GAAA2R,EAAAxR,EAAAoG,OAAAvG,GAEA2R,EAAA3R,EAAAuG,GAAAoL,EAAAxR,EAAAoG,KAAApG,EAAAH,OAKA/T,GAAA+T,EAAAC,EAEA4D,GAAA7O,EAAA+2C,EAAA/rC,EAEA,QAAAP,KACA+kB,EAAAv4B,MAAA6e,EAEA,QAAApL,KACAljB,EAAA,GAAA2jB,EAAA3jB,EAAA,GAAA+pB,EACAie,EAAAv4B,QACA4X,EAAA,KAEA,QAAA4K,GAAAzO,EAAAC,GACA,GAAA4D,EAAA,CACA,GAAA3D,GAAAF,EAAA+rC,CACAG,IAAA72C,GAAA6K,GAAA,IAAAA,KAAA,YAAAA,MACOisC,GAAAnsC,EAAAosC,EAAAnsC,CACPa,IAAA7U,MAAA+T,EAAAC,GACA6K,EAAA9K,EAAAC,GAEA,QAAAiF,KACApE,GAAArB,YAEA,QAAA0F,KACAsJ,EAAA09B,EAAAC,GACAtrC,GAAApB,UACArK,GAAA62C,GAAAxqC,KAAAvB,IAAAoG,EAAA,MACA/pB,EAAA,GAAA2jB,EAAA3jB,EAAA,GAAA+pB,EACA1C,EAAA,KAEA,QAAA8N,GAAAxR,EAAAoG,GACA,OAAAA,GAAApG,GAAA,EAAAoG,EAAA,IAAAA,EAEA,QAAA8lC,GAAA/sD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAEA,QAAA+sD,GAAAjvD,EAAAb,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAa,MAAAb,EAAA,GAAAa,EAAAb,EAAA,IAAAA,EAAA,GAAAa,EAnGA,GAAA8iB,GAAAkG,EAAAE,EAAAC,EAAAulC,EAAAI,EAAAC,EAAAvoC,EAAAqoC,EAAAP,EAAAnvD,EACAgoC,GACAv4B,QACAwT,YACAC,UACAE,aAAA,WACA4kB,EAAAv4B,MAAAwiB,EACA+V,EAAA/kB,UAAAyF,EACAsf,EAAA9kB,QAAAyF,EACA+mC,EAAA,EACAprC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACA2kB,EAAAv4B,QACAu4B,EAAA/kB,YACA+kB,EAAA9kB,UACA,EAAAiB,IAAAR,IAAAoG,EAAA,KAAAF,IAAAG,EAAA,KAAsE0lC,EAAAxqC,GAAA8E,EAAA,IAA6B9E,GAAAwqC,IAAA7lC,EAAA,KACnG7pB,EAAA,GAAA2jB,EAAA3jB,EAAA,GAAA+pB,GAmFA,iBAAAskC,GACArkC,EAAAD,IAAApG,EAAAkG,EAAAvR,KACA62C,KACA7nD,GAAA2mD,IAAAx9B,OAAA49B,EAAArmB,EACA,IAAA9hC,GAAAipD,EAAAzrD,MACA,IAAAwC,EAAA,CACAipD,EAAA3nC,KAAAqoC,EACA,QAAA9sD,GAAAkD,EAAA,EAAAnD,EAAAqsD,EAAA,GAAA7X,GAAAx0C,GAAyDoD,EAAAD,IAAOA,EAChElD,EAAAosD,EAAAlpD,GACA6pD,EAAA/sD,EAAA,GAAAD,IAAAgtD,EAAA/sD,EAAA,GAAAD,IACAqyB,EAAAryB,EAAA,GAAAC,EAAA,IAAAoyB,EAAAryB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAoyB,EAAApyB,EAAA,GAAAD,EAAA,IAAAqyB,EAAAryB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAu0C,EAAA51C,KAAAoB,EAAAC,EAIA,QADA2gB,GACA3gB,EADAgtD,IAAAz3C,KACApS,EAAAoxC,EAAA5zC,OAAA,EAAAuC,EAAA,EAAAnD,EAAAw0C,EAAApxC,GAAgEA,GAAAD,EAAQnD,EAAAC,IAAAkD,EACxElD,EAAAu0C,EAAArxC,IACAyd,EAAAyR,EAAAryB,EAAA,GAAAC,EAAA,KAAAgtD,MAAArsC,EAAAC,EAAA5gB,EAAA,GAAAgnB,EAAAjnB,EAAA,IAIA,MADAqsD,GAAAnvD,EAAA,KACA2jB,IAAArL,KAAAuR,IAAAvR,MAAAtV,sBAAA2gB,EAAAkG,IAAAE,EAAAC,QAGA1iB,GAAA2mD,IAAA+B,SAAA,SAAAnqD,GACAwf,GAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAnf,GAAA2mD,IAAAx9B,OAAA5qB,EAAAogB,GACA,IAAAplB,GAAA0lB,GAAAvlB,EAAAwlB,GAAA7f,EAAA8f,GAAA1Z,EAAAlM,IAAAG,IAAA2F,GACA,OAAA41B,IAAAxvB,IACAlM,EAAAilB,GAAA9kB,EAAA+kB,GAAApf,EAAAqf,GACAd,GAAAW,KAAAhlB,EAAAykB,GAAAtkB,EAAAukB,GAAA5e,EAAA6e,IACAzY,EAAAlM,IAAAG,IAAA2F,IACA41B,GAAAxvB,IAAA/J,UAEAqO,KAAAuC,MAAA5S,EAAAH,GAAAgT,GAAAtC,GAAA5K,EAAA0K,KAAAyC,KAAA/G,IAAA8G,IAEA,IAAAwR,IAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GACAR,IACAuD,OAAAnjB,EACAoJ,MAAA0V,GACAlC,UAAAwC,GACAvC,QAAAgD,GACA9C,aAAA,WACA6C,GAAAhD,UAAAkD,IAEA9C,WAAA,WACA4C,GAAAhD,UAAAwC,KAqRAwO,GAAAhM,GAAApB,GAAA+C,GAAAU,KAAAlZ,OAAA,IAsPA2d,GAAA,GACAznB,IAAA2mD,IAAA75B,WAAA,WACA,GAAAxO,GAAAF,EAAA4H,EAAAC,EAAAkD,EAAAtJ,EAAAiN,GACA3D,OAAA,SAAA4D,GAIA,MAHA5D,OAAAqD,OAAA,GACArD,EAAAtJ,EAAAkN,GACA5D,EAAAqD,OAAA,EACArD,GAEA8K,OAAA,SAAAh3B,GACA,MAAAd,WAAAC,QACAyjB,EAAA2G,GAAAlI,GAAArhB,EAAA,MAAAmhB,GAAAnhB,EAAA,MAAA+oB,GAAA/oB,EAAA,MAAAgpB,GAAAhpB,EAAA,OACAksB,MAAAqD,OAAA,EAAArD,EAAA,MACA2D,KAHAxO,EAAAF,IAAA4H,EAAAC,KAMA,OAAA6G,GAAAmH,SAAA,mBA4JAj0B,GAAA2mD,IAAAgC,eAAA,WACA,MAAA/gC,IAAAI,MACG4gC,IAAA5gC,GACHhoB,GAAA2mD,IAAAkC,OAAA,WACA,MAAA7oD,IAAA2mD,IAAAgC,iBAAA5nC,QAAA,OAAAuL,SAAA,UAAAvE,WAAA,YAAAxvB,MAAA,OAEAyH,GAAA2mD,IAAAmC,UAAA,WASA,QAAAA,GAAAttC,GACA,GAAAjiB,GAAAiiB,EAAA,GAAA9hB,EAAA8hB,EAAA,EAGA,OAFArT,GAAA,KACA4gD,EAAAxvD,EAAAG,GAAAyO,IAAA6gD,EAAAzvD,EAAAG,GAAAyO,IAAA8gD,EAAA1vD,EAAAG,GACAyO,EAZA,GAGAA,GAIK4gD,EAAAC,EAAAC,EAPLC,EAAAlpD,GAAA2mD,IAAAkC,SACAM,EAAAnpD,GAAA2mD,IAAAgC,iBAAA5nC,QAAA,QAAAuL,QAAA,UAAAvE,WAAA,QACAqhC,EAAAppD,GAAA2mD,IAAAgC,iBAAA5nC,QAAA,QAAAuL,QAAA,UAAAvE,WAAA,OACAshC,GACAlhD,MAAA,SAAA5O,EAAAG,GACAyO,GAAA5O,EAAAG,IAsEA,OA7DAovD,GAAAxpC,OAAA,SAAA9D,GACA,GAAA/e,GAAAysD,EAAA3wD,QAAA4X,EAAA+4C,EAAAl8B,YAAAzzB,GAAAiiB,EAAA,GAAArL,EAAA,IAAA1T,EAAA/C,GAAA8hB,EAAA,GAAArL,EAAA,IAAA1T,CACA,QAAA/C,GAAA,UAAAA,GAAAH,IAAA,YAAAA,EAAA4vD,EAAAzvD,GAAA,WAAAA,GAAAH,IAAA,YAAAA,EAAA6vD,EAAAF,GAAA5pC,OAAA9D,IAEAstC,EAAA3/B,OAAA,SAAAA,GACA,GAAAmgC,GAAAJ,EAAA//B,UAAAogC,EAAAJ,EAAAhgC,UAAAqgC,EAAAJ,EAAAjgC,SACA,QACAhhB,MAAA,SAAA5O,EAAAG,GACA4vD,EAAAnhD,MAAA5O,EAAAG,GACA6vD,EAAAphD,MAAA5O,EAAAG,GACA8vD,EAAArhD,MAAA5O,EAAAG,IAEAwoB,OAAA,WACAonC,EAAApnC,SACAqnC,EAAArnC,SACAsnC,EAAAtnC,UAEAvG,UAAA,WACA2tC,EAAA3tC,YACA4tC,EAAA5tC,YACA6tC,EAAA7tC,aAEAC,QAAA,WACA0tC,EAAA1tC,UACA2tC,EAAA3tC,UACA4tC,EAAA5tC,WAEAE,aAAA,WACAwtC,EAAAxtC,eACAytC,EAAAztC,eACA0tC,EAAA1tC,gBAEAC,WAAA,WACAutC,EAAAvtC,aACAwtC,EAAAxtC,aACAytC,EAAAztC,gBAIA+sC,EAAAh2C,UAAA,SAAA7V,GACA,MAAAd,WAAAC,QACA8sD,EAAAp2C,UAAA7V,GACAksD,EAAAr2C,UAAA7V,GACAmsD,EAAAt2C,UAAA7V,GACA6rD,GAJAI,EAAAp2C,aAMAg2C,EAAAvwD,MAAA,SAAA0E,GACA,MAAAd,WAAAC,QACA8sD,EAAA3wD,MAAA0E,GACAksD,EAAA5wD,MAAA,IAAA0E,GACAmsD,EAAA7wD,MAAA0E,GACA6rD,EAAA97B,UAAAk8B,EAAAl8B,cAJAk8B,EAAA3wD,SAMAuwD,EAAA97B,UAAA,SAAA/vB,GACA,IAAAd,UAAAC,OAAA,MAAA8sD,GAAAl8B,WACA,IAAAvwB,GAAAysD,EAAA3wD,QAAAgB,GAAA0D,EAAA,GAAAvD,GAAAuD,EAAA,EAIA,OAHA8rD,GAAAG,EAAAl8B,UAAA/vB,GAAA6vB,aAAAvzB,EAAA,KAAAkD,EAAA/C,EAAA,KAAA+C,IAAAlD,EAAA,KAAAkD,EAAA/C,EAAA,KAAA+C,KAAA0sB,OAAAkgC,GAAAlhD,MACA6gD,EAAAG,EAAAn8B,WAAAzzB,EAAA,KAAAkD,EAAA/C,EAAA,KAAA+C,IAAAqwB,aAAAvzB,EAAA,KAAAkD,EAAAmhB,GAAAlkB,EAAA,IAAA+C,EAAAmhB,KAAArkB,EAAA,KAAAkD,EAAAmhB,GAAAlkB,EAAA,KAAA+C,EAAAmhB,MAAAuL,OAAAkgC,GAAAlhD,MACA8gD,EAAAG,EAAAp8B,WAAAzzB,EAAA,KAAAkD,EAAA/C,EAAA,KAAA+C,IAAAqwB,aAAAvzB,EAAA,KAAAkD,EAAAmhB,GAAAlkB,EAAA,KAAA+C,EAAAmhB,KAAArkB,EAAA,KAAAkD,EAAAmhB,GAAAlkB,EAAA,KAAA+C,EAAAmhB,MAAAuL,OAAAkgC,GAAAlhD,MACA2gD,GAEAA,EAAAvwD,MAAA,MAEA,IAAAkxD,IAAAlhC,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACAvgB,MAAApJ,EACA4c,UAAA5c,EACA6c,QAAA7c,EACA+c,aAAA,WACAyM,GAAA,EACAG,GAAA/M,UAAA2M,IAEAvM,WAAA,WACA2M,GAAA/M,UAAA+M,GAAA9M,QAAA8M,GAAAvgB,MAAApJ,EACA0qD,IAAAl4C,GAAAgX,GAAA,KAkBAmhC,IACAvhD,MAAAwgB,GACAhN,UAAA5c,EACA6c,QAAA7c,EACA+c,aAAA/c,EACAgd,WAAAhd,GAwDA0qB,IACAthB,MAAAohB,GACA5N,UAAA6N,GACA5N,QAAA8N,GACA5N,aAAA,WACA2N,GAAA9N,UAAAgO,IAEA5N,WAAA,WACA0N,GAAAthB,MAAAohB,GACAE,GAAA9N,UAAA6N,GACAC,GAAA7N,QAAA8N,IAoKA1pB,IAAA2mD,IAAAne,KAAA,WAEA,QAAAA,GAAAjqC,GAMA,MALAA,KACA,kBAAA+qB,IAAAqgC,EAAArgC,eAAAjrB,MAAApG,KAAAkE,YACAytD,KAAAp9B,QAAAo9B,EAAAC,EAAAF,IACA3pD,GAAA2mD,IAAAx9B,OAAA5qB,EAAAqrD,IAEAD,EAAA37C,SAiCA,QAAAyV,KAEA,MADAmmC,GAAA,KACAphB,EA1CA,GAAAzc,GAAAlC,EAAAggC,EAAAF,EAAAC,EAAAtgC,EAAA,GA4CA,OAnCAkf,GAAA2B,KAAA,SAAA5rC,GAGA,MAFAkrD,IAAA,EACAzpD,GAAA2mD,IAAAx9B,OAAA5qB,EAAAsrD,EAAAnhC,KACA+gC,IAEAjhB,EAAAkgB,SAAA,SAAAnqD,GAGA,MAFAyf,IAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAnf,GAAA2mD,IAAAx9B,OAAA5qB,EAAAsrD,EAAApgC,KACAtK,IAAAF,GAAAE,GAAAD,GAAAC,IAAAT,IAAAF,GAAAE,GAAAD,GAAAC,IAAAR,IAAAF,GAAAE,GAAAD,GAAAC,KAAAxiB,UAEA8sC,EAAAof,OAAA,SAAArpD,GAGA,MAFAsqB,IAAAE,KAAAH,GAAAE,GAAA9X,KACAhR,GAAA2mD,IAAAx9B,OAAA5qB,EAAAsrD,EAAAH,OACA9gC,GAAAE,KAAAD,GAAAE,MAEAyf,EAAAzc,WAAA,SAAA9uB,GACA,MAAAd,WAAAC,QACAytD,GAAA99B,EAAA9uB,KAAAksB,QAAAwC,GAAA1uB,GAAAe,EACAylB,KAFAsI,GAIAyc,EAAA3e,QAAA,SAAA5sB,GACA,MAAAd,WAAAC,QACAutD,EAAA,OAAA9/B,EAAA5sB,GAAA,GAAA+rB,IAAA,GAAAY,IAAA3sB,GACA,kBAAAqsB,IAAAqgC,EAAArgC,eACA7F,KAHAoG,GAKA2e,EAAAlf,YAAA,SAAArsB,GACA,MAAAd,WAAAC,QACAktB,EAAA,kBAAArsB,MAAA0sD,EAAArgC,aAAArsB,OACAurC,GAFAlf,GAQAkf,EAAAzc,WAAA/rB,GAAA2mD,IAAAmC,aAAAj/B,QAAA,OAUA7pB,GAAA2mD,IAAA9pB,UAAA,SAAA9kC,GACA,OACAoxB,OAAA,SAAAA,GACA,GAAA0T,GAAA,GAAAhR,IAAA1C,EACA,QAAA1sB,KAAA1E,GAAA8kC,EAAApgC,GAAA1E,EAAA0E,EACA,OAAAogC,MAOAhR,GAAA/uB,WACAqL,MAAA,SAAA5O,EAAAG,GACAzB,KAAAkxB,OAAAhhB,MAAA5O,EAAAG,IAEAwoB,OAAA,WACAjqB,KAAAkxB,OAAAjH,UAEAvG,UAAA,WACA1jB,KAAAkxB,OAAAxN,aAEAC,QAAA,WACA3jB,KAAAkxB,OAAAvN,WAEAE,aAAA,WACA7jB,KAAAkxB,OAAArN,gBAEAC,WAAA,WACA9jB,KAAAkxB,OAAApN,eAuBA/b,GAAA2mD,IAAA56B,WAAAD,GACA9rB,GAAA2mD,IAAAmD,kBAAAhiC,IAsFA9nB,GAAA2mD,IAAAoD,gBAAA,WACA,MAAAj+B,IAAAmB,MACG27B,IAAA37B,GAAA3N,OAAA2N,GACHjtB,GAAA2mD,IAAAr5B,SAAA,SAAAvM,GAEA,QAAAkH,GAAAzM,GAEA,MADAA,GAAAuF,EAAAvF,EAAA,GAAAzP,GAAAyP,EAAA,GAAAzP,IACAyP,EAAA,IAAAjP,GAAAiP,EAAA,IAAAjP,GAAAiP,EAMA,MATAuF,GAAAoL,GAAApL,EAAA,OAAAhV,GAAAgV,EAAA,GAAAhV,GAAAgV,EAAA3kB,OAAA,EAAA2kB,EAAA,GAAAhV,GAAA,GAKAkc,EAAA3I,OAAA,SAAA9D,GAEA,MADAA,GAAAuF,EAAAzB,OAAA9D,EAAA,GAAAzP,GAAAyP,EAAA,GAAAzP,IACAyP,EAAA,IAAAjP,GAAAiP,EAAA,IAAAjP,GAAAiP,GAEAyM,GAKAiF,GAAA5N,OAAA2N,GA0BAjtB,GAAA2mD,IAAAx1B,OAAA,WAEA,QAAAA,KACA,GAAA7E,GAAA,kBAAA4oB,KAAA72C,MAAApG,KAAAkE,WAAA+4C,EAAAn0B,EAAAoL,IAAAG,EAAA,GAAAvgB,IAAAugB,EAAA,GAAAvgB,GAAA,GAAAuT,OAAA4B,IAOA,OANAvB,GAAA,aACAxX,MAAA,SAAA5O,EAAAG,GACAwnB,EAAA9mB,KAAAb,EAAAwnB,EAAAxnB,EAAAG,IACAH,EAAA,IAAAgT,GAAAhT,EAAA,IAAAgT,OAIA3L,KAAA,UACA4a,aAAA0F,IAXA,GAAA2M,GAAAlO,EAAAu1B,GAAA,KAAApiC,EAAA,CA6BA,OAfAqe,GAAA+jB,OAAA,SAAA37C,GACA,MAAA4C,WAAAC,QACA84C,EAAA37C,EACA43B,GAFA+jB,GAIA/jB,EAAAtD,MAAA,SAAAt0B,GACA,MAAA4C,WAAAC,QACAujB,EAAAmG,IAAA+H,GAAAt0B,GAAAwS,GAAA+G,EAAA/G,IACAolB,GAFAtD,GAIAsD,EAAAre,UAAA,SAAA7V,GACA,MAAAd,WAAAC,QACAujB,EAAAmG,GAAA+H,EAAA9hB,IAAA+G,GAAA7V,GAAA8O,IACAolB,GAFAre,GAIAqe,EAAAtD,MAAA,KA0BA7tB,GAAA2mD,IAAA/3B,SAAA,SAAApzB,EAAAC,GACA,GAAA0U,GAAA65C,GAAAvuD,EAAA,GAAAD,EAAA,IAAAuQ,GAAAwW,EAAA/mB,EAAA,GAAAuQ,GAAA2W,EAAAjnB,EAAA,GAAAsQ,GAAAk+C,EAAAlgD,KAAAU,IAAAu/C,GAAAl7B,EAAA/kB,KAAA+B,IAAAk+C,GAAAttC,EAAA3S,KAAAU,IAAA8X,GAAA3F,EAAA7S,KAAA+B,IAAAyW,GAAA2nC,EAAAngD,KAAAU,IAAAiY,GAAAG,EAAA9Y,KAAA+B,IAAA4W,EACA,OAAA3Y,MAAAuC,MAAAvC,KAAAyC,MAAA2D,EAAA0S,EAAAonC,GAAA95C,KAAAyM,EAAAstC,EAAAxtC,EAAAmG,EAAAiM,GAAA3e,GAAAuM,EAAAwtC,EAAAttC,EAAAiG,EAAAiM,IAEA9uB,GAAA2mD,IAAAwD,UAAA,WAEA,QAAAA,KACA,OACAvpD,KAAA,kBACA4a,YAAA4G,KAGA,QAAAA,KACA,MAAApiB,IAAAtH,MAAAqR,KAAAoH,KAAAi5C,EAAAC,KAAAC,EAAAD,GAAArnD,IAAAkU,GAAAtX,OAAAI,GAAAtH,MAAAqR,KAAAoH,KAAAo5C,EAAAC,KAAAC,EAAAD,GAAAxnD,IAAAsW,IAAA1Z,OAAAI,GAAAtH,MAAAqR,KAAAoH,KAAAmN,EAAAgI,KAAAN,EAAAM,GAAAvf,OAAA,SAAAxN,GACA,MAAAgY,IAAAhY,EAAA8wD,GAAAzsC,KACO5a,IAAAzJ,IAAAqG,OAAAI,GAAAtH,MAAAqR,KAAAoH,KAAAiN,EAAAmI,KAAAN,EAAAM,GAAAxf,OAAA,SAAArN,GACP,MAAA6X,IAAA7X,EAAA8wD,GAAA5sC,KACO5a,IAAAtJ,IAZP,GAAAssB,GAAA1H,EAAAgsC,EAAAF,EAAAnkC,EAAA7H,EAAAqsC,EAAAF,EAAAhxD,EAAAG,EAAAwd,EAAAoC,EAAAgN,EAAA,GAAAC,EAAAD,EAAA+jC,EAAA,GAAAG,EAAA,IAAA13C,EAAA,GAuEA,OAzDAq3C,GAAA/nC,MAAA,WACA,MAAAA,KAAApf,IAAA,SAAAwY,GACA,OACA5a,KAAA,aACA4a,kBAIA2uC,EAAAO,QAAA,WACA,OACA9pD,KAAA,UACA4a,aAAAtE,EAAAkzC,GAAAxqD,OAAA0Z,EAAAmxC,GAAAltD,MAAA,GAAA2Z,EAAAozC,GAAAj4C,UAAA9U,MAAA,GAAA+b,EAAAixC,GAAAl4C,UAAA9U,MAAA,OAGA4sD,EAAAl2B,OAAA,SAAAh3B,GACA,MAAAd,WAAAC,OACA+tD,EAAAQ,YAAA1tD,GAAA2tD,YAAA3tD,GADAktD,EAAAS,eAGAT,EAAAQ,YAAA,SAAA1tD,GACA,MAAAd,WAAAC,QACAguD,GAAAntD,EAAA,MAAAqtD,GAAArtD,EAAA,MACAstD,GAAAttD,EAAA,MAAAwtD,GAAAxtD,EAAA,MACAmtD,EAAAE,IAAArtD,EAAAmtD,IAAAE,IAAArtD,GACAstD,EAAAE,IAAAxtD,EAAAstD,IAAAE,IAAAxtD,GACAktD,EAAAr3C,gBALAs3C,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAA3tD,GACA,MAAAd,WAAAC,QACAkiB,GAAArhB,EAAA,MAAA+oB,GAAA/oB,EAAA,MACAmhB,GAAAnhB,EAAA,MAAAgpB,GAAAhpB,EAAA,MACAqhB,EAAA0H,IAAA/oB,EAAAqhB,IAAA0H,IAAA/oB,GACAmhB,EAAA6H,IAAAhpB,EAAAmhB,IAAA6H,IAAAhpB,GACAktD,EAAAr3C,gBALAwL,EAAAF,IAAA4H,EAAAC,KAOAkkC,EAAAl2C,KAAA,SAAAhX,GACA,MAAAd,WAAAC,OACA+tD,EAAAU,UAAA5tD,GAAA6tD,UAAA7tD,GADAktD,EAAAW,aAGAX,EAAAU,UAAA,SAAA5tD,GACA,MAAAd,WAAAC,QACAiuD,GAAAptD,EAAA,GAAAutD,GAAAvtD,EAAA,GACAktD,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAA7tD,GACA,MAAAd,WAAAC,QACAkqB,GAAArpB,EAAA,GAAAspB,GAAAtpB,EAAA,GACAktD,IAFA7jC,EAAAC,IAIA4jC,EAAAr3C,UAAA,SAAA7V,GACA,MAAAd,WAAAC,QACA0W,GAAA7V,EACA1D,EAAAw0B,GAAA3P,EAAA6H,EAAA,IACAvsB,EAAAs0B,GAAA1P,EAAA0H,EAAAlT,GACAoE,EAAA6W,GAAAw8B,EAAAE,EAAA,IACAnxC,EAAA0U,GAAAo8B,EAAAE,EAAAx3C,GACAq3C,GANAr3C,GAQAq3C,EAAAQ,cAAA,SAAA/sC,KAAA,OAAAA,MAAAgtC,cAAA,SAAAhtC,KAAA,OAAAA,OAwBA5d,GAAA2mD,IAAAoE,SAAA,WAEA,QAAAA,KACA,OACAnqD,KAAA,aACA4a,aAAAwvC,GAAA7sD,EAAAE,MAAApG,KAAAkE,WAAA8uD,GAAA/sD,EAAAG,MAAApG,KAAAkE,aAJA,GAAA6uD,GAAAC,EAAA9sD,EAAA8vB,GAAA/vB,EAAAgwB,EAuBA,OAhBA68B,GAAAn8B,SAAA,WACA,MAAA5uB,IAAA2mD,IAAA/3B,SAAAo8B,GAAA7sD,EAAAE,MAAApG,KAAAkE,WAAA8uD,GAAA/sD,EAAAG,MAAApG,KAAAkE,aAEA4uD,EAAA5sD,OAAA,SAAAlB,GACA,MAAAd,WAAAC,QACA+B,EAAAlB,EAAA+tD,EAAA,kBAAA/tD,GAAA,KAAAA,EACA8tD,GAFA5sD,GAIA4sD,EAAA7sD,OAAA,SAAAjB,GACA,MAAAd,WAAAC,QACA8B,EAAAjB,EAAAguD,EAAA,kBAAAhuD,GAAA,KAAAA,EACA8tD,GAFA7sD,GAIA6sD,EAAAj4C,UAAA,WACA,MAAA3W,WAAAC,OAAA2uD,EAAA,GAEAA,GAEA/qD,GAAA2mD,IAAAhnC,YAAA,SAAAxhB,EAAAD,GACA,MAAAiwB,IAAAhwB,EAAA,GAAA4N,GAAA5N,EAAA,GAAA4N,GAAA7N,EAAA,GAAA6N,GAAA7N,EAAA,GAAA6N,KAaA/L,GAAA2mD,IAAAvqD,OAAA,SAAAmC,GAGA,MAFAwwB,IAAA,EACA/uB,GAAA2mD,IAAAx9B,OAAA5qB,EAAAywB,IACAD,GAEA,IAAAA,IACAC,IACA9M,OAAAnjB,EACAoJ,MAAApJ,EACA4c,UAAAkT,GACAjT,QAAA7c,EACA+c,aAAA/c,EACAgd,WAAAhd,GA4BAmsD,GAAAj8B,GAAA,SAAAk8B,GACA,MAAAphD,MAAAyC,KAAA,KAAA2+C,KACG,SAAAjjC,GACH,SAAAne,KAAAI,KAAA+d,EAAA,MAEAloB,GAAA2mD,IAAAyE,mBAAA,WACA,MAAAt/B,IAAAo/B,MACGtC,IAAAsC,EACH,IAAAG,IAAAp8B,GAAA,SAAAk8B,GACA,GAAAhoD,GAAA4G,KAAAC,KAAAmhD,EACA,OAAAhoD,MAAA4G,KAAAU,IAAAtH,IACGnF,IACHgC,GAAA2mD,IAAA2E,qBAAA,WACA,MAAAx/B,IAAAu/B,MACGzC,IAAAyC,IAqBHrrD,GAAA2mD,IAAA4E,eAAA,WACA,MAAA3jC,IAAA0H,MACGs5B,IAAAt5B,IAcHtvB,GAAA2mD,IAAA6E,iBAAA,WACA,MAAA5jC,IAAA8H,MACGk5B,IAAAl5B,EACH,IAAA+7B,IAAAx8B,GAAA,SAAAk8B,GACA,SAAAA,GACGphD,KAAAgZ,OACH/iB,GAAA2mD,IAAA+E,SAAA,WACA,MAAA5/B,IAAA2/B,MACG7C,IAAA6C,GAIHh8B,GAAAnQ,OAAA,SAAA/lB,EAAAG,GACA,OAAAH,EAAA,EAAAwQ,KAAAgZ,KAAAhZ,KAAAM,IAAA3Q,IAAAwQ,MA0BAlK,GAAA2mD,IAAAgF,SAAA,WACA,MAAA/7B,IAAAH,MACGm5B,IAAAn5B,EACH,IAAAm8B,IAAA38B,GAAA,WACA,UACGllB,KAAAI,OACHnK,GAAA2mD,IAAAkF,aAAA,WACA,MAAA//B,IAAA8/B,MACGhD,IAAAgD,EACH,IAAAE,IAAA78B,GAAA,SAAAk8B,GACA,YAAAA,IACG,SAAAjjC,GACH,SAAAne,KAAAgZ,KAAAmF,MAEAloB,GAAA2mD,IAAAoF,cAAA,WACA,MAAAjgC,IAAAggC,MACGlD,IAAAkD,GAIHh8B,GAAAxQ,OAAA,SAAA/lB,EAAAG,GACA,QAAAA,EAAA,EAAAqQ,KAAAgZ,KAAAhZ,KAAAM,IAAA9Q,IAAA2Q,MAEAlK,GAAA2mD,IAAAqF,mBAAA,WACA,GAAAjgC,GAAA6D,GAAAE,IAAAxD,EAAAP,EAAAO,OAAAvL,EAAAgL,EAAAhL,MAQA,OAPAgL,GAAAO,OAAA,SAAArvB,GACA,MAAAA,GAAAqvB,IAAArvB,EAAA,GAAAA,EAAA,MAAAA,EAAAqvB,KAAArvB,EAAA,IAAAA,EAAA,MAEA8uB,EAAAhL,OAAA,SAAA9jB,GACA,MAAAA,GAAA8jB,GAAA9jB,EAAA,GAAAA,EAAA,GAAAA,EAAAb,OAAA,EAAAa,EAAA,YAAAA,EAAA8jB,KACA9jB,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAEA8jB,GAAA,WACG6nC,IAAA94B,GACH9vB,GAAAisD,QAOAjsD,GAAAisD,KAAA/7B,KAAA,SAAAg8B,GAGA,QAAAh8B,GAAAr4B,GACA,GAAAA,EAAAuE,OAAA,UACA,IAAAuC,GAAAs3B,EAAAxoB,GAAAlU,GAAA28B,EAAAzoB,GAAA/T,GAAAkF,EAAA/G,EAAAuE,OAAAikB,KAAA8rC,IACA,KAAAxtD,EAAA,EAAiBC,EAAAD,EAAOA,IACxB0hB,EAAAjmB,OAAA67B,EAAAh8B,KAAAhC,KAAAJ,EAAA8G,OAAAu3B,EAAAj8B,KAAAhC,KAAAJ,EAAA8G,SAGA,KADA0hB,EAAAH,KAAAkQ,IACAzxB,EAAA,EAAiBC,EAAAD,EAAOA,IAAAwtD,EAAA/xD,MAAAimB,EAAA1hB,GAAA,IAAA0hB,EAAA1hB,GAAA,IACxB,IAAAytD,GAAAn8B,GAAA5P,GAAAgsC,EAAAp8B,GAAAk8B,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,IAAAjwD,OAAA,KAAAgwD,IAAAhwD,OAAA,GAAAslB,IACA,KAAA/iB,EAAAytD,EAAAhwD,OAAA,EAAgCuC,GAAA,IAAQA,EAAA+iB,EAAAtnB,KAAAvC,EAAAwoB,EAAA+rC,EAAAztD,IAAA,IACxC,KAAAA,GAAA2tD,EAAyB3tD,EAAA0tD,EAAAjwD,OAAAmwD,IAA8B5tD,EAAA+iB,EAAAtnB,KAAAvC,EAAAwoB,EAAAgsC,EAAA1tD,IAAA,IACvD,OAAA+iB,GAdA,GAAAnoB,GAAAw2B,GAAAr2B,EAAAs2B,EACA,OAAA7zB,WAAAC,OAAA8zB,EAAAg8B,IAeAh8B,EAAA32B,EAAA,SAAA0D,GACA,MAAAd,WAAAC,QAAA7C,EAAA0D,EAAAizB,GAAA32B,GAEA22B,EAAAx2B,EAAA,SAAAuD,GACA,MAAAd,WAAAC,QAAA1C,EAAAuD,EAAAizB,GAAAx2B,GAEAw2B,IAaAlwB,GAAAisD,KAAAvqC,QAAA,SAAAlG,GAEA,MADAza,IAAAya,EAAAgxC,IACAhxC,EAEA,IAAAgxC,IAAAxsD,GAAAisD,KAAAvqC,QAAA5kB,YACA0vD,IAAAriB,KAAA,WAEA,IADA,GAAA3uC,GAAAmD,EAAA,GAAAC,EAAA3G,KAAAmE,OAAAX,EAAAxD,KAAA2G,EAAA,GAAAurC,EAAA,IACAxrC,EAAAC,GACApD,EAAAC,EACAA,EAAAxD,KAAA0G,GACAwrC,GAAA3uC,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAEA,UAAA0uC,GAEAqiB,GAAA9D,SAAA,SAAAjsD,GACA,GAAAjB,GAAA2H,EAAAxE,EAAA,GAAAC,EAAA3G,KAAAmE,OAAA7C,EAAA,EAAAG,EAAA,EAAA+B,EAAAxD,KAAA2G,EAAA,EAEA,KADAzC,UAAAC,SAAAK,EAAA,MAAAxE,KAAAkyC,WACAxrC,EAAAC,GACApD,EAAAC,EACAA,EAAAxD,KAAA0G,GACAwE,EAAA3H,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAjC,IAAAiC,EAAA,GAAAC,EAAA,IAAA0H,EACAzJ,IAAA8B,EAAA,GAAAC,EAAA,IAAA0H,CAEA,QAAA5J,EAAAkD,EAAA/C,EAAA+C,IAEA+vD,GAAA3sC,KAAA,SAAAD,GAEA,IADA,GAAA8jB,GAAAl+B,EAAAC,EAAAhK,EAAA0H,EAAA3J,EAAAiiB,EAAAqV,GAAAlR,GAAAjhB,EAAA,GAAAC,EAAA3G,KAAAmE,OAAA00B,GAAA74B,MAAAuD,EAAAvD,KAAA2G,EAAA,KACAD,EAAAC,GAAA,CAMA,IALA8kC,EAAA9jB,EAAAriB,QACAqiB,EAAAxjB,OAAA,EACAX,EAAAxD,KAAA0G,GACAwE,EAAAugC,GAAAj+B,EAAAi+B,EAAAtnC,OAAAqf,GAAA,GACAjW,EAAA,KACAA,EAAAC,GACAjM,EAAAkqC,EAAAl+B,GACA6qB,GAAA72B,EAAAgC,EAAAC,IACA40B,GAAAltB,EAAA3H,EAAAC,IACAmkB,EAAAxlB,KAAAk2B,GAAAntB,EAAA3J,EAAAgC,EAAAC,IAEAmkB,EAAAxlB,KAAAZ,IACS62B,GAAAltB,EAAA3H,EAAAC,IACTmkB,EAAAxlB,KAAAk2B,GAAAntB,EAAA3J,EAAAgC,EAAAC,IAEA0H,EAAA3J,CAEAiiB,IAAAmE,EAAAxlB,KAAAwlB,EAAA,IACApkB,EAAAC,EAEA,MAAAmkB,GAaA,IAAA2V,IAAAf,GAAA/C,GAAA4D,GAAAD,GAAA9D,MAAA6D,KAgIArB,IAAAh3B,UAAA43B,QAAA,WAEA,IADA,GAAAzD,GAAAmD,EAAAn8B,KAAA87B,MAAAI,EAAAC,EAAAh4B,OACA+3B,KACAlD,EAAAmD,EAAAD,GAAAlD,KACAA,EAAAx1B,GAAAw1B,EAAAz1B,GAAA44B,EAAAO,OAAAR,EAAA,EAGA,OADAC,GAAAlU,KAAA4U,IACAV,EAAAh4B,QA4MAw4B,GAAA93B,WACAwjB,MAAA,WACA,MAAAroB,MAAAg5B,KAAA7xB,IAAAnH,KAAAi5B,KAAAj5B,KAAAg5B,KAAAz1B,EAAAvD,KAAAg5B,KAAAx1B,GAEA64B,IAAA,WACA,MAAAr8B,MAAAg5B,KAAA7xB,IAAAnH,KAAAi5B,KAAAj5B,KAAAg5B,KAAAx1B,EAAAxD,KAAAg5B,KAAAz1B,IASA46B,GAAAt5B,WACAm2B,OAAA,SAAAtf,EAAA1Y,GACA,GAAA4J,GAAA4nD,EAAAC,CACA,IAAA/4C,EAAA,CAKA,GAJA1Y,EAAA42B,EAAAle,EACA1Y,EAAA82B,EAAApe,EAAAoe,EACApe,EAAAoe,IAAApe,EAAAoe,EAAAF,EAAA52B,GACA0Y,EAAAoe,EAAA92B,EACA0Y,EAAAof,EAAA,CAEA,IADApf,IAAAof,EACApf,EAAA8B,GAAA9B,IAAA8B,CACA9B,GAAA8B,EAAAxa,MAEA0Y,GAAAof,EAAA93B,CAEA4J,GAAA8O,MACO1b,MAAAgF,GACP0W,EAAA6iB,GAAAv+B,KAAAgF,GACAhC,EAAA42B,EAAA,KACA52B,EAAA82B,EAAApe,EACAA,EAAAke,EAAAle,EAAA8B,EAAAxa,EACA4J,EAAA8O,IAEA1Y,EAAA42B,EAAA52B,EAAA82B,EAAA,KACA95B,KAAAgF,EAAAhC,EACA4J,EAAA,KAMA,KAJA5J,EAAAwa,EAAAxa,EAAA83B,EAAA,KACA93B,EAAA+a,EAAAnR,EACA5J,EAAAktB,GAAA,EACAxU,EAAA1Y,EACA4J,KAAAsjB,GACAskC,EAAA5nD,EAAAmR,EACAnR,IAAA4nD,EAAAh3C,GACAi3C,EAAAD,EAAA15B,EACA25B,KAAAvkC,GACAtjB,EAAAsjB,EAAAukC,EAAAvkC,GAAA,EACAskC,EAAAtkC,GAAA,EACAxU,EAAA84C,IAEA94C,IAAA9O,EAAAkuB,IACAsD,GAAAp+B,KAAA4M,GACA8O,EAAA9O,EACAA,EAAA8O,EAAAqC,GAEAnR,EAAAsjB,GAAA,EACAskC,EAAAtkC,GAAA,EACAoO,GAAAt+B,KAAAw0D,MAGAC,EAAAD,EAAAh3C,EACAi3C,KAAAvkC,GACAtjB,EAAAsjB,EAAAukC,EAAAvkC,GAAA,EACAskC,EAAAtkC,GAAA,EACAxU,EAAA84C,IAEA94C,IAAA9O,EAAA4Q,IACA8gB,GAAAt+B,KAAA4M,GACA8O,EAAA9O,EACAA,EAAA8O,EAAAqC,GAEAnR,EAAAsjB,GAAA,EACAskC,EAAAtkC,GAAA,EACAkO,GAAAp+B,KAAAw0D,KAGA5nD,EAAA8O,EAAAqC,CAEA/d,MAAAgF,EAAAkrB,GAAA,GAEAtoB,OAAA,SAAA5E,GACAA,EAAA82B,IAAA92B,EAAA82B,EAAAF,EAAA52B,EAAA42B,GACA52B,EAAA42B,IAAA52B,EAAA42B,EAAAE,EAAA92B,EAAA82B,GACA92B,EAAA82B,EAAA92B,EAAA42B,EAAA,IACA,IAAA86B,GAAA76B,EAAAgvB,EAAAj8C,EAAA5J,EAAA+a,EAAAha,EAAAf,EAAAwa,EAAAnZ,EAAArB,EAAA83B,CA6BA,IA5B4DjB,EAA5D91B,EAA8BM,EAA8Bk6B,GAAAl6B,GAA9BN,EAA9BM,EACAuI,EACAA,EAAA4Q,IAAAxa,EAAA4J,EAAA4Q,EAAAqc,EAA+CjtB,EAAAkuB,EAAAjB,EAE/C75B,KAAAgF,EAAA60B,EAEA91B,GAAAM,GACAwkD,EAAAhvB,EAAA3J,EACA2J,EAAA3J,EAAAltB,EAAAktB,EACA2J,EAAArc,EAAAzZ,EACAA,EAAAga,EAAA8b,EACAA,IAAAx1B,GACAuI,EAAAitB,EAAA9b,EACA8b,EAAA9b,EAAA/a,EAAA+a,EACA/a,EAAA62B,EAAAiB,EACAluB,EAAA4Q,EAAAxa,EACA62B,EAAAiB,EAAAz2B,EACAA,EAAA0Z,EAAA8b,IAEAA,EAAA9b,EAAAnR,EACAA,EAAAitB,EACA72B,EAAA62B,EAAAiB,KAGA+tB,EAAA7lD,EAAAktB,EACAltB,EAAA62B,GAEA72B,MAAA+a,EAAAnR,IACAi8C,EAAA,CACA,GAAA7lD,KAAAktB,EAEA,YADAltB,EAAAktB,GAAA,EAGA,IACA,GAAAltB,IAAAhD,KAAAgF,EAAA,KACA,IAAAhC,IAAA4J,EAAA4Q,GAQA,GAPAk3C,EAAA9nD,EAAAkuB,EACA45B,EAAAxkC,IACAwkC,EAAAxkC,GAAA,EACAtjB,EAAAsjB,GAAA,EACAkO,GAAAp+B,KAAA4M,GACA8nD,EAAA9nD,EAAAkuB,GAEA45B,EAAAl3C,GAAAk3C,EAAAl3C,EAAA0S,GAAAwkC,EAAA55B,GAAA45B,EAAA55B,EAAA5K,EAAA,CACAwkC,EAAA55B,GAAA45B,EAAA55B,EAAA5K,IACAwkC,EAAAl3C,EAAA0S,GAAA,EACAwkC,EAAAxkC,GAAA,EACAoO,GAAAt+B,KAAA00D,GACAA,EAAA9nD,EAAAkuB,GAEA45B,EAAAxkC,EAAAtjB,EAAAsjB,EACAtjB,EAAAsjB,EAAAwkC,EAAA55B,EAAA5K,GAAA,EACAkO,GAAAp+B,KAAA4M,GACA5J,EAAAhD,KAAAgF,CACA,YAUA,IAPA0vD,EAAA9nD,EAAA4Q,EACAk3C,EAAAxkC,IACAwkC,EAAAxkC,GAAA,EACAtjB,EAAAsjB,GAAA,EACAoO,GAAAt+B,KAAA4M,GACA8nD,EAAA9nD,EAAA4Q,GAEAk3C,EAAAl3C,GAAAk3C,EAAAl3C,EAAA0S,GAAAwkC,EAAA55B,GAAA45B,EAAA55B,EAAA5K,EAAA,CACAwkC,EAAAl3C,GAAAk3C,EAAAl3C,EAAA0S,IACAwkC,EAAA55B,EAAA5K,GAAA,EACAwkC,EAAAxkC,GAAA,EACAkO,GAAAp+B,KAAA00D,GACAA,EAAA9nD,EAAA4Q,GAEAk3C,EAAAxkC,EAAAtjB,EAAAsjB,EACAtjB,EAAAsjB,EAAAwkC,EAAAl3C,EAAA0S,GAAA,EACAoO,GAAAt+B,KAAA4M,GACA5J,EAAAhD,KAAAgF,CACA,OAGA0vD,EAAAxkC,GAAA,EACAltB,EAAA4J,EACAA,IAAAmR,SACO/a,EAAAktB,EACPltB,OAAAktB,GAAA,MAiEAnoB,GAAAisD,KAAAW,QAAA,SAAAvsC,GAGA,QAAAusC,GAAA/0D,GACA,GAAAg1D,GAAA,GAAAh5C,OAAAhc,EAAAuE,QAAAkiB,EAAAwO,EAAA,MAAA1O,EAAA0O,EAAA,MAAA9G,EAAA8G,EAAA,MAAA7G,EAAA6G,EAAA,KAQA,OAPA2J,IAAAC,EAAA7+B,GAAAi1B,GAAAyH,MAAArlB,QAAA,SAAAglB,EAAAv1B,GACA,GAAAo1B,GAAAG,EAAAH,MAAA7C,EAAAgD,EAAAhD,KAAAxP,EAAAmrC,EAAAluD,GAAAo1B,EAAA33B,OAAA23B,EAAA/wB,IAAA,SAAA5C,GACA,GAAAD,GAAAC,EAAAkgB,OACA,QAAAngB,EAAA5G,EAAA4G,EAAAzG,KACSw3B,EAAA33B,GAAA+kB,GAAA4S,EAAA33B,GAAAysB,GAAAkL,EAAAx3B,GAAA0kB,GAAA8S,EAAAx3B,GAAAusB,IAAA3H,EAAA2H,IAAAD,EAAAC,IAAAD,EAAA5H,IAAAE,EAAAF,MACTsD,GAAAvZ,MAAAtQ,EAAA8G,KAEAkuD,EAEA,QAAAn2B,GAAA7+B,GACA,MAAAA,GAAAmL,IAAA,SAAAxJ,EAAAmF,GACA,OACApF,EAAAwQ,KAAAqB,MAAA6qB,EAAAz8B,EAAAmF,GAAAif,OACAlkB,EAAAqQ,KAAAqB,MAAA8qB,EAAA18B,EAAAmF,GAAAif,OACAjf,OAlBA,GAAApF,GAAAw2B,GAAAr2B,EAAAs2B,GAAAiG,EAAA18B,EAAA28B,EAAAx8B,EAAAozB,EAAAggC,EACA,OAAAzsC,GAAAusC,EAAAvsC,IAqBAusC,EAAAjuB,MAAA,SAAA9mC,GACA,MAAA4+B,IAAAC,EAAA7+B,IAAAk8B,MAAAhtB,OAAA,SAAAkqB,GACA,MAAAA,GAAA7xB,GAAA6xB,EAAAtlB,IACO3I,IAAA,SAAAiuB,GACP,OACA9yB,OAAAtG,EAAAo5B,EAAA7xB,EAAAT,GACAT,OAAArG,EAAAo5B,EAAAtlB,EAAAhN,OAIAiuD,EAAAG,UAAA,SAAAl1D,GACA,GAAAk1D,KAaA,OAZAt2B,IAAAC,EAAA7+B,IAAA08B,MAAArlB,QAAA,SAAAglB,EAAAv1B,GAEA,IADA,GAAAgC,GAAAqsD,EAAA97B,EAAAgD,EAAAhD,KAAA6C,EAAAG,EAAAH,MAAA7T,KAAA4U,IAAAtvB,EAAA,GAAAC,EAAAsuB,EAAA33B,OAAAsE,EAAAqzB,EAAAtuB,EAAA,GAAAwrB,KAAAiQ,EAAAxgC,EAAAtB,IAAA8xB,EAAAxwB,EAAAiL,EAAAjL,EAAAtB,IACAoG,EAAAC,GACA9E,EAAAD,EACAssD,EAAA9rB,EACAxgC,EAAAqzB,EAAAvuB,GAAAyrB,KACAiQ,EAAAxgC,EAAAtB,IAAA8xB,EAAAxwB,EAAAiL,EAAAjL,EAAAtB,EACAT,EAAAquD,EAAAruD,KAAAuiC,EAAAviC,GAAAm4B,GAAA5F,EAAA87B,EAAA9rB,GAAA,GACA6rB,EAAA3yD,MAAAvC,EAAA8G,GAAA9G,EAAAm1D,EAAAruD,GAAA9G,EAAAqpC,EAAAviC,OAIAouD,GAEAH,EAAArzD,EAAA,SAAA0D,GACA,MAAAd,WAAAC,QAAA65B,EAAAxoB,GAAAlU,EAAA0D,GAAA2vD,GAAArzD,GAEAqzD,EAAAlzD,EAAA,SAAAuD,GACA,MAAAd,WAAAC,QAAA85B,EAAAzoB,GAAA/T,EAAAuD,GAAA2vD,GAAAlzD,GAEAkzD,EAAA9/B,WAAA,SAAA7vB,GACA,MAAAd,WAAAC,QACA0wB,EAAA,MAAA7vB,EAAA6vD,GAAA7vD,EACA2vD,GAFA9/B,IAAAggC,GAAA,KAAAhgC,GAIA8/B,EAAA/uD,KAAA,SAAAZ,GACA,MAAAd,WAAAC,OACAwwD,EAAA9/B,WAAA7vB,KAAA,KAAAA,IADA6vB,IAAAggC,GAAA,KAAAhgC,KAAA,IAGA8/B,GAEA,IAAAE,MAAA,qBAIA9sD,IAAAisD,KAAAgB,SAAA,SAAAf,GACA,MAAAlsD,IAAAisD,KAAAW,UAAAG,UAAAb,IAEAlsD,GAAAisD,KAAAiB,SAAA,SAAA7sC,EAAA2F,EAAAC,EAAAoF,EAAAC,GAYA,QAAA4hC,GAAAr1D,GA4BA,QAAAo7B,GAAAr0B,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,GACA,IAAAzvB,MAAAtC,KAAAsC,MAAAnC,GACA,GAAAkF,EAAAs4B,KAAA,CACA,GAAAi2B,GAAAvuD,EAAArF,EAAA6zD,EAAAxuD,EAAAlF,CACA,UAAAyzD,EACA,GAAA57C,GAAA47C,EAAA5zD,GAAAgY,GAAA67C,EAAA1zD,GAAA,IACA2zD,EAAAzuD,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,OACa,CACb,GAAAgiC,GAAA1uD,EAAAuJ,KACAvJ,GAAArF,EAAAqF,EAAAlF,EAAAkF,EAAAuJ,MAAA,KACAklD,EAAAzuD,EAAA0uD,EAAAH,EAAAC,EAAApnC,EAAAC,EAAAoF,EAAAC,GACA+hC,EAAAzuD,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,OAGA1sB,GAAArF,IAAAqF,EAAAlF,IAAAkF,EAAAuJ,MAAA3O,MAGA6zD,GAAAzuD,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,GAGA,QAAA+hC,GAAAzuD,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,GACA,GAAAwM,GAAA,IAAA9R,EAAAqF,GAAA0M,EAAA,IAAA9R,EAAAqF,GAAAhvB,EAAA/C,GAAAu+B,EAAAE,EAAAt+B,GAAAq+B,EAAAp5B,EAAAq5B,GAAA,EAAA17B,CACAsC,GAAAs4B,MAAA,EACAt4B,IAAAu4B,MAAAx4B,KAAAC,EAAAu4B,MAAAx4B,GAAAs4B,MACA36B,EAAA0pB,EAAA8R,EAA2BzM,EAAAyM,EAC3BE,EAAA/R,EAAA8R,EAA2BzM,EAAAyM,EAC3B9E,EAAAr0B,EAAApF,EAAAD,EAAAG,EAAAssB,EAAAC,EAAAoF,EAAAC,GArDA,GAAA9xB,GAAA+zD,EAAAC,EAAA7uD,EAAAC,EAAA6uD,EAAAC,EAAAC,EAAAC,EAAA33B,EAAAxoB,GAAAlU,GAAA28B,EAAAzoB,GAAA/T,EACA,UAAAssB,EACAynC,EAAAznC,EAAA0nC,EAAAznC,EAAA0nC,EAAAtiC,EAAAuiC,EAAAtiC,MAKA,IAHAqiC,EAAAC,IAAAH,EAAAC,EAAA18C,KACAu8C,KAAAC,KACA5uD,EAAA/G,EAAAuE,OACAyxD,EAAA,IAAAlvD,EAAA,EAA+BC,EAAAD,IAAOA,EACtCnF,EAAA3B,EAAA8G,GACAnF,EAAAD,EAAAk0D,MAAAj0D,EAAAD,GACAC,EAAAE,EAAAg0D,MAAAl0D,EAAAE,GACAF,EAAAD,EAAAo0D,MAAAn0D,EAAAD,GACAC,EAAAE,EAAAk0D,MAAAp0D,EAAAE,GACA6zD,EAAAnzD,KAAAZ,EAAAD,GACAi0D,EAAApzD,KAAAZ,EAAAE,OACS,KAAAiF,EAAA,EAAiBC,EAAAD,IAAOA,EAAA,CACjC,GAAAwoB,IAAA8O,EAAAz8B,EAAA3B,EAAA8G,MAAAyoB,GAAA8O,EAAA18B,EAAAmF,EACA8uD,GAAAtmC,IAAAsmC,EAAAtmC,GACAumC,EAAAtmC,IAAAsmC,EAAAtmC,GACAD,EAAAwmC,MAAAxmC,GACAC,EAAAwmC,MAAAxmC,GACAmmC,EAAAnzD,KAAA+sB,GACAqmC,EAAApzD,KAAAgtB,GAGA,GAAAd,GAAAqnC,EAAAF,EAAAlnC,EAAAqnC,EAAAF,CACApnC,GAAAC,EAAAqnC,EAAAF,EAAApnC,EAAkCqnC,EAAAF,EAAAlnC,CA6BlC,IAAAkR,GAAAR,IAWA,IAVAQ,EAAAp0B,IAAA,SAAA7J,GACAy5B,EAAAwE,EAAAj+B,GAAAy8B,EAAAz8B,IAAAmF,IAAAu3B,EAAA18B,EAAAmF,GAAA8uD,EAAAC,EAAAC,EAAAC,IAEAn2B,EAAAq2B,MAAA,SAAAhlD,GACAsuB,GAAAtuB,EAAA2uB,EAAAg2B,EAAAC,EAAAC,EAAAC,IAEAn2B,EAAAG,KAAA,SAAAzvB,GACA,MAAAqvB,IAAAC,EAAAtvB,EAAA,GAAAA,EAAA,GAAAslD,EAAAC,EAAAC,EAAAC,IAEAjvD,EAAA,GACA,MAAAqnB,EAAA,CACA,OAAArnB,EAAAC,GACAq0B,EAAAwE,EAAA5/B,EAAA8G,GAAA4uD,EAAA5uD,GAAA6uD,EAAA7uD,GAAA8uD,EAAAC,EAAAC,EAAAC,KAEAjvD,MACO9G,GAAAqX,QAAAuoB,EAAAp0B,IAEP,OADAkqD,GAAAC,EAAA31D,EAAA2B,EAAA,KACAi+B,EArFA,GAAAo2B,GAAAt0D,EAAAw2B,GAAAr2B,EAAAs2B,EACA,QAAA69B,EAAA1xD,UAAAC,SACA7C,EAAAw9B,GACAr9B,EAAAs9B,GACA,IAAA62B,IACAviC,EAAArF,EACAoF,EAAArF,EACAC,EAAAD,EAAA,GAEAknC,EAAA7sC,KA8EA6sC,EAAA3zD,EAAA,SAAA0D,GACA,MAAAd,WAAAC,QAAA7C,EAAA0D,EAAAiwD,GAAA3zD,GAEA2zD,EAAAxzD,EAAA,SAAAuD,GACA,MAAAd,WAAAC,QAAA1C,EAAAuD,EAAAiwD,GAAAxzD,GAEAwzD,EAAAj5B,OAAA,SAAAh3B,GACA,MAAAd,WAAAC,QACA,MAAAa,EAAA+oB,EAAAC,EAAAoF,EAAAC,EAAA,MAA8CtF,GAAA/oB,EAAA,MAAAgpB,GAAAhpB,EAAA,MAAAouB,GAAApuB,EAAA,MAC9CquB,GAAAruB,EAAA,OACAiwD,GAHA,MAAAlnC,EAAA,OAAAA,EAAAC,IAAAoF,EAAAC,KAKA4hC,EAAArvD,KAAA,SAAAZ,GACA,MAAAd,WAAAC,QACA,MAAAa,EAAA+oB,EAAAC,EAAAoF,EAAAC,EAAA,MAA8CtF,EAAAC,EAAA,EAAAoF,GAAApuB,EAAA,GAAAquB,GAAAruB,EAAA,IAC9CiwD,GAFA,MAAAlnC,EAAA,MAAAqF,EAAArF,EAAAsF,EAAArF,IAIAinC,IA8DAltD,GAAA+tD,eAAA91B,GASAj4B,GAAAguD,kBAAAx1B,GAoBAx4B,GAAAiuD,kBAAAv1B,GAOA14B,GAAAkuD,kBAAAv1B,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAAx2B,QAAAu2B,GAAA76B,OAAA,IACA6B,IAAA2f,YAAA8Y,GAMAz4B,GAAAm5B,eAAA,SAAA39B,EAAAC,GACA,GAAA0U,SAAA1U,EACA,mBAAA0U,EAAA5C,GAAAg4B,IAAA9pC,EAAA2R,gBAAA,oBAAA5J,KAAA/H,GAAAw8B,GAAAU,GAAAl9B,YAAAiP,IAAAutB,GAAApkB,MAAAq8B,QAAAz0C,GAAA29B,GAAA,WAAAjpB,GAAAtU,MAAAJ,GAAA+8B,GAAAE,IAAAl9B,EAAAC,KAEAuE,GAAAmuD,iBAAA/0B,EAWA,IAAAg1B,IAAA,WACA,MAAApwD,IAEAqwD,GAAAruD,GAAAgD,KACAxK,OAAA41D,GACAE,KAAAv0B,GACAoE,KAAA,WACA,MAAAxE,KAEA40B,MAAA,WACA,MAAA30B,KAEAnvB,IAAA,WACA,MAAAuvB,KAEA3vB,IAAA,WACA,MAAA4vB,KAEA9I,OAAA,WACA,MAAA+I,KAEAs0B,QAAAr0B,GACAs0B,KAAAr0B,GACAs0B,OAAA,WACA,MAAAr0B,OAGAs0B,GAAA3uD,GAAAgD,KACA4rD,KAAA5wD,EACA6wD,IAAAp1B,GACAq1B,SAAAp1B,GACAq1B,SAAA,SAAAjmD,GACA,MAAA4wB,IAAAD,GAAA3wB,MAGA9I,IAAAusC,KAAA,SAAA/tC,GACA,GAAAG,GAAAH,EAAAmB,QAAA,KAAAwQ,EAAAxR,GAAA,EAAAH,EAAAjB,MAAA,EAAAoB,GAAAH,EAAAiH,EAAA9G,GAAA,EAAAH,EAAAjB,MAAAoB,EAAA,OAGA,OAFAwR,GAAAk+C,GAAA3uD,IAAAyQ,IAAAi+C,GACA3oD,EAAAkpD,GAAAjvD,IAAA+F,IAAAzH,EACAw7B,GAAA/zB,EAAA0K,EAAA9R,MAAA,KAAAyvC,GAAA7zC,KAAAkC,UAAA,OA4DA6D,GAAAgvD,eAAA10B,GAWAt6B,GAAAivD,eAAAn0B,GAWA96B,GAAAkvD,eAAAl0B,GASAh7B,GAAAmvD,iBAAA/zB,GAOAp7B,GAAA68B,UAAA,SAAA5nB,GACA,GAAArJ,GAAA6hC,GAAA/oC,gBAAA1E,GAAAmC,GAAA4Q,OAAAla,IAAA,IACA,QAAAmH,GAAA68B,UAAA,SAAA5nB,GACA,SAAAA,EAAA,CACArJ,EAAA9J,aAAA,YAAAmT,EACA,IAAA9E,GAAAvE,EAAAixB,UAAAuyB,QAAAC,cAEA,UAAAh0B,IAAAlrB,IAAAw/B,OAAA2f,MACKr6C,IAeLomB,GAAAv+B,UAAAiQ,SAAA,WACA,mBAAA9U,KAAA+0B,UAAA,WAAA/0B,KAAA8oB,OAAA,UAAA9oB,KAAA6jC,KAAA,UAAA7jC,KAAAM,MAAA,IAkBA,IAAA+2D,KACA9zD,EAAA,EACAC,EAAA,EACA0H,EAAA,EACA3J,EAAA,EACA4G,EAAA,EACA0I,EAAA,EAEA9I,IAAAuvD,qBAAA3yB,GA+EA58B,GAAAwvD,UACAxvD,GAAAwvD,OAAAC,OAAA,WACA,gBAAA9wB,GAEA,IADA,GAAA+wB,MAAA/wD,EAAA,GAAAC,EAAA+/B,EAAAviC,SACAuC,EAAAC,GAAA8wD,EAAAt1D,KAAA4iC,GAAA2B,EAAAhgC,IACA,OAAA+wD,KAoCA1vD,GAAAwvD,OAAAG,MAAA,WAEA,QAAAC,KACA,GAAwBnzD,GAAAlD,EAAA+kB,EAAA3f,EAAA6G,EAAxBmsC,KAAwBke,KAAAC,EAAA9vD,GAAAtH,MAAAkG,GAAAmxD,IAIxB,KAHAC,KACAlvD,KACArE,EAAA,EAAAkC,EAAA,KACAA,EAAAC,GAAA,CAEA,IADArF,EAAA,EAAAiM,EAAA,KACAA,EAAA5G,GACArF,GAAAo2C,EAAAhxC,GAAA6G,EAEAqqD,GAAAz1D,KAAAb,GACAw2D,EAAA31D,KAAA4F,GAAAtH,MAAAkG,IACAnC,GAAAlD,EAgBA,IAdA02D,GACAH,EAAA5vC,KAAA,SAAA1kB,EAAAC,GACA,MAAAw0D,GAAAJ,EAAAr0D,GAAAq0D,EAAAp0D,MAGAy0D,GACAH,EAAA7gD,QAAA,SAAA1V,EAAAmF,GACAnF,EAAA0mB,KAAA,SAAA1kB,EAAAC,GACA,MAAAy0D,GAAAvgB,EAAAhxC,GAAAnD,GAAAm0C,EAAAhxC,GAAAlD,QAIAgB,GAAAmnB,GAAAlb,EAAA9J,GAAAnC,EACAlD,EAAA,EAAAoF,EAAA,KACAA,EAAAC,GAAA,CAEA,IADA0f,EAAA/kB,EAAAiM,EAAA,KACAA,EAAA5G,GAAA,CACA,GAAAuxD,GAAAL,EAAAnxD,GAAAyxD,EAAAL,EAAAI,GAAA3qD,GAAAwF,EAAA2kC,EAAAwgB,GAAAC,GAAA3lC,EAAAlxB,EAAAwtB,EAAAxtB,GAAAyR,EAAAvO,CACAk1C,GAAAwe,EAAA,IAAAC,IACAl3B,MAAAi3B,EACAE,SAAAD,EACAxpB,WAAAnc,EACAqc,SAAA/f,EACArvB,MAAAsT,GAGAlK,EAAAqvD,IACAj3B,MAAAi3B,EACAvpB,WAAAtoB,EACAwoB,SAAAvtC,EACA7B,MAAAm4D,EAAAM,IAEA52D,GAAAmP,EAGA,IADA/J,EAAA,KACAA,EAAAC,GAEA,IADA4G,EAAA7G,EAAA,IACA6G,EAAA5G,GAAA,CACA,GAAAT,GAAAwzC,EAAAhzC,EAAA,IAAA6G,GAAAtH,EAAAyzC,EAAAnsC,EAAA,IAAA7G,IACAR,EAAAzG,OAAAwG,EAAAxG,QACAs4D,EAAA51D,KAAA+D,EAAAzG,MAAAwG,EAAAxG,OACAyG,OAAAD,EACAA,OAAAC,IAEAA,SACAD,WAKAoyD,GAAAC,IAEA,QAAAA,KACAP,EAAA9vC,KAAA,SAAA1kB,EAAAC,GACA,MAAA60D,IAAA90D,EAAA2C,OAAAzG,MAAA8D,EAAA0C,OAAAxG,OAAA,GAAA+D,EAAA0C,OAAAzG,MAAA+D,EAAAyC,OAAAxG,OAAA,KArEA,GAAkBs4D,GAAAlvD,EAAA6uC,EAAA/wC,EAAAqxD,EAAAC,EAAAI,EAAlBX,KAAkBjnD,EAAA,CA8GlB,OAtCAinD,GAAAhgB,OAAA,SAAAp2C,GACA,MAAA4C,WAAAC,QACAwC,GAAA+wC,EAAAp2C,IAAAo2C,EAAAvzC,OACA4zD,EAAAlvD,EAAA,KACA6uD,GAHAhgB,GAKAggB,EAAAjnD,QAAA,SAAAnP,GACA,MAAA4C,WAAAC,QACAsM,EAAAnP,EACAy2D,EAAAlvD,EAAA,KACA6uD,GAHAjnD,GAKAinD,EAAAM,WAAA,SAAA12D,GACA,MAAA4C,WAAAC,QACA6zD,EAAA12D,EACAy2D,EAAAlvD,EAAA,KACA6uD,GAHAM,GAKAN,EAAAO,cAAA,SAAA32D,GACA,MAAA4C,WAAAC,QACA8zD,EAAA32D,EACAy2D,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAA/2D,GACA,MAAA4C,WAAAC,QACAk0D,EAAA/2D,EACAy2D,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAA7uD,OAAA,WAEA,MADAA,IAAA8uD,IACA9uD,GAEA6uD,GAEA3vD,GAAAwvD,OAAAgB,MAAA,WAEA,QAAAC,GAAAx1D,GACA,gBAAAkjC,EAAAnY,EAAA/oB,EAAAouB,GACA,GAAA8S,EAAAh2B,QAAAlN,EAAA,CACA,GAAAqrB,GAAA6X,EAAArf,GAAA7jB,EAAA1B,EAAAgtB,EAAA4X,EAAApf,GAAA9jB,EAAAvB,EAAAg3D,EAAArlC,EAAArF,EAAA2qC,EAAArqC,IAAAC,GACA,IAAAoqC,EAAAD,IAAAE,EAAA,CACA,GAAAC,EAAAF,EAAA,CACA,GAAAl0D,GAAA0hC,EAAAG,OAAAqyB,CACA11D,GAAA8iC,IAAAzX,EAAA7pB,EACAxB,EAAA+iC,IAAAzX,EAAA9pB,EAEA,SAEA,GAAA0hC,EAAAh2B,OAAAwoD,GAAAE,EAAAF,EAAA,CACA,GAAAl0D,GAAA0hC,EAAAK,YAAAmyB,CACA11D,GAAA8iC,IAAAzX,EAAA7pB,EACAxB,EAAA+iC,IAAAzX,EAAA9pB,GAGA,OAAA0hC,EAAAG,QAgMA,QAAAwyB,GAAAt3D,GACAA,EAAAukC,GAAA/9B,GAAAb,MAAA5F,EAAAC,EAAAwkC,GAAAh+B,GAAAb,MAAAzF,EACA82D,EAAAO,SArNA,GAAkB7gD,GAAA+jC,EAAA7V,EAAA4yB,EAAAC,EAAA5yB,EAAlBmyB,KAAkBrxD,EAAAa,GAAAd,SAAA,sBAAArB,GAAA,KAAAqzD,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAAhzB,EAAA,IAAAuyB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAAz5B,KAAAwH,IAuNlB,OAjMA6xB,GAAAnkB,KAAA,WACA,IAAAjO,GAAA,UAMA,MALAluB,GAAA,KACA/Q,EAAAm1B,KACA1zB,KAAA,MACAw9B,QAAA,KAEA,CAEA,IAAA1Y,GAAA/mB,EAAAuI,EAAA/G,EAAAgQ,EAAA/Q,EAAA3C,EAAAlD,EAAAG,EAAAkF,EAAAu4B,EAAA/6B,OAAAqJ,EAAAk5B,EAAAviC,MACA,KAAAuC,EAAA,EAAiB8G,EAAA9G,IAAOA,EACxBuI,EAAAy3B,EAAAhgC,GACAwB,EAAA+G,EAAA/I,OACAgS,EAAAjJ,EAAAhJ,OACA3E,EAAA4W,EAAA5W,EAAA4G,EAAA5G,EACAG,EAAAyW,EAAAzW,EAAAyG,EAAAzG,GACA0F,EAAA7F,IAAAG,OACA0F,EAAAg/B,EAAA6yB,EAAAtyD,KAAAS,EAAA2K,KAAAyC,KAAApN,IAAA4xD,EAAAryD,IAAAS,EACA7F,GAAA6F,EACA1F,GAAA0F,EACA+Q,EAAA5W,MAAAkD,EAAA0D,EAAAsxD,OAAAthD,EAAAshD,OAAAtxD,EAAAsxD,QAAAtxD,EAAAsxD,OAAAthD,EAAAshD,QAAA,IACAthD,EAAAzW,KAAA+C,EACA0D,EAAA5G,MAAAkD,EAAA,EAAAA,GACA0D,EAAAzG,KAAA+C,EAGA,KAAAA,EAAA2hC,EAAAozB,KACAj4D,EAAAsE,EAAA,KACAnE,EAAAmE,EAAA,KACAc,EAAA,GACAlC,GAAA,OAAAkC,EAAAC,GACAsI,EAAAiwB,EAAAx4B,GACAuI,EAAA3N,MAAA2N,EAAA3N,GAAAkD,EACAyK,EAAAxN,MAAAwN,EAAAxN,GAAA+C,CAGA,IAAA6hC,EAGA,IAFAJ,GAAAxY,EAAA1lB,GAAAisD,KAAAiB,SAAA/1B,GAAAiH,EAAAC,GACA1/B,EAAA,KACAA,EAAAC,IACAsI,EAAAiwB,EAAAx4B,IAAAi/B,OACAlY,EAAAooC,MAAA2C,EAAAvpD,GAKA,KADAvI,EAAA,KACAA,EAAAC,GACAsI,EAAAiwB,EAAAx4B,GACAuI,EAAA02B,OACA12B,EAAA3N,EAAA2N,EAAA62B,GACA72B,EAAAxN,EAAAwN,EAAA82B,KAEA92B,EAAA3N,IAAA2N,EAAA62B,IAAA72B,EAAA62B,GAAA72B,EAAA3N,IAAA23D,EACAhqD,EAAAxN,IAAAwN,EAAA82B,IAAA92B,EAAA82B,GAAA92B,EAAAxN,IAAAw3D,EAGA/xD,GAAAktC,MACAzrC,KAAA,OACAw9B,WAGAoyB,EAAAr5B,MAAA,SAAA59B,GACA,MAAA4C,WAAAC,QACA+6B,EAAA59B,EACAi3D,GAFAr5B,GAIAq5B,EAAA7xB,MAAA,SAAAplC,GACA,MAAA4C,WAAAC,QACAuiC,EAAAplC,EACAi3D,GAFA7xB,GAIA6xB,EAAA3yD,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACAyB,EAAAtE,EACAi3D,GAFA3yD,GAIA2yD,EAAAW,aAAA,SAAA53D,GACA,MAAA4C,WAAAC,QACA+0D,EAAA,kBAAA53D,QACAi3D,GAFAW,GAIAX,EAAA5hC,SAAA4hC,EAAAW,aACAX,EAAAa,aAAA,SAAA93D,GACA,MAAA4C,WAAAC,QACAi1D,EAAA,kBAAA93D,QACAi3D,GAFAa,GAIAb,EAAAU,SAAA,SAAA33D,GACA,MAAA4C,WAAAC,QACA80D,GAAA33D,EACAi3D,GAFAU,GAIAV,EAAAlyB,OAAA,SAAA/kC,GACA,MAAA4C,WAAAC,QACAkiC,EAAA,kBAAA/kC,QACAi3D,GAFAlyB,GAIAkyB,EAAAkB,eAAA,SAAAn4D,GACA,MAAA4C,WAAAC,QACAy0D,EAAAt3D,IACAi3D,GAFAzmD,KAAAyC,KAAAqkD,IAIAL,EAAAgB,QAAA,SAAAj4D,GACA,MAAA4C,WAAAC,QACAo1D,GAAAj4D,EACAi3D,GAFAgB,GAIAhB,EAAAmB,MAAA,SAAAp4D,GACA,MAAA4C,WAAAC,QACAw0D,EAAAr3D,IACAi3D,GAFAzmD,KAAAyC,KAAAokD,IAIAJ,EAAApyB,MAAA,SAAA7kC,GACA,MAAA4C,WAAAC,QACA7C,KACA6kC,EACA7kC,EAAA,EACA6kC,EAAA7kC,GAEA2W,EAAA/M,EAAA,KAAA+M,EAAAC,EAAAzU,IAAAwU,EAAA,KACA/Q,EAAAm1B,KACA1zB,KAAA,MACAw9B,QAAA,KAGO7kC,EAAA,IACP4F,EAAAmhB,OACA1f,KAAA,QACAw9B,QAAA7kC,IAEA2W,EAAAN,GAAA4gD,EAAAnkB,OAEAmkB,GAnBApyB,GAqBAoyB,EAAAlwC,MAAA,WA0BA,QAAA9X,GAAAopD,EAAA/zD,GACA,IAAAg0D,EAAA,CAEA,IADAA,EAAA,GAAAh+C,OAAAjV,GACA4G,EAAA,EAAqB5G,EAAA4G,IAAOA,EAC5BqsD,EAAArsD,KAEA,KAAAA,EAAA,EAAqBC,EAAAD,IAAOA,EAAA,CAC5B,GAAA0B,GAAAy3B,EAAAn5B,EACAqsD,GAAA3qD,EAAA/I,OAAA+6B,OAAA9+B,KAAA8M,EAAAhJ,QACA2zD,EAAA3qD,EAAAhJ,OAAAg7B,OAAA9+B,KAAA8M,EAAA/I,SAIA,IADA,GAAA5E,GAAAu4D,EAAAD,EAAAlzD,GAAA6G,EAAA,GAAApG,EAAA0yD,EAAA11D,SACAoJ,EAAApG,GAAA,IAAAvD,MAAAtC,EAAAu4D,EAAAtsD,GAAAosD,IAAA,MAAAr4D,EACA,OAAAwQ,MAAAw0B,SAAA1gC,EAvCA,GAAAc,GAAAkzD,EAAA3qD,EAAAtI,EAAAu4B,EAAA/6B,OAAAqJ,EAAAk5B,EAAAviC,OAAAqL,EAAA5J,EAAA,GAAA+M,EAAA/M,EAAA,EACA,KAAAc,EAAA,EAAiBC,EAAAD,IAAOA,GACxBuI,EAAAiwB,EAAAx4B,IAAAu6B,MAAAv6B,EACAuI,EAAAuqD,OAAA,CAEA,KAAA9yD,EAAA,EAAiB8G,EAAA9G,IAAOA,EACxBuI,EAAAy3B,EAAAhgC,GACA,gBAAAuI,GAAA/I,SAAA+I,EAAA/I,OAAAg5B,EAAAjwB,EAAA/I,SACA,gBAAA+I,GAAAhJ,SAAAgJ,EAAAhJ,OAAAi5B,EAAAjwB,EAAAhJ,WACAgJ,EAAA/I,OAAAszD,SACAvqD,EAAAhJ,OAAAuzD,MAEA,KAAA9yD,EAAA,EAAiBC,EAAAD,IAAOA,EACxBuI,EAAAiwB,EAAAx4B,GACA9C,MAAAqL,EAAA3N,KAAA2N,EAAA3N,EAAAiP,EAAA,IAAAf,IACA5L,MAAAqL,EAAAxN,KAAAwN,EAAAxN,EAAA8O,EAAA,IAAAoC,IACA/O,MAAAqL,EAAA62B,MAAA72B,EAAA62B,GAAA72B,EAAA3N,GACAsC,MAAAqL,EAAA82B,MAAA92B,EAAA82B,GAAA92B,EAAAxN,EAGA,IADAs3D,KACA,kBAAAG,GAAA,IAAAxyD,EAAA,EAAyD8G,EAAA9G,IAAOA,EAAAqyD,EAAAryD,IAAAwyD,EAAAl3D,KAAAhC,KAAA0mC,EAAAhgC,UAA2D,KAAAA,EAAA,EAAiB8G,EAAA9G,IAAOA,EAAAqyD,EAAAryD,GAAAwyD,CAEnJ,IADAF,KACA,kBAAAI,GAAA,IAAA1yD,EAAA,EAAyD8G,EAAA9G,IAAOA,EAAAsyD,EAAAtyD,IAAA0yD,EAAAp3D,KAAAhC,KAAA0mC,EAAAhgC,UAA2D,KAAAA,EAAA,EAAiB8G,EAAA9G,IAAOA,EAAAsyD,EAAAtyD,GAAA0yD,CAEnJ,IADAhzB,KACA,kBAAAC,GAAA,IAAA3/B,EAAA,EAAmDC,EAAAD,IAAOA,EAAA0/B,EAAA1/B,IAAA2/B,EAAArkC,KAAAhC,KAAAk/B,EAAAx4B,UAAmD,KAAAA,EAAA,EAAiBC,EAAAD,IAAOA,EAAA0/B,EAAA1/B,GAAA2/B,CAiBrI,OAAAkyB,GAAAO,UAEAP,EAAAO,OAAA,WACA,MAAAP,GAAApyB,MAAA,KAEAoyB,EAAA7tB,KAAA,WACA,MAAA6tB,GAAApyB,MAAA,IAEAoyB,EAAAvc,KAAA,WAEA,MADAA,OAAAj0C,GAAA+wC,SAAAkD,OAAAiB,OAAAl3C,GAAAuB,GAAA,kBAAAo+B,IAAAp+B,GAAA,aAAAuxD,GAAAvxD,GAAA,gBAAAs+B,KACA1hC,UAAAC,WACAnE,MAAAsH,GAAA,kBAAAu+B,IAAAv+B,GAAA,iBAAA0+B,IAAAhkC,KAAAg6C,GADAA,GAOAj0C,GAAAyP,OAAA+gD,EAAArxD,EAAA,MA0CA,IAAAiyD,IAAA,GAAAE,GAAA,EAAAC,GAAAvgD,GACAhR,IAAAwvD,OAAA9wB,UAAA,WAEA,QAAAA,GAAAjH,GACA,GAAAx8B,GAAA82D,GAAAt6B,GAAAN,IAEA,KADAM,EAAAzM,MAAA,EACA,OAAA/vB,EAAA82D,EAAAtwC,QAEA,GADA0V,EAAA/8B,KAAAa,IACA+2D,EAAAz6B,EAAAt9B,KAAAykC,EAAAzjC,IAAA+vB,UAAApsB,EAAAozD,EAAA51D,QAAA,CAEA,IADA,GAAAwC,GAAAozD,EAAA7yB,IACAvgC,GAAA,GACAmzD,EAAA33D,KAAA+kC,EAAA6yB,EAAApzD,IACAugC,EAAAt6B,OAAA5J,EACAkkC,EAAAnU,MAAA/vB,EAAA+vB,MAAA,CAEAtzB,KAAAuD,EAAAvD,MAAA,GACAuD,EAAAs8B,SAAAy6B,MAEAt6D,KAAAuD,EAAAvD,SAAAuC,KAAAykC,EAAAzjC,IAAA+vB,QAAA,SACA/vB,GAAAs8B,QAQA,OALAuH,IAAArH,EAAA,SAAAx8B,GACA,GAAA+2D,GAAAntD,CACAqb,KAAA8xC,EAAA/2D,EAAAs8B,WAAAy6B,EAAA9xC,QACAxoB,IAAAmN,EAAA5J,EAAA4J,YAAAnN,OAAAuD,EAAAvD,SAEAy/B,EAzBA,GAAAjX,GAAAgf,GAAA3H,EAAAyH,GAAAtnC,EAAAunC,EAuDA,OA5BAP,GAAAxe,KAAA,SAAA3mB,GACA,MAAA4C,WAAAC,QACA8jB,EAAA3mB,EACAmlC,GAFAxe,GAIAwe,EAAAnH,SAAA,SAAAh+B,GACA,MAAA4C,WAAAC,QACAm7B,EAAAh+B,EACAmlC,GAFAnH,GAIAmH,EAAAhnC,MAAA,SAAA6B,GACA,MAAA4C,WAAAC,QACA1E,EAAA6B,EACAmlC,GAFAhnC,GAIAgnC,EAAAuzB,QAAA,SAAAx6B,GAWA,MAVA//B,KACAmnC,GAAApH,EAAA,SAAAx8B,GACAA,EAAAs8B,WAAAt8B,EAAAvD,MAAA,KAEAonC,GAAArH,EAAA,SAAAx8B,GACA,GAAA4J,EACA5J,GAAAs8B,WAAAt8B,EAAAvD,SAAAuC,KAAAykC,EAAAzjC,IAAA+vB,QAAA,IACAnmB,EAAA5J,EAAA4J,YAAAnN,OAAAuD,EAAAvD,UAGA+/B,GAEAiH,GAkDA1+B,GAAAwvD,OAAA0C,UAAA,WAEA,QAAA1pD,GAAAvN,EAAA1B,EAAA+sB,EAAAC,GACA,GAAAgR,GAAAt8B,EAAAs8B,QAKA,IAJAt8B,EAAA1B,IACA0B,EAAAvB,EAAAuB,EAAA+vB,MAAAzE,EACAtrB,EAAAqrB,KACArrB,EAAAsrB,KACAgR,IAAA34B,EAAA24B,EAAAn7B,QAAA,CACA,GAAAwC,GAAAuE,EAAA3J,EAAAmF,EAAA,EAEA,KADA2nB,EAAArrB,EAAAvD,MAAA4uB,EAAArrB,EAAAvD,MAAA,IACAiH,EAAAC,GACA4J,EAAArF,EAAAo0B,EAAA54B,GAAApF,EAAAC,EAAA2J,EAAAzL,MAAA4uB,EAAAC,GACAhtB,GAAAC,GAIA,QAAAwxB,GAAA/vB,GACA,GAAAs8B,GAAAt8B,EAAAs8B,SAAA/9B,EAAA,CACA,IAAA+9B,IAAA34B,EAAA24B,EAAAn7B,QAEA,IADA,GAAAwC,GAAAD,EAAA,KACAA,EAAAC,GAAApF,EAAAuQ,KAAA+C,IAAAtT,EAAAwxB,EAAAuM,EAAA54B,IAEA,UAAAnF,EAEA,QAAA04D,GAAA14D,EAAAmF,GACA,GAAAw4B,GAAAuH,EAAAzkC,KAAAhC,KAAAuB,EAAAmF,EAEA,OADA6J,GAAA2uB,EAAA,KAAAt5B,EAAA,GAAAA,EAAA,GAAAmtB,EAAAmM,EAAA,KACAA,EA3BA,GAAAuH,GAAA1+B,GAAAwvD,OAAA9wB,YAAA7gC,GAAA,IAkCA,OALAq0D,GAAAr0D,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACAyB,EAAAtE,EACA24D,GAFAr0D,GAIA4gC,GAAAyzB,EAAAxzB,IAEA1+B,GAAAwvD,OAAA2C,IAAA,WAEA,QAAAA,GAAAt6D,GACA,GAEOmT,GAFPpM,EAAA/G,EAAAuE,OAAA0jC,EAAAjoC,EAAAmL,IAAA,SAAAxJ,EAAAmF,GACA,OAAAjH,EAAAuC,KAAAk4D,EAAA34D,EAAAmF,KACOnD,IAAA,kBAAAorC,KAAAvoC,MAAApG,KAAAkE,WAAAyqC,GAAArF,GAAA,kBAAAuF,KAAAzoC,MAAApG,KAAAkE,WAAA2qC,GAAAtrC,EAAA0V,EAAAnH,KAAAiD,IAAAjD,KAAAwH,IAAAgwB,GAAA3iC,IAAA,kBAAAooC,KAAA3oC,MAAApG,KAAAkE,WAAA6qC,IAAAliB,EAAA5T,GAAA,EAAAqwB,EAAA,MAAAoN,EAAA3uC,GAAA2uC,IAAA7O,GAAArjC,EAAAkyC,GAAApN,EAAA3iC,EAAAkmB,GAAA6pB,EAAA,EAAAzV,EAAAl5B,GAAAtH,MAAAkG,GAAAwzD,IAeP,OAdA,OAAAlyC,GAAAgZ,EAAAhZ,SAAAmyC,GAAA,SAAA1zD,EAAA6G,GACA,MAAAs6B,GAAAt6B,GAAAs6B,EAAAnhC,IACO,SAAAA,EAAA6G,GACP,MAAA0a,GAAAroB,EAAA8G,GAAA9G,EAAA2N,MAEA0zB,EAAAhqB,QAAA,SAAAvQ,GACAyzD,EAAAzzD,IACA9G,OAAA8G,GACAjH,MAAAsT,EAAA80B,EAAAnhC,GACAioC,WAAAprC,EACAsrC,SAAAtrC,GAAAwP,EAAAvO,EAAAqoB,EACAkiB,SAAA91B,KAGAkhD,EAnBA,GAAA16D,GAAAisC,OAAAzjB,EAAAmyC,GAAAzrB,EAAA,EAAAE,EAAAljB,GAAAojB,EAAA,CA8CA,OAzBAmrB,GAAAz6D,MAAA,SAAAuF,GACA,MAAAd,WAAAC,QACA1E,EAAAuF,EACAk1D,GAFAz6D,GAIAy6D,EAAAjyC,KAAA,SAAAjjB,GACA,MAAAd,WAAAC,QACA8jB,EAAAjjB,EACAk1D,GAFAjyC,GAIAiyC,EAAAvrB,WAAA,SAAA3pC,GACA,MAAAd,WAAAC,QACAwqC,EAAA3pC,EACAk1D,GAFAvrB,GAIAurB,EAAArrB,SAAA,SAAA7pC,GACA,MAAAd,WAAAC,QACA0qC,EAAA7pC,EACAk1D,GAFArrB,GAIAqrB,EAAAnrB,SAAA,SAAA/pC,GACA,MAAAd,WAAAC,QACA4qC,EAAA/pC,EACAk1D,GAFAnrB,GAIAmrB,EAEA,IAAAE,MACAryD,IAAAwvD,OAAAuC,MAAA,WAEA,QAAAA,GAAAl6D,EAAAqhC,GACA,KAAAt6B,EAAA/G,EAAAuE,QAAA,MAAAvE,EACA,IAAAy6D,GAAAz6D,EAAAmL,IAAA,SAAAxJ,EAAAmF,GACA,MAAAmhC,GAAA7lC,KAAA83D,EAAAv4D,EAAAmF,KAEA0hB,EAAAiyC,EAAAtvD,IAAA,SAAAxJ,GACA,MAAAA,GAAAwJ,IAAA,SAAAgI,EAAArM,GACA,OAAApF,EAAAU,KAAA83D,EAAA/mD,EAAArM,GAAAjF,EAAAO,KAAA83D,EAAA/mD,EAAArM,QAGA4zD,EAAAzhB,EAAA72C,KAAA83D,EAAA1xC,EAAA6Y,EACAo5B,GAAAtyD,GAAAsvC,QAAAgjB,EAAAC,GACAlyC,EAAArgB,GAAAsvC,QAAAjvB,EAAAkyC,EACA,IACA3zD,GAAAD,EAAA6G,EAAA0B,EADAsrD,EAAAl+C,EAAAra,KAAA83D,EAAA1xC,EAAA6Y,GACAzzB,EAAA6sD,EAAA,GAAAl2D,MACA,KAAAoJ,EAAA,EAAiBC,EAAAD,IAAOA,EAExB,IADAqpD,EAAA50D,KAAA83D,EAAAO,EAAA,GAAA9sD,GAAA0B,EAAAsrD,EAAAhtD,GAAA6a,EAAA,GAAA7a,GAAA,IACA7G,EAAA,EAAmBC,EAAAD,IAAOA,EAC1BkwD,EAAA50D,KAAA83D,EAAAO,EAAA3zD,GAAA6G,GAAA0B,GAAAmZ,EAAA1hB,EAAA,GAAA6G,GAAA,GAAA6a,EAAA1hB,GAAA6G,GAAA,GAGA,OAAA3N,GAtBA,GAAAioC,GAAA9hC,EAAA8yC,EAAAvR,GAAAjrB,EAAAkrB,GAAAqvB,EAAAvvB,GAAA/lC,EAAA6lC,GAAA1lC,EAAA2lC,EAsDA,OA9BA0yB,GAAAjyB,OAAA,SAAAvmC,GACA,MAAA4C,WAAAC,QACA0jC,EAAAvmC,EACAw4D,GAFAjyB,GAIAiyB,EAAAjhB,MAAA,SAAAv3C,GACA,MAAA4C,WAAAC,QACA00C,EAAA,kBAAAv3C,KAAAk5D,GAAA/yD,IAAAnG,IAAAgmC,GACAwyB,GAFAjhB,GAIAihB,EAAAz9C,OAAA,SAAA/a,GACA,MAAA4C,WAAAC,QACAkY,EAAA,kBAAA/a,KAAAm5D,GAAAhzD,IAAAnG,IAAAimC,GACAuyB,GAFAz9C,GAIAy9C,EAAAx4D,EAAA,SAAA8F,GACA,MAAAlD,WAAAC,QACA7C,EAAA8F,EACA0yD,GAFAx4D,GAIAw4D,EAAAr4D,EAAA,SAAA2F,GACA,MAAAlD,WAAAC,QACA1C,EAAA2F,EACA0yD,GAFAr4D,GAIAq4D,EAAAlD,IAAA,SAAAxvD,GACA,MAAAlD,WAAAC,QACAyyD,EAAAxvD,EACA0yD,GAFAlD,GAIAkD,EAYA,IAAAU,IAAAzyD,GAAAgD,KACA2vD,aAAA,SAAA96D,GACA,GAAA8G,GAAA6G,EAAA5G,EAAA/G,EAAAuE,OAAA0Q,EAAAjV,EAAAmL,IAAAy8B,IAAAmzB,EAAA/6D,EAAAmL,IAAA08B,IAAAxG,EAAAl5B,GAAAtH,MAAAkG,GAAAshB,KAAA,SAAA1kB,EAAAC,GACA,MAAAqR,GAAAtR,GAAAsR,EAAArR,KACOgN,EAAA,EAAAoqD,EAAA,EAAAC,KAAAC,IACP,KAAAp0D,EAAA,EAAiBC,EAAAD,IAAOA,EACxB6G,EAAA0zB,EAAAv6B,GACAk0D,EAAApqD,GACAA,GAAAmqD,EAAAptD,GACAstD,EAAA14D,KAAAoL,KAEAqtD,GAAAD,EAAAptD,GACAutD,EAAA34D,KAAAoL,GAGA,OAAAutD,GAAA1gD,UAAAzS,OAAAkzD,IAEAzgD,QAAA,SAAAxa,GACA,MAAAmI,IAAAtH,MAAAb,EAAAuE,QAAAiW,WAEA9a,UAAAgoC,KAEAmzB,GAAA1yD,GAAAgD,KACAgwD,WAAA,SAAAn7D,GACA,GAAA8G,GAAA6G,EAAA0B,EAAAtI,EAAA/G,EAAAuE,OAAAqJ,EAAA5N,EAAA,GAAAuE,OAAAw2D,KAAA9lD,EAAA,EAAAsR,IACA,KAAA5Y,EAAA,EAAiBC,EAAAD,IAAOA,EAAA,CACxB,IAAA7G,EAAA,EAAAuI,EAAA,EAA0BtI,EAAAD,EAAOA,IAAAuI,GAAArP,EAAA8G,GAAA6G,GAAA,EACjC0B,GAAA4F,MAAA5F,GACA0rD,EAAAx4D,KAAA8M,GAEA,IAAA1B,EAAA,EAAiBC,EAAAD,IAAOA,EACxB4Y,EAAA5Y,IAAAsH,EAAA8lD,EAAAptD,IAAA,CAEA,OAAA4Y,IAEA60C,OAAA,SAAAp7D,GACA,GAAA8G,GAAA6G,EAAA/I,EAAAykC,EAAAC,EAAA+xB,EAAA5sC,EAAApf,EAAAisD,EAAAv0D,EAAA/G,EAAAuE,OAAA7C,EAAA1B,EAAA,GAAA4N,EAAAlM,EAAA6C,OAAAgiB,IAEA,KADAA,EAAA,GAAAlX,EAAAisD,EAAA,EACA3tD,EAAA,EAAiBC,EAAAD,IAAOA,EAAA,CACxB,IAAA7G,EAAA,EAAAuiC,EAAA,EAA2BtiC,EAAAD,IAAOA,EAAAuiC,GAAArpC,EAAA8G,GAAA6G,GAAA,EAClC,KAAA7G,EAAA,EAAAwiC,EAAA,EAAA7a,EAAA/sB,EAAAiM,GAAA,GAAAjM,EAAAiM,EAAA,MAAuD5G,EAAAD,IAAOA,EAAA,CAC9D,IAAAlC,EAAA,EAAAy2D,GAAAr7D,EAAA8G,GAAA6G,GAAA,GAAA3N,EAAA8G,GAAA6G,EAAA,UAAA8gB,GAA0E3nB,EAAAlC,IAAOA,EACjFy2D,IAAAr7D,EAAA4E,GAAA+I,GAAA,GAAA3N,EAAA4E,GAAA+I,EAAA,OAAA8gB,CAEA6a,IAAA+xB,EAAAr7D,EAAA8G,GAAA6G,GAAA,GAEA4Y,EAAA5Y,GAAA0B,GAAAg6B,EAAAC,EAAAD,EAAA5a,EAAA,EACA6sC,EAAAjsD,IAAAisD,EAAAjsD,GAEA,IAAA1B,EAAA,EAAiBC,EAAAD,IAAOA,EAAA4Y,EAAA5Y,IAAA2tD,CACxB,OAAA/0C,IAEAg1C,OAAA,SAAAv7D,GACA,GAAA8G,GAAA6G,EAAA0B,EAAAtI,EAAA/G,EAAAuE,OAAAqJ,EAAA5N,EAAA,GAAAuE,OAAAK,EAAA,EAAAmC,EAAAwf,IACA,KAAA5Y,EAAA,EAAiBC,EAAAD,IAAOA,EAAA,CACxB,IAAA7G,EAAA,EAAAuI,EAAA,EAA0BtI,EAAAD,EAAOA,IAAAuI,GAAArP,EAAA8G,GAAA6G,GAAA,EACjC,IAAA0B,EAAA,IAAAvI,EAAA,EAA0BC,EAAAD,EAAOA,IAAA9G,EAAA8G,GAAA6G,GAAA,IAAA0B,MAAyB,KAAAvI,EAAA,EAAiBC,EAAAD,EAAOA,IAAA9G,EAAA8G,GAAA6G,GAAA,GAAA/I,EAElF,IAAA+I,EAAA,EAAiBC,EAAAD,IAAOA,EAAA4Y,EAAA5Y,GAAA,CACxB,OAAA4Y,IAEAi1C,KAAA7zB,IA0BAx/B,IAAAwvD,OAAA8D,UAAA,WAEA,QAAAA,GAAAz7D,EAAA8G,GAEA,IADA,GAAA40D,GAAAh6D,EAAAi6D,KAAA1zB,EAAAjoC,EAAAmL,IAAAywD,EAAAx7D,MAAAS,EAAAysC,EAAAlrC,KAAAhC,KAAA6nC,EAAAnhC,GAAAmnC,EAAA4tB,EAAAz5D,KAAAhC,KAAAS,EAAAonC,EAAAnhC,KAAA,GAAAC,EAAAkhC,EAAA1jC,OAAAqJ,EAAAqgC,EAAA1pC,OAAA,EAAAK,EAAAk3D,EAAA,IAAA/0D,IACAD,EAAA8G,GACA8tD,EAAAC,EAAA70D,MACA40D,EAAAjtC,GAAAwf,EAAAnnC,EAAA,IAAA40D,EAAAh6D,EAAAusC,EAAAnnC,IACA40D,EAAA75D,EAAA,CAEA,IAAA+L,EAAA,EAEA,IADA9G,EAAA,KACAA,EAAAC,GACArF,EAAAumC,EAAAnhC,GACApF,GAAAb,EAAA,IAAAa,GAAAb,EAAA,KACA66D,EAAAC,EAAAxzD,GAAAsjC,OAAAwC,EAAAvsC,EAAA,EAAAkM,GAAA,GACA8tD,EAAA75D,GAAA+C,EACA82D,EAAAn5D,KAAAvC,EAAA8G,IAIA,OAAA60D,GAnBA,GAAAG,IAAA,EAAAF,EAAA9vB,OAAAwB,EAAAlF,GAAAyzB,EAAA7zB,EA2CA,OAtBAyzB,GAAA57D,MAAA,SAAA6B,GACA,MAAA4C,WAAAC,QACAq3D,EAAAl6D,EACA+5D,GAFAG,GAIAH,EAAA56D,MAAA,SAAAa,GACA,MAAA4C,WAAAC,QACA+oC,EAAA13B,GAAAlU,GACA+5D,GAFAnuB,GAIAmuB,EAAAE,KAAA,SAAAj6D,GACA,MAAA4C,WAAAC,QACAs3D,EAAA,gBAAAn6D,GAAA,SAAAb,GACA,MAAAqnC,IAAArnC,EAAAa,IACOkU,GAAAlU,GACP+5D,GAJAI,GAMAJ,EAAAK,UAAA,SAAAp6D,GACA,MAAA4C,WAAAC,QACAu3D,IAAAp6D,EACA+5D,GAFAK,GAIAL,GAaAtzD,GAAAwvD,OAAAoE,KAAA,WAEA,QAAAA,GAAAp6D,EAAAmF,GACA,GAAAw4B,GAAAuH,EAAAzkC,KAAAhC,KAAAuB,EAAAmF,GAAA84B,EAAAN,EAAA,GAAA1vB,EAAA5J,EAAA,GAAA+M,EAAA/M,EAAA,GAAA8N,EAAA,MAAAsY,EAAAla,KAAAyC,KAAA,kBAAAyX,KAAA,WACA,MAAAA,GAOA,IALAwT,EAAAl+B,EAAAk+B,EAAA/9B,EAAA,EACAolC,GAAArH,EAAA,SAAAj+B,GACAA,EAAAmS,KAAAnS,EAAA9B,SAEAonC,GAAArH,EAAAgJ,IACA/3B,EAAA,CACA,GAAA83B,GAAA93B,GAAAub,EAAA,EAAAla,KAAA+C,IAAA,EAAA2qB,EAAA9rB,EAAAlE,EAAA,EAAAgwB,EAAA9rB,EAAAf,IAAA,CACAk0B,IAAArH,EAAA,SAAAj+B,GACAA,EAAAmS,GAAA60B,IAEA1B,GAAArH,EAAAgJ,IACA3B,GAAArH,EAAA,SAAAj+B,GACAA,EAAAmS,GAAA60B,IAIA,MADAa,IAAA5J,EAAAhwB,EAAA,EAAAmD,EAAA,EAAAqZ,EAAA,IAAAla,KAAA+C,IAAA,EAAA2qB,EAAA9rB,EAAAlE,EAAA,EAAAgwB,EAAA9rB,EAAAf,IACAusB,EArBA,GAAAlT,GAAAya,EAAA1+B,GAAAwvD,OAAA9wB,YAAAxe,KAAAggB,IAAAx3B,EAAA,EAAA7K,GAAA,IAsCA,OAfA+1D,GAAA/1D,KAAA,SAAAZ,GACA,MAAAd,WAAAC,QACAyB,EAAAZ,EACA22D,GAFA/1D,GAIA+1D,EAAA3vC,OAAA,SAAAhnB,GACA,MAAAd,WAAAC,QACA6nB,EAAA,MAAAhnB,GAAA,kBAAAA,QACA22D,GAFA3vC,GAIA2vC,EAAAlrD,QAAA,SAAAzL,GACA,MAAAd,WAAAC,QACAsM,GAAAzL,EACA22D,GAFAlrD,GAIA+1B,GAAAm1B,EAAAl1B,IAmHA1+B,GAAAwvD,OAAAl5B,KAAA,WAEA,QAAAA,GAAA98B,EAAAmF,GACA,GAAAw4B,GAAAuH,EAAAzkC,KAAAhC,KAAAuB,EAAAmF,GAAAk1D,EAAA18B,EAAA,GAAA28B,EAAAC,EAAAF,EAGA,IAFA/0B,GAAAg1B,EAAAE,GAAAF,EAAAjvD,OAAAY,GAAAquD,EAAAz0D,EACAw/B,GAAAi1B,EAAAG,GACAC,EAAAr1B,GAAAg1B,EAAAM,OAAoE,CACpE,GAAAn4D,GAAA63D,EAAAv3D,EAAAu3D,EAAAhB,EAAAgB,CACAh1B,IAAAg1B,EAAA,SAAA54D,GACAA,EAAA1B,EAAAyC,EAAAzC,IAAAyC,EAAAf,GACAA,EAAA1B,EAAA+C,EAAA/C,IAAA+C,EAAArB,GACAA,EAAA+vB,MAAA6nC,EAAA7nC,QAAA6nC,EAAA53D,IAEA,IAAAm5D,GAAAC,EAAAr4D,EAAAM,GAAA,EAAAN,EAAAzC,EAAAiiC,EAAA39B,EAAA,IAAAvB,EAAA/C,EAAA86D,EAAA/3D,EAAAN,GAAA,EAAAo4D,GAAAx4B,EAAA/9B,EAAA,IAAAg1D,EAAA7nC,OAAA,EACA6T,IAAAg1B,EAAA,SAAA54D,GACAA,EAAA1B,GAAA0B,EAAA1B,EAAA66D,GAAA54B,EACAvgC,EAAAvB,EAAAuB,EAAA+vB,MAAA4Q,IAGA,MAAAzE,GAEA,QAAA48B,GAAAF,GAKA,IAJA,GAGOS,GAHPR,GACAv7C,EAAA,KACAgf,UAAAs8B,IACOU,GAAAT,GACP,OAAAQ,EAAAC,EAAA9yC,QACA,OAAA0d,GAAA5H,EAAA+8B,EAAA/8B,SAAA54B,EAAA,EAAAC,EAAA24B,EAAAn7B,OAA8EwC,EAAAD,IAAOA,EACrF41D,EAAAn6D,MAAAm9B,EAAA54B,GAAAwgC,GACAliC,EAAAs6B,EAAA54B,GACAkG,OAAAyvD,EACA/8B,UAAA4H,EAAA5H,EAAA54B,GAAA44B,WAAA4H,EAAA5hC,YACAgb,EAAA,KACA/c,EAAA,KACA6D,EAAA,EACAoG,EAAA,EACAtC,EAAA,EACAhD,EAAA,EACAgQ,EAAA,KACAxR,MACWnD,EAAA2jC,EAGX,OAAA20B,GAAAv8B,SAAA,GAEA,QAAAy8B,GAAAhpD,GACA,GAAAusB,GAAAvsB,EAAAusB,SAAAi9B,EAAAxpD,EAAAnG,OAAA0yB,SAAA9vB,EAAAuD,EAAArM,EAAA61D,EAAAxpD,EAAArM,EAAA,OACA,IAAA44B,EAAAn7B,OAAA,CACA4lC,GAAAh3B,EACA,IAAAypD,IAAAl9B,EAAA,GAAAl4B,EAAAk4B,IAAAn7B,OAAA,GAAAiD,GAAA,CACAoI,IACAuD,EAAA3L,EAAAoI,EAAApI,EAAAg1D,EAAArpD,EAAA/N,EAAAwK,EAAAxK,GACA+N,EAAAvF,EAAAuF,EAAA3L,EAAAo1D,GAEAzpD,EAAA3L,EAAAo1D,MAEOhtD,KACPuD,EAAA3L,EAAAoI,EAAApI,EAAAg1D,EAAArpD,EAAA/N,EAAAwK,EAAAxK,GAEA+N,GAAAnG,OAAA0T,EAAAm8C,EAAA1pD,EAAAvD,EAAAuD,EAAAnG,OAAA0T,GAAAi8C,EAAA,IAEA,QAAAP,GAAAjpD;AACAA,EAAA/N,EAAA1D,EAAAyR,EAAA3L,EAAA2L,EAAAnG,OAAAY,EACAuF,EAAAvF,GAAAuF,EAAAnG,OAAAY,EAEA,QAAAivD,GAAA1pD,EAAAvD,EAAA06B,GACA,GAAA16B,EAAA,CAEA,IADA,GAAAma,GAAA+yC,EAAA3pD,EAAA4pD,EAAA5pD,EAAAk3B,EAAAz6B,EAAAotD,EAAAF,EAAA9vD,OAAA0yB,SAAA,GAAAu9B,EAAAH,EAAAlvD,EAAAsvD,EAAAH,EAAAnvD,EAAAuvD,EAAA9yB,EAAAz8B,EAAAwvD,EAAAJ,EAAApvD,EACAy8B,EAAAP,GAAAO,GAAAyyB,EAAAjzB,GAAAizB,GAAAzyB,GAAAyyB,GACAE,EAAAnzB,GAAAmzB,GACAD,EAAAjzB,GAAAizB,GACAA,EAAAp5D,EAAAwP,EACA4W,EAAAsgB,EAAA7iC,EAAA21D,EAAAL,EAAAt1D,EAAAy1D,EAAAT,EAAAnyB,EAAAjlC,EAAA03D,EAAA13D,GACA2kB,EAAA,IACAggB,GAAAK,GAAAC,EAAAl3B,EAAAm3B,GAAAn3B,EAAA4W,GACAkzC,GAAAlzC,EACAmzC,GAAAnzC,GAEAozC,GAAA9yB,EAAAz8B,EACAqvD,GAAAH,EAAAlvD,EACAwvD,GAAAJ,EAAApvD,EACAsvD,GAAAH,EAAAnvD,CAEAy8B,KAAAP,GAAAizB,KACAA,EAAAzkD,EAAA+xB,EACA0yB,EAAAnvD,GAAAuvD,EAAAD,GAEAJ,IAAAjzB,GAAAmzB,KACAA,EAAA1kD,EAAAwkD,EACAE,EAAApvD,GAAAqvD,EAAAG,EACA9yB,EAAAn3B,GAGA,MAAAm3B,GAEA,QAAAgyB,GAAAl5D,GACAA,EAAA1B,GAAAsE,EAAA,GACA5C,EAAAvB,EAAAuB,EAAA+vB,MAAAntB,EAAA,GAhGA,GAAA6gC,GAAA1+B,GAAAwvD,OAAA9wB,YAAAxe,KAAA,MAAAxoB,MAAA,MAAA28D,EAAA5yB,GAAA5jC,GAAA,KAAAq2D,EAAA,IAiHA,OAfA59B,GAAA+9B,WAAA,SAAA96D,GACA,MAAA4C,WAAAC,QACAi4D,EAAA96D,EACA+8B,GAFA+9B,GAIA/9B,EAAAz4B,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACA83D,EAAA,OAAAr2D,EAAAtE,GAAA46D,EAAA,KACA79B,GAFA49B,EAAA,KAAAr2D,GAIAy4B,EAAA49B,SAAA,SAAA36D,GACA,MAAA4C,WAAAC,QACA83D,EAAA,OAAAr2D,EAAAtE,GAAA,KAAA46D,EACA79B,GAFA49B,EAAAr2D,EAAA,MAIA4gC,GAAAnI,EAAAoI,IAiCA1+B,GAAAwvD,OAAA0F,QAAA,WAEA,QAAAA,GAAA17D,EAAAmF,GACA,GAAAw2D,GAAAh+B,EAAAuH,EAAAzkC,KAAAhC,KAAAuB,EAAAmF,GAAA84B,EAAAN,EAAA,GAAA59B,EAAA,CACAulC,IAAArH,EAAA,SAAAx8B,GACA,GAAAs8B,GAAAt8B,EAAAs8B,QACAA,MAAAn7B,QACAnB,EAAA1B,EAAA8oC,GAAA9K,GACAt8B,EAAAvB,EAAA0oC,GAAA7K,KAEAt8B,EAAA1B,EAAA47D,EAAA57D,GAAA86D,EAAAp5D,EAAAk6D,GAAA,EACAl6D,EAAAvB,EAAA,EACAy7D,EAAAl6D,IAGA,IAAAe,GAAAsmC,GAAA7K,GAAAn7B,EAAAimC,GAAA9K,GAAAnZ,EAAAtiB,EAAAzC,EAAA86D,EAAAr4D,EAAAM,GAAA,EAAA0pB,EAAA1pB,EAAA/C,EAAA86D,EAAA/3D,EAAAN,GAAA,CAQA,OAPA8iC,IAAArH,EAAAy8B,EAAA,SAAAj5D,GACAA,EAAA1B,GAAA0B,EAAA1B,EAAAk+B,EAAAl+B,GAAAsE,EAAA,GACA5C,EAAAvB,GAAA+9B,EAAA/9B,EAAAuB,EAAAvB,GAAAmE,EAAA,IACO,SAAA5C,GACPA,EAAA1B,GAAA0B,EAAA1B,EAAA+kB,IAAA0H,EAAA1H,GAAAzgB,EAAA,GACA5C,EAAAvB,GAAA,GAAA+9B,EAAA/9B,EAAAuB,EAAAvB,EAAA+9B,EAAA/9B,EAAA,IAAAmE,EAAA,KAEAs5B,EAtBA,GAAAuH,GAAA1+B,GAAAwvD,OAAA9wB,YAAAxe,KAAA,MAAAxoB,MAAA,MAAA28D,EAAA5yB,GAAA5jC,GAAA,KAAAq2D,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAA96D,GACA,MAAA4C,WAAAC,QACAi4D,EAAA96D,EACA27D,GAFAb,GAIAa,EAAAr3D,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACA83D,EAAA,OAAAr2D,EAAAtE,GACA27D,GAFAhB,EAAA,KAAAr2D,GAIAq3D,EAAAhB,SAAA,SAAA36D,GACA,MAAA4C,WAAAC,QACA83D,EAAA,OAAAr2D,EAAAtE,GACA27D,GAFAhB,EAAAr2D,EAAA,MAIA4gC,GAAAy2B,EAAAx2B,IAoBA1+B,GAAAwvD,OAAA4F,QAAA,WAEA,QAAA78D,GAAAg/B,EAAA96B,GAEA,IADA,GAAA0iC,GAAAgL,EAAAxrC,EAAA,GAAAC,EAAA24B,EAAAn7B,SACAuC,EAAAC,GACAurC,GAAAhL,EAAA5H,EAAA54B,IAAAjH,OAAA,EAAA+E,EAAA,EAAAA,GACA0iC,EAAAgL,KAAAtuC,MAAAsuC,IAAA,GAAAA,EAAA,EAAAA,EAGA,QAAAkrB,GAAAp6D,GACA,GAAAs8B,GAAAt8B,EAAAs8B,QACA,IAAAA,KAAAn7B,OAAA,CACA,GAAA+iC,GAAAm2B,EAAA12D,EAAAyK,EAAAksD,EAAAt6D,GAAA20C,KAAA4lB,EAAAj+B,EAAAh6B,QAAAkrD,EAAAz3C,IAAA2L,EAAA,UAAA84C,EAAApsD,EAAAid,GAAA,SAAAmvC,EAAApsD,EAAAkd,GAAA,eAAAkvC,EAAA,EAAAx6D,EAAA+vB,MAAA3hB,EAAAkd,GAAAld,EAAAid,GAAAvc,KAAAiD,IAAA3D,EAAAid,GAAAjd,EAAAkd,GAGA,KAFAhuB,EAAAi9D,EAAAnsD,EAAAid,GAAAjd,EAAAkd,GAAAtrB,EAAAvD,OACAk4C,EAAAzF,KAAA,GACAvrC,EAAA42D,EAAAp5D,QAAA,GACAwzC,EAAAx1C,KAAA+kC,EAAAq2B,EAAA52D,EAAA,IACAgxC,EAAAzF,MAAAhL,EAAAgL,KACA,aAAAsrB,IAAAH,EAAAI,EAAA9lB,EAAAjzB,KAAA8rC,GACA+M,EAAA/zC,MACAgnC,EAAA6M,IAEA1lB,EAAAzF,MAAAyF,EAAAnuB,MAAA0oB,KACA3hC,EAAAonC,EAAAjzB,EAAAtT,GAAA,GACAsT,EAAA5S,KAAAiD,IAAA3D,EAAAid,GAAAjd,EAAAkd,IACAqpB,EAAAxzC,OAAAwzC,EAAAzF,KAAA,EACAse,EAAAz3C,IAGA4+B,GAAAxzC,SACAoM,EAAAonC,EAAAjzB,EAAAtT,GAAA,GACAumC,EAAAxzC,OAAAwzC,EAAAzF,KAAA,GAEA5S,EAAAroB,QAAAmmD,IAGA,QAAAM,GAAA16D,GACA,GAAAs8B,GAAAt8B,EAAAs8B,QACA,IAAAA,KAAAn7B,OAAA,CACA,GAAA+iC,GAAA91B,EAAAksD,EAAAt6D,GAAAu6D,EAAAj+B,EAAAh6B,QAAAqyC,IAGA,KAFAr3C,EAAAi9D,EAAAnsD,EAAAid,GAAAjd,EAAAkd,GAAAtrB,EAAAvD,OACAk4C,EAAAzF,KAAA,EACAhL,EAAAq2B,EAAA/zC,OACAmuB,EAAAx1C,KAAA+kC,GACAyQ,EAAAzF,MAAAhL,EAAAgL,KACA,MAAAhL,EAAA9/B,IACAmJ,EAAAonC,EAAAzQ,EAAA9/B,EAAAgK,EAAAid,GAAAjd,EAAAkd,GAAAld,GAAAmsD,EAAAp5D,QACAwzC,EAAAxzC,OAAAwzC,EAAAzF,KAAA,EAGA5S,GAAAroB,QAAAymD,IAGA,QAAAD,GAAA9lB,EAAAjzB,GAEA,IADA,GAAAhR,GAAAxL,EAAAyvC,EAAAzF,KAAAyrB,EAAA,EAAAC,EAAA7kD,IAAArS,EAAA,GAAAC,EAAAgxC,EAAAxzC,SACAuC,EAAAC,IACA+M,EAAAikC,EAAAjxC,GAAAwrC,QACA0rB,EAAAlqD,IAAAkqD,EAAAlqD,GACAA,EAAAiqD,MAAAjqD,GAIA,OAFAxL,MACAwc,KACAxc,EAAA4J,KAAA+C,IAAA6P,EAAAi5C,EAAAE,EAAA31D,KAAAwc,EAAAk5C,EAAAC,IAAA9kD,IAEA,QAAAxI,GAAAonC,EAAAjzB,EAAAtT,EAAA06C,GACA,GAAA78C,GAAAvI,EAAA,GAAAC,EAAAgxC,EAAAxzC,OAAA7C,EAAA8P,EAAA9P,EAAAG,EAAA2P,EAAA3P,EAAAsR,EAAA2R,EAAAvR,EAAAwkC,EAAAzF,KAAAxtB,GAAA,CACA,IAAAA,GAAAtT,EAAAid,GAAA,CAEA,KADAy9B,GAAA/4C,EAAA3B,EAAAkd,MAAAvb,EAAA3B,EAAAkd,MACA5nB,EAAAC,GACAsI,EAAA0oC,EAAAjxC,GACAuI,EAAA3N,IACA2N,EAAAxN,IACAwN,EAAAqf,GAAAvb,EACAzR,GAAA2N,EAAAof,GAAAvc,KAAAiD,IAAA3D,EAAA9P,EAAA8P,EAAAid,GAAA/sB,EAAAyR,EAAAI,EAAAlE,EAAAijC,KAAAn/B,GAAA,EAEA9D,GAAA7H,GAAA,EACA6H,EAAAof,IAAAjd,EAAA9P,EAAA8P,EAAAid,GAAA/sB,EACA8P,EAAA3P,GAAAsR,EACA3B,EAAAkd,IAAAvb,MACO,CAEP,KADA+4C,GAAA/4C,EAAA3B,EAAAid,MAAAtb,EAAA3B,EAAAid,MACA3nB,EAAAC,GACAsI,EAAA0oC,EAAAjxC,GACAuI,EAAA3N,IACA2N,EAAAxN,IACAwN,EAAAof,GAAAtb,EACAtR,GAAAwN,EAAAqf,GAAAxc,KAAAiD,IAAA3D,EAAA3P,EAAA2P,EAAAkd,GAAA7sB,EAAAsR,EAAAI,EAAAlE,EAAAijC,KAAAn/B,GAAA,EAEA9D,GAAA7H,GAAA,EACA6H,EAAAqf,IAAAld,EAAA3P,EAAA2P,EAAAkd,GAAA7sB,EACA2P,EAAA9P,GAAAyR,EACA3B,EAAAid,IAAAtb,GAGA,QAAAoqD,GAAA57D,GACA,GAAA29B,GAAA4+B,GAAAr3B,EAAAllC,GAAAi+B,EAAAN,EAAA,EAOA,OANAM,GAAAl+B,EAAAk+B,EAAA/9B,EAAA,EACA+9B,EAAA//B,OAAA+/B,EAAAnR,GAAAzoB,EAAA,GAAA45B,EAAAlR,GAAA1oB,EAAA,IAA2D45B,EAAAnR,GAAAmR,EAAAlR,GAAA,EAC3DwvC,GAAAr3B,EAAAuzB,QAAAx6B,GACAl/B,GAAAk/B,KAAAnR,GAAAmR,EAAAlR,GAAAkR,EAAA//B,QACAq+D,EAAAJ,EAAAN,GAAA59B,GACAu+B,IAAAD,EAAA5+B,GACAA,EArGA,GAAA4+B,GAAAr3B,EAAA1+B,GAAAwvD,OAAA9wB,YAAAtzB,EAAArB,KAAAqB,MAAAvN,GAAA,KAAA6K,EAAA,KAAA6sD,EAAA/yB,GAAAwzB,GAAA,EAAAP,EAAA,WAAAK,EAAA,MAAA/rD,KAAAyC,KAAA,GA+IA,OAxCA4oD,GAAAv3D,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACAyB,EAAAtE,EACA67D,GAFAv3D,GAIAu3D,EAAA1sD,QAAA,SAAAnP,GAEA,QAAA08D,GAAAh7D,GACA,GAAAiW,GAAA3X,EAAAU,KAAAm7D,EAAAn6D,IAAA+vB,MACA,cAAA9Z,EAAAsxB,GAAAvnC,GAAAwnC,GAAAxnC,EAAA,gBAAAiW,gBAEA,QAAAglD,GAAAj7D,GACA,MAAAwnC,IAAAxnC,EAAA1B,GANA,IAAA4C,UAAAC,OAAA,MAAAsM,EAQA,IAAA9H,EAGA,OAFA20D,GAAA,OAAA7sD,EAAAnP,GAAAipC,GAAA,aAAA5hC,QAAArH,IAAA08D,EAAA,WAAAr1D,GAAArH,YACA28D,KACAd,GAEAA,EAAAhqD,MAAA,SAAA7R,GACA,MAAA4C,WAAAC,QACAgP,EAAA7R,EAAAwQ,KAAAqB,MAAAu4B,OACAyxB,GAFAhqD,GAAAu4B,QAIAyxB,EAAAY,OAAA,SAAAz8D,GACA,MAAA4C,WAAAC,QACA45D,EAAAz8D,EACAw8D,EAAA,KACAX,GAHAY,GAKAZ,EAAAU,MAAA,SAAAv8D,GACA,MAAA4C,WAAAC,QACA05D,EAAAv8D,EACA67D,GAFAU,GAIAV,EAAAK,KAAA,SAAAl8D,GACA,MAAA4C,WAAAC,QACAq5D,EAAAl8D,EAAA,GACA67D,GAFAK,GAIAh3B,GAAA22B,EAAA12B,IA2BA1+B,GAAAu+B,QACAupB,OAAA,SAAAqO,EAAAC,GACA,GAAAx3D,GAAAzC,UAAAC,MAGA,OAFA,GAAAwC,IAAAw3D,EAAA,GACA,EAAAx3D,IAAAu3D,EAAA,GACA,WACA,GAAA58D,GAAAG,EAAAiS,CACA,GACApS,GAAA,EAAAwQ,KAAAw0B,SAAA,EACA7kC,EAAA,EAAAqQ,KAAAw0B,SAAA,EACA5yB,EAAApS,IAAAG,WACSiS,KAAA,EACT,OAAAwqD,GAAAC,EAAA78D,EAAAwQ,KAAAyC,KAAA,GAAAzC,KAAAqH,IAAAzF,QAGA0qD,UAAA,WACA,GAAA93B,GAAAv+B,GAAAu+B,OAAAupB,OAAAzpD,MAAA2B,GAAA7D,UACA,mBACA,MAAA4N,MAAAM,IAAAk0B,OAGA+3B,MAAA,SAAA7wD,GACA,GAAA84B,GAAAv+B,GAAAu+B,OAAAg4B,UAAA9wD,EACA,mBACA,MAAA84B,KAAA94B,IAGA8wD,UAAA,SAAA9wD,GACA,kBACA,OAAAtF,GAAA,EAAAqF,EAAA,EAA8BC,EAAAD,EAAOA,IAAArF,GAAA4J,KAAAw0B,QACrC,OAAAp+B,MAIAH,GAAAzH,QAkCA,IAAA6qC,KACAxuB,MAAA5W,EACAmT,KAAAnT,EAiBAgC,IAAAzH,MAAAC,OAAA,WACA,MAAA+qC,KAAA,WAAA9K,IAAA,GA+FA,IAAA8L,KACApkC,EAAA,EACAyL,EAAA,EACAsF,EAAA,EACAvF,EAAA,EACAvL,EAAA,EASAJ,IAAAzH,MAAA6Y,IAAA,WACA,MAAAozB,IAAAxkC,GAAAzH,MAAAC,SAAAC,QAAA,oBAgEA,IAAAosC,IAAA7kC,GAAA7G,OAAA,OAAAyrC,IACAhwB,MAAA,SAAArb,GACA,OAAAwQ,KAAAoH,MAAA5X,IAEA4X,KAAA,SAAA5X,GACA,OAAAwQ,KAAA6K,OAAArb,IAGAyG,IAAAzH,MAAAmU,IAAA,WACA,MAAAo4B,IAAA9kC,GAAAzH,MAAAC,SAAA,UAyCAwH,GAAAzH,MAAAiU,KAAA,WACA,MAAAxM,IAAAzH,MAAAmU,MAAAwG,SAAA,KAEAlT,GAAAzH,MAAAi+D,QAAA,WACA,MAAAtxB,QACA/0B,EAAA,QACA3U,UA4FAwE,GAAAzH,MAAAk+D,WAAA,WACA,MAAAz2D,IAAAzH,MAAAi+D,UAAA99D,MAAAg+D,KAEA12D,GAAAzH,MAAAo+D,WAAA,WACA,MAAA32D,IAAAzH,MAAAi+D,UAAA99D,MAAAk+D,KAEA52D,GAAAzH,MAAAs+D,YAAA,WACA,MAAA72D,IAAAzH,MAAAi+D,UAAA99D,MAAAo+D,KAEA92D,GAAAzH,MAAAw+D,YAAA,WACA,MAAA/2D,IAAAzH,MAAAi+D,UAAA99D,MAAAs+D,IAEA,IAAAN,KAAA,qFAAA1zD,IAAA4J,IACAgqD,IAAA,+KAAA5zD,IAAA4J,IACAkqD,IAAA,6KAAA9zD,IAAA4J,IACAoqD,IAAA,8KAAAh0D,IAAA4J,GACA5M,IAAAzH,MAAAwtC,SAAA,WACA,MAAAF,YAmCA7lC,GAAAzH,MAAA0+D,SAAA,WACA,MAAA/wB,IAAA,YAiCAlmC,GAAAzH,MAAA2+D,UAAA,WACA,MAAA/wB,KAAA,YAyBAnmC,GAAAzH,MAAA8tC,SAAA,WACA,MAAAD,KAAA,OAuBApmC,GAAAnH,OAIAmH,GAAAnH,IAAAgrB,IAAA,WAEA,QAAAA,KACA,GAAAyX,GAAAvxB,KAAA+C,IAAA,GAAA05B,EAAAnoC,MAAApG,KAAAkE,YAAAo/B,EAAAxxB,KAAA+C,IAAA,GAAA45B,EAAAroC,MAAApG,KAAAkE,YAAAsuB,EAAAmc,EAAAvoC,MAAApG,KAAAkE,WAAA+N,GAAA6c,EAAA+f,EAAAzoC,MAAApG,KAAAkE,WAAA+N,GAAAq3B,EAAAx3B,KAAAwH,IAAAwV,EAAA0D,GAAA2c,EAAA3c,EAAA1D,EAAA,GAEA,IADAuU,EAAAC,IAAA4L,EAAA5L,IAAAD,IAAA6L,GACA5F,GAAA4T,GAAA,MAAAgiB,GAAA57B,EAAA6L,IAAA9L,EAAA67B,EAAA77B,EAAA,EAAA8L,GAAA,OACA,IAAAD,GAAAhjB,EAAAizC,EAAAC,EAAA/4C,EAAAF,EAAA4H,EAAAC,EAAAoF,EAAAC,EAAAiF,EAAAG,EAAA3Q,EAAA,EAAAC,EAAA,EAAAwoB,IAOA,KANA6uB,IAAArwB,EAAA3oC,MAAApG,KAAAkE,YAAA,QACAi7D,EAAAE,IAAAC,GAAAxtD,KAAAyC,KAAA8uB,IAAAC,MAAA+7B,EAAAj5D,MAAApG,KAAAkE,WACAirC,IAAApnB,GAAA,IACAub,IAAAvb,EAAA/V,GAAAmtD,EAAA77B,EAAAxxB,KAAAU,IAAA4sD,KACA/7B,IAAAvb,EAAA9V,GAAAmtD,EAAA97B,EAAAvxB,KAAAU,IAAA4sD,MAEA97B,EAAA,CACAjd,EAAAid,EAAAxxB,KAAA+B,IAAA2e,EAAAzK,GACA5B,EAAAmd,EAAAxxB,KAAAU,IAAAggB,EAAAzK,GACAgG,EAAAuV,EAAAxxB,KAAA+B,IAAAib,EAAA/G,GACAiG,EAAAsV,EAAAxxB,KAAAU,IAAAsc,EAAA/G,EACA,IAAAg4B,GAAAjuC,KAAAwH,IAAAwV,EAAA0D,EAAA,EAAAzK,IAAAlW,GAAA,GACA,IAAAkW,GAAAinB,GAAA3oB,EAAAF,EAAA4H,EAAAC,KAAAmhB,EAAA4Q,EAAA,CACA,GAAAwf,IAAA/sC,EAAA1D,GAAA,CACAzI,GAAAid,EAAAxxB,KAAA+B,IAAA0rD,GACAp5C,EAAAmd,EAAAxxB,KAAAU,IAAA+sD,GACAxxC,EAAAC,EAAA,UAGA3H,GAAAF,EAAA,CAEA,IAAAkd,EAAA,CACAjQ,EAAAiQ,EAAAvxB,KAAA+B,IAAAib,EAAAhH,GACAuL,EAAAgQ,EAAAvxB,KAAAU,IAAAsc,EAAAhH,GACAwQ,EAAA+K,EAAAvxB,KAAA+B,IAAA2e,EAAA1K,GACA2Q,EAAA4K,EAAAvxB,KAAAU,IAAAggB,EAAA1K,EACA,IAAAg4B,GAAAhuC,KAAAwH,IAAAkZ,EAAA1D,EAAA,EAAAhH,IAAAjW,GAAA,GACA,IAAAiW,GAAAknB,GAAA5b,EAAAC,EAAAiF,EAAAG,KAAA,EAAA0W,EAAA2Q,EAAA,CACA,GAAA0f,IAAAhtC,EAAA1D,GAAA,CACAsE,GAAAiQ,EAAAvxB,KAAA+B,IAAA2rD,GACAnsC,EAAAgQ,EAAAvxB,KAAAU,IAAAgtD,GACAlnC,EAAAG,EAAA,UAGArF,GAAAC,EAAA,CAEA,IAAAiW,EAAA3jB,KAAAupB,EAAAp9B,KAAAiD,IAAAjD,KAAAwH,IAAAgqB,EAAAD,GAAA,GAAAo8B,EAAAr5D,MAAApG,KAAAkE,aAAA,MACAgoB,EAAAoX,EAAAD,EAAA8L,EAAA,GACA,IAAAuwB,GAAAxwB,EAAAywB,EAAAzwB,CACA,IAAAr9B,GAAAy3B,EAAA,CACA,GAAAs2B,GAAA,MAAAtnC,GAAAlF,EAAAC,GAAA,MAAAtF,GAAA1H,EAAAF,GAAAkS,IAAAhS,EAAAF,IAAAmS,EAAAG,IAAA1K,EAAAC,IAAAoF,EAAAC,IAAApF,EAAA5H,EAAAu5C,EAAA,GAAA1xC,EAAA/H,EAAAy5C,EAAA,GAAAzxC,EAAAJ,EAAA6xC,EAAA,GAAAxxC,EAAAJ,EAAA4xC,EAAA,GAAAC,EAAA,EAAA/tD,KAAAU,IAAAV,KAAAC,MAAAkc,EAAAE,EAAAD,EAAAE,IAAAtc,KAAAyC,KAAA0Z,IAAAC,KAAApc,KAAAyC,KAAA4Z,IAAAC,OAAA,GAAA0xC,EAAAhuD,KAAAyC,KAAAqrD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAD,GAAA7tD,KAAAiD,IAAAm6B,GAAA7L,EAAAy8B,IAAAD,EAAA,IACAH,EAAA5tD,KAAAiD,IAAAm6B,GAAA5L,EAAAw8B,IAAAD,EAAA,IAEA,SAAA9xC,EAAA,CACA,GAAAgyC,GAAA9wB,GAAA,MAAA3W,GAAAlF,EAAAC,IAAAiF,EAAAG,IAAApS,EAAAF,GAAAmd,EAAAo8B,EAAAvwB,GAAA6wB,EAAA/wB,IAAAlhB,EAAAC,IAAAoF,EAAAC,GAAAiQ,EAAAo8B,EAAAvwB,EACAD,KAAAwwB,EACAnvB,EAAApuC,KAAA,IAAA49D,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAxzC,EAAA,IAAA6zC,EAAA,OAAAz8B,EAAA,IAAAA,EAAA,QAAA6L,EAAAH,GAAA+wB,EAAA,MAAAA,EAAA,MAAAC,EAAA,MAAAA,EAAA,WAAA7wB,EAAA,IAAA6wB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAAxzC,EAAA,IAAA8zC,EAAA,IAEAzvB,EAAApuC,KAAA,IAAA49D,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAxzC,EAAA,IAAA8zC,EAAA,QAGAzvB,GAAApuC,KAAA,IAAAkkB,EAAA,IAAAF,EAEA,UAAAmS,EAAA,CACA,GAAA2nC,GAAAhxB,IAAA5oB,EAAAF,IAAAmS,EAAAG,GAAA4K,GAAAs8B,EAAAxwB,GAAA+wB,EAAAjxB,IAAA7b,EAAAC,GAAA,MAAAtF,GAAA1H,EAAAF,IAAA4H,EAAAC,GAAAqV,GAAAs8B,EAAAxwB,EACAD,KAAAywB,EACApvB,EAAApuC,KAAA,IAAA+9D,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAzzC,EAAA,IAAAg0C,EAAA,OAAA78B,EAAA,IAAAA,EAAA,MAAA8L,EAAAH,GAAAkxB,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAA9wB,EAAA,IAAA8wB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAAzzC,EAAA,IAAA+zC,EAAA,IAEA1vB,EAAApuC,KAAA,IAAA+9D,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAzzC,EAAA,IAAA+zC,EAAA,QAGA1vB,GAAApuC,KAAA,IAAAixB,EAAA,IAAAC,OAGAkd,GAAApuC,KAAA,IAAAkkB,EAAA,IAAAF,GACA,MAAA4H,GAAAwiB,EAAApuC,KAAA,IAAAmhC,EAAA,IAAAA,EAAA,MAAAyc,EAAA,IAAA5Q,EAAA,IAAAphB,EAAA,IAAAC,GACAuiB,EAAApuC,KAAA,IAAAixB,EAAA,IAAAC,GACA,MAAAiF,GAAAiY,EAAApuC,KAAA,IAAAkhC,EAAA,IAAAA,EAAA,MAAAyc,EAAA,MAAA3Q,EAAA,IAAA7W,EAAA,IAAAG,EAGA,OADA8X,GAAApuC,KAAA,KACAouC,EAAAl2B,KAAA,IAEA,QAAA6kD,GAAA57B,EAAA6L,GACA,YAAA7L,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA6L,EAAA,OAAA7L,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA6L,EAAA,MAAA7L,EAhFA,GAAAiL,GAAAD,GAAAG,EAAAD,GAAAixB,EAAApxB,GAAAgxB,EAAAC,GAAA3wB,EAAAD,GAAAG,EAAAD,GAAAG,EAAAD,EAyHA,OAvCAljB,GAAA2iB,YAAA,SAAAx7B,GACA,MAAA7O,WAAAC,QACAoqC,EAAA/4B,GAAAzC,GACA6Y,GAFA2iB,GAIA3iB,EAAA6iB,YAAA,SAAA17B,GACA,MAAA7O,WAAAC,QACAsqC,EAAAj5B,GAAAzC,GACA6Y,GAFA6iB,GAIA7iB,EAAA6zC,aAAA,SAAA1sD,GACA,MAAA7O,WAAAC,QACAs7D,EAAAjqD,GAAAzC,GACA6Y,GAFA6zC,GAIA7zC,EAAAyzC,UAAA,SAAAtsD,GACA,MAAA7O,WAAAC,QACAk7D,EAAAtsD,GAAAusD,MAAA9pD,GAAAzC,GACA6Y,GAFAyzC,GAIAzzC,EAAA+iB,WAAA,SAAA57B,GACA,MAAA7O,WAAAC,QACAwqC,EAAAn5B,GAAAzC,GACA6Y,GAFA+iB,GAIA/iB,EAAAijB,SAAA,SAAA97B,GACA,MAAA7O,WAAAC,QACA0qC,EAAAr5B,GAAAzC,GACA6Y,GAFAijB,GAIAjjB,EAAAmjB,SAAA,SAAAh8B,GACA,MAAA7O,WAAAC,QACA4qC,EAAAv5B,GAAAzC,GACA6Y,GAFAmjB,GAIAnjB,EAAA6kC,SAAA,WACA,GAAA/8C,KAAA66B,EAAAnoC,MAAApG,KAAAkE,aAAAuqC,EAAAroC,MAAApG,KAAAkE,YAAA,EAAAX,IAAAorC,EAAAvoC,MAAApG,KAAAkE,aAAA2qC,EAAAzoC,MAAApG,KAAAkE,YAAA,EAAA+N,EACA,QAAAH,KAAA+B,IAAAtQ,GAAAmQ,EAAA5B,KAAAU,IAAAjP,GAAAmQ,IAEAkY,EAEA,IAAA0zC,IAAA,MAqEAv3D,IAAAnH,IAAAS,KAAA,WACA,MAAA0uC,IAAAhqC,GAEA,IAAAqqC,IAAAroC,GAAAgD,KACAxK,OAAA2vC,GACAiwB,gBAAA9vB,GACAr0B,KAAAs0B,GACA8vB,cAAA5vB,GACA6vB,aAAA5vB,GACA6vB,MAAAnvB,GACAovB,aAAAhvB,GACAivB,eAAAhvB,GACAgmB,OAAA/lB,GACAgvB,SAAA3vB,GACA4vB,gBAAAhwB,GACAiwB,kBAAA9vB,GACA+vB,SAAA7uB,IAEA3B,IAAAn5B,QAAA,SAAArS,EAAAnF,GACAA,EAAAmF,MACAnF,EAAA+jB,OAAA,WAAAjY,KAAA3G,IA8IA,IAAA8sC,KAAA,aAAAC,IAAA,aAAAN,IAAA,cA0CAtpC,IAAAnH,IAAAS,KAAAw/D,OAAA,WACA,GAAAx/D,GAAA0uC,GAAAiC,GAGA,OAFA3wC,GAAA2qB,OAAA3qB,EAAAC,QAAAD,GAAAC,EACAD,EAAAu0B,MAAAv0B,EAAAI,QAAAJ,GAAAI,EACAJ,GAsFAmvC,GAAAp2B,QAAAq2B,GACAA,GAAAr2B,QAAAo2B,GACAzoC,GAAAnH,IAAAsxC,KAAA,WACA,MAAAD,IAAAlsC,IAEAgC,GAAAnH,IAAAsxC,KAAA2uB,OAAA,WACA,GAAA3uB,GAAAD,GAAAD,GAOA,OANAE,GAAAlmB,OAAAkmB,EAAA5wC,QAAA4wC,GAAA5wC,EACA4wC,EAAA3D,YAAA2D,EAAA7rB,SAAA6rB,GAAA7rB,GACA6rB,EAAAzD,YAAAyD,EAAAnkB,SAAAmkB,GAAAnkB,GACAmkB,EAAAtc,MAAAsc,EAAAzwC,QAAAywC,GAAAzwC,EACAywC,EAAAvD,WAAAuD,EAAA/rB,SAAA+rB,GAAA/rB,GACA+rB,EAAArD,SAAAqD,EAAAlkB,SAAAkkB,GAAAlkB,GACAkkB,GAEAnqC,GAAAnH,IAAA82D,MAAA,WAEA,QAAAA,GAAAn2D,EAAAmF,GACA,GAAAwB,GAAAsxC,EAAAx5C,KAAAkG,EAAA3E,EAAAmF,GAAAwR,EAAAshC,EAAAx5C,KAAAiG,EAAA1E,EAAAmF,EACA,WAAAwB,EAAA4f,GAAA8D,EAAA1jB,EAAAwL,EAAAxL,EAAA6f,GAAA7f,EAAA4mB,GAAA5mB,EAAAsqB,KAAAsuC,EAAA54D,EAAAgQ,GAAA6oD,EAAA74D,EAAAwL,EAAAxL,EAAA6f,GAAA7f,EAAAwL,EAAAxL,EAAA4f,IAAAi5C,EAAA74D,EAAAwL,EAAAxL,EAAA6f,GAAA7P,EAAAxE,EAAAwE,EAAA4P,IAAA8D,EAAA1T,EAAAxE,EAAAwE,EAAA6P,GAAA7P,EAAA4W,GAAA5W,EAAAsa,IAAAuuC,EAAA7oD,EAAAxE,EAAAwE,EAAA6P,GAAA7f,EAAAwL,EAAAxL,EAAA4f,KAAA,IAEA,QAAA0xB,GAAAwnB,EAAAnwD,EAAAtP,EAAAmF,GACA,GAAA8yC,GAAA3oC,EAAA7O,KAAAg/D,EAAAz/D,EAAAmF,GAAAgN,EAAAsY,EAAAhqB,KAAAg/D,EAAAxnB,EAAA9yC,GAAA8rB,EAAAmc,EAAA3sC,KAAAg/D,EAAAxnB,EAAA9yC,GAAAuL,GAAA6c,EAAA+f,EAAA7sC,KAAAg/D,EAAAxnB,EAAA9yC,GAAAuL,EACA,QACAyB,IACA8e,KACA1D,KACAhH,IAAApU,EAAA5B,KAAA+B,IAAA2e,GAAA9e,EAAA5B,KAAAU,IAAAggB,IACAzK,IAAArU,EAAA5B,KAAA+B,IAAAib,GAAApb,EAAA5B,KAAAU,IAAAsc,KAGA,QAAAgyC,GAAAv9D,EAAAC,GACA,MAAAD,GAAAivB,IAAAhvB,EAAAgvB,IAAAjvB,EAAAurB,IAAAtrB,EAAAsrB,GAEA,QAAAlD,GAAAlY,EAAAuF,EAAA1V,GACA,UAAAmQ,EAAA,IAAAA,EAAA,SAAAnQ,EAAAsO,IAAA,MAAAoH,EAEA,QAAA8nD,GAAA19B,EAAAvb,EAAAwb,EAAAvb,GACA,eAAAA,EAtBA,GAAA7hB,GAAA8vB,GAAA/vB,EAAAgwB,GAAAjK,EAAA0mB,GAAA/D,EAAAD,GAAAG,EAAAD,EAiDA,OAzBA8oB,GAAA1rC,OAAA,SAAAjZ,GACA,MAAA7O,WAAAC,QACA6nB,EAAAxW,GAAAzC,GACA2kD,GAFA1rC,GAIA0rC,EAAAxxD,OAAA,SAAA6M,GACA,MAAA7O,WAAAC,QACA+B,EAAAsP,GAAAzC,GACA2kD,GAFAxxD,GAIAwxD,EAAAzxD,OAAA,SAAA8M,GACA,MAAA7O,WAAAC,QACA8B,EAAAuP,GAAAzC,GACA2kD,GAFAzxD,GAIAyxD,EAAA/oB,WAAA,SAAA57B,GACA,MAAA7O,WAAAC,QACAwqC,EAAAn5B,GAAAzC,GACA2kD,GAFA/oB,GAIA+oB,EAAA7oB,SAAA,SAAA97B,GACA,MAAA7O,WAAAC,QACA0qC,EAAAr5B,GAAAzC,GACA2kD,GAFA7oB,GAIA6oB,GAKA3vD,GAAAnH,IAAAqgE,SAAA,WAEA,QAAAA,GAAA1/D,EAAAmF,GACA,GAAAohB,GAAA5hB,EAAAlE,KAAAhC,KAAAuB,EAAAmF,GAAAw6D,EAAAj7D,EAAAjE,KAAAhC,KAAAuB,EAAAmF,GAAA8G,GAAAsa,EAAArmB,EAAAy/D,EAAAz/D,GAAA,EAAAwX,GAAA6O,GACAxmB,EAAAwmB,EAAAxmB,EACAG,EAAA+L,IAEAlM,EAAA4/D,EAAA5/D,EACAG,EAAA+L,GACO0zD,EAEP,OADAjoD,KAAAlO,IAAA+oB,GACA,IAAA7a,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAVA,GAAA/S,GAAA8vB,GAAA/vB,EAAAgwB,GAAAnC,EAAA6e,EA2BA,OAfAsuB,GAAA/6D,OAAA,SAAA5E,GACA,MAAA4C,WAAAC,QACA+B,EAAAsP,GAAAlU,GACA2/D,GAFA/6D,GAIA+6D,EAAAh7D,OAAA,SAAA3E,GACA,MAAA4C,WAAAC,QACA8B,EAAAuP,GAAAlU,GACA2/D,GAFAh7D,GAIAg7D,EAAAntC,WAAA,SAAAxyB,GACA,MAAA4C,WAAAC,QACA2vB,EAAAxyB,EACA2/D,GAFAntC,GAIAmtC,GAKAl5D,GAAAnH,IAAAqgE,SAAAJ,OAAA,WACA,GAAAI,GAAAl5D,GAAAnH,IAAAqgE,WAAAntC,EAAA6e,GAAAwuB,EAAAF,EAAAntC,UAIA,OAHAmtC,GAAAntC,WAAA,SAAAxyB,GACA,MAAA4C,WAAAC,OAAAg9D,EAAAvuB,GAAA9e,EAAAxyB,IAAAwyB,GAEAmtC,GAQAl5D,GAAAnH,IAAA2Y,OAAA,WAEA,QAAAA,GAAAhY,EAAAmF,GACA,OAAA06D,GAAA35D,IAAAkB,EAAA3G,KAAAhC,KAAAuB,EAAAmF,KAAAqsC,IAAAntC,EAAA5D,KAAAhC,KAAAuB,EAAAmF,IAFA,GAAAiC,GAAAmqC,GAAAltC,EAAAitC,EAcA,OAVAt5B,GAAA5Q,KAAA,SAAArH,GACA,MAAA4C,WAAAC,QACAwE,EAAA6M,GAAAlU,GACAiY,GAFA5Q,GAIA4Q,EAAA3T,KAAA,SAAAtE,GACA,MAAA4C,WAAAC,QACAyB,EAAA4P,GAAAlU,GACAiY,GAFA3T,GAIA2T,EAYA,IAAA6nD,IAAAr5D,GAAAgD,KACAmuB,OAAA6Z,GACAsuB,MAAA,SAAAz7D,GACA,GAAA8N,GAAA5B,KAAAyC,KAAA3O,EAAA,IACA,cAAA8N,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEA4tD,QAAA,SAAA17D,GACA,GAAAm4B,GAAAjsB,KAAAyC,KAAA3O,GAAA,EAAA27D,KAAAzjC,EAAAC,EAAAwjC,EACA,cAAAxjC,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEA0jC,OAAA,SAAA57D,GACA,GAAA8N,GAAA5B,KAAAyC,KAAA3O,GAAA,CACA,YAAA8N,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEA+tD,gBAAA,SAAA77D,GACA,GAAAk4B,GAAAhsB,KAAAyC,KAAA3O,EAAA87D,IAAA3jC,EAAAD,EAAA4jC,GAAA,CACA,aAAA3jC,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEA4jC,cAAA,SAAA/7D,GACA,GAAAk4B,GAAAhsB,KAAAyC,KAAA3O,EAAA87D,IAAA3jC,EAAAD,EAAA4jC,GAAA,CACA,cAAA3jC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGAh2B,IAAAnH,IAAAghE,YAAAR,GAAA17D,MACA,IAAAg8D,IAAA5vD,KAAAyC,KAAA,GAAAgtD,GAAAzvD,KAAAylB,IAAA,GAAAzjB,GACA/K,IAAAkrC,WAAA,SAAA1tC,GAOA,OANAizC,GAAAx2C,EAAAZ,EAAAy+C,MAAAghB,GAAA33D,EAAA0pC,GAAArtC,GAAAmzC,KAAAzF,EAAA6tB,KACA9pD,KAAAF,KAAAC,MACAu8B,KAAA1S,GACAhqB,MAAA,EACA28B,SAAA,KAEAhnC,EAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GAAS,CAC9CksC,EAAAv3C,KAAAq3C,KACA,QAAA/rC,GAAAzN,KAAAuN,GAAA7G,EAAA,GAAAC,EAAA8G,EAAAtJ,SAAyDuC,EAAAC,IACzD3D,EAAAyK,EAAA/G,KAAAmtC,GAAA7wC,EAAA0D,EAAAwD,EAAA9H,EAAA6xC,GACAuF,EAAAr3C,KAAAa,GAGA,MAAAswC,IAAAoG,EAAAxvC,EAAA9H,IAEA2G,GAAAsqC,UAAA,SAAA9sC,GACA,MAAAvG,MAAAk6C,KAAA,MAAA3zC,EAAA44C,GAAAnM,GAAAY,GAAArtC,KAEA,IAmBAs6C,IAAAihB,GAnBA3iB,GAAAnM,GAAAY,MAmBAL,MAAAsuB,GAAA,CACAtuB,IAAAvxC,KAAA+G,GAAA/G,KACAuxC,GAAA2E,MAAAnvC,GAAAmvC,MACA3E,GAAAvwC,KAAA+F,GAAA/F,KACAuwC,GAAA3tC,KAAAmD,GAAAnD,KACAmC,GAAAksC,WAAA,SAAAtmC,EAAApH,GACA,MAAAoH,MAAAsmC,WAAA4M,GAAAlzC,EAAAsmC,WAAA1tC,GAAAoH,EAAA5F,GAAA4F,YAAAsmC,WAAAtmC,IAEA5F,GAAAksC,WAAApvC,UAAA0uC,GACAA,GAAA1xC,OAAA,SAAAoH,GACA,GAAAuwC,GAAAC,EAAAz2C,EAAAZ,EAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,UAAAqtC,IACAzwC,GAAAD,EAAAC,EACA,QAAAsE,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GAAS,CAC9CksC,EAAAv3C,KAAAq3C,KACA,QAAA/rC,GAAAzN,KAAAuN,GAAA7G,EAAA,GAAAC,EAAA8G,EAAAtJ,SAAyDuC,EAAAC,IACzD3D,EAAAyK,EAAA/G,MAAA+yC,EAAAxwC,EAAAjH,KAAAgB,IAAAgK,SAAAtG,EAAA6G,KACA,YAAAvK,KAAAy2C,EAAAzsC,SAAAhK,EAAAgK,UACA6mC,GAAA4F,EAAA/yC,EAAAwD,EAAA9H,EAAAY,EAAAkH,GAAA9H,IACAo3C,EAAAr3C,KAAAs3C,IAEAD,EAAAr3C,KAAA,MAIA,MAAAmxC,IAAAoG,EAAAxvC,EAAA9H,IAEAmxC,GAAAoG,UAAA,SAAA1wC,GACA,GAAAuwC,GAAAuoB,EAAA/+D,EAAAy2C,EAAAxF,EAAA7xC,EAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,UAAAqtC,IACAzwC,GAAAE,EAAAF,EACA,QAAAsE,GAAA,GAAAC,EAAAxN,KAAAmE,SAAqCoJ,EAAAC,GACrC,OAAAC,GAAAzN,KAAAuN,GAAA7G,EAAA,GAAAC,EAAA8G,EAAAtJ,SAAyDuC,EAAAC,GACzD,GAAA3D,EAAAyK,EAAA/G,GAAA,CACAutC,EAAAjxC,EAAAkH,GAAA9H,GACA2/D,EAAA94D,EAAAjH,KAAAgB,IAAAgK,SAAAtG,EAAA6G,GACAmsC,EAAAv3C,KAAAq3C,KACA,QAAAh1C,GAAA,GAAAyK,EAAA8yD,EAAA59D,SAA+CK,EAAAyK,IAC/CwqC,EAAAsoB,EAAAv9D,KAAAqvC,GAAA4F,EAAAj1C,EAAA0F,EAAA9H,EAAA6xC,GACAuF,EAAAr3C,KAAAs3C,GAKA,MAAAnG,IAAAoG,EAAAxvC,EAAA9H,IAEAmxC,GAAAzkC,OAAA,SAAAA,GACA,GAAA0qC,GAAA/rC,EAAAzK,EAAA02C,IACA,mBAAA5qC,OAAA7B,EAAA6B,GACA,QAAAvB,GAAA,EAAAC,EAAAxN,KAAAmE,OAAoCqJ,EAAAD,EAAOA,IAAA,CAC3CmsC,EAAAv3C,KAAAq3C,KACA,QAAA/rC,GAAAzN,KAAAuN,GAAA7G,EAAA,EAAAC,EAAA8G,EAAAtJ,OAAwDwC,EAAAD,EAAOA,KAC/D1D,EAAAyK,EAAA/G,KAAAoI,EAAA9M,KAAAgB,IAAAgK,SAAAtG,EAAA6G,IACAisC,EAAAr3C,KAAAa,GAIA,MAAAswC,IAAAoG,EAAA15C,KAAAqM,UAAArM,KAAAoC,KAEAmxC,GAAAE,MAAA,SAAAltC,EAAAktC,GACA,GAAArxC,GAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,SACA,OAAAnI,WAAAC,OAAA,EAAAnE,KAAAgD,OAAAkH,GAAA9H,GAAAqxC,MAAAhsC,IAAAlB,GACA8G,EAAArN,KAAA,MAAAyzC,EAAA,SAAAzwC,GACAA,EAAAkH,GAAA9H,GAAAqxC,MAAA7rC,OAAArB,IACK,SAAAvD,GACLA,EAAAkH,GAAA9H,GAAAqxC,MAAA5rC,IAAAtB,EAAAktC,MAWAF,GAAAxxC,KAAA,SAAAigE,EAAAviE,GAMA,QAAA6J,KACAtJ,KAAAuJ,gBAAAhD,GAEA,QAAAiD,KACAxJ,KAAAyJ,kBAAAlD,EAAAmD,MAAAnD,EAAAoD,OAEA,QAAAs4D,GAAAz+D,GACA,aAAAA,EAAA8F,GAAA9F,GAAA,cACA,GAAAkD,GAAAnD,EAAAvD,KAAAqL,aAAA9E,EACA,OAAAhD,KAAAC,IAAAkD,EAAAghB,EAAAnkB,EAAAC,GAAA,SAAA0U,GACAlY,KAAA6J,aAAAtD,EAAAG,EAAAwR,QAIA,QAAAgqD,GAAA1+D,GACA,aAAAA,EAAAgG,GAAAhG,GAAA,cACA,GAAAkD,GAAAnD,EAAAvD,KAAAi6C,eAAA1zC,EAAAmD,MAAAnD,EAAAoD,MACA,OAAApG,KAAAC,IAAAkD,EAAAghB,EAAAnkB,EAAAC,GAAA,SAAA0U,GACAlY,KAAA+J,eAAAxD,EAAAmD,MAAAnD,EAAAoD,MAAAjD,EAAAwR,QAvBA,GAAAhU,UAAAC,OAAA,GACA,IAAA1E,IAAAuiE,GAAAhiE,KAAA+B,KAAAtC,EAAAuiE,EAAAviE,GACA,OAAAO,MAEA,GAAA0nB,GAAA,aAAAs6C,EAAAr9B,GAAAnE,GAAAj6B,EAAAwB,GAAAmC,GAAAC,QAAA63D,EAuBA,OAAAxuB,IAAAxzC,KAAA,QAAAgiE,EAAAviE,EAAA8G,EAAAoD,MAAAu4D,EAAAD,IAEA1uB,GAAA0uB,UAAA,SAAAD,EAAAvuB,GAEA,QAAAwuB,GAAA1gE,EAAAmF,GACA,GAAAmK,GAAA4iC,EAAAzxC,KAAAhC,KAAAuB,EAAAmF,EAAA1G,KAAAqL,aAAA9E,GACA,OAAAsK,IAAA,SAAAqH,GACAlY,KAAA6J,aAAAtD,EAAAsK,EAAAqH,KAGA,QAAAgqD,GAAA3gE,EAAAmF,GACA,GAAAmK,GAAA4iC,EAAAzxC,KAAAhC,KAAAuB,EAAAmF,EAAA1G,KAAAi6C,eAAA1zC,EAAAmD,MAAAnD,EAAAoD,OACA,OAAAkH,IAAA,SAAAqH,GACAlY,KAAA+J,eAAAxD,EAAAmD,MAAAnD,EAAAoD,MAAAkH,EAAAqH,KAVA,GAAA3R,GAAAwB,GAAAmC,GAAAC,QAAA63D,EAaA,OAAAhiE,MAAAyzC,MAAA,QAAAuuB,EAAAz7D,EAAAoD,MAAAu4D,EAAAD,IAEA1uB,GAAA5nC,MAAA,SAAApF,EAAA9G,EAAAgM,GAUA,QAAAC,KACA1L,KAAA2L,MAAAC,eAAArF,GAEA,QAAA47D,GAAA3+D,GACA,aAAAA,EAAAkI,GAAAlI,GAAA,cACA,GAAAkD,GAAAnD,EAAAH,EAAApD,MAAAq6C,iBAAAr6C,KAAA,MAAAs6C,iBAAA/zC,EACA,OAAAhD,KAAAC,IAAAkD,EAAA85B,GAAAj9B,EAAAC,GAAA,SAAA0U,GACAlY,KAAA2L,MAAAG,YAAAvF,EAAAG,EAAAwR,GAAAzM,OAhBA,GAAA9E,GAAAzC,UAAAC,MACA,MAAAwC,EAAA,CACA,mBAAAJ,GAAA,CACA,EAAAI,IAAAlH,EAAA,GACA,KAAAgM,IAAAlF,GAAAvG,KAAA2L,MAAAF,EAAAlF,EAAAkF,GAAAhM,EACA,OAAAO,MAEAyL,EAAA,GAaA,MAAA+nC,IAAAxzC,KAAA,SAAAuG,EAAA9G,EAAA0iE,IAEA5uB,GAAA6uB,WAAA,SAAA77D,EAAAktC,EAAAhoC,GAEA,QAAA22D,GAAA7gE,EAAAmF,GACA,GAAAmK,GAAA4iC,EAAAzxC,KAAAhC,KAAAuB,EAAAmF,EAAAtD,EAAApD,MAAAq6C,iBAAAr6C,KAAA,MAAAs6C,iBAAA/zC,GACA,OAAAsK,IAAA,SAAAqH,GACAlY,KAAA2L,MAAAG,YAAAvF,EAAAsK,EAAAqH,GAAAzM,IAGA,MAPAvH,WAAAC,OAAA,IAAAsH,EAAA,IAOAzL,KAAAyzC,MAAA,SAAAltC,EAAA67D,IAEA7uB,GAAAgH,KAAA,SAAA96C,GACA,MAAA+zC,IAAAxzC,KAAA,OAAAP,EAAAi0C,KAQAH,GAAA3rC,OAAA,WACA,GAAAsC,GAAAlK,KAAAqM,SACA,OAAArM,MAAAk6C,KAAA,4BACA,GAAAjhC,EACAjZ,MAAAkK,GAAAkpC,MAAA,IAAAn6B,EAAAjZ,KAAA6M,aAAAoM,EAAAnM,YAAA9M,SAGAuzC,GAAAe,KAAA,SAAA70C,GACA,GAAA2C,GAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,SACA,OAAAnI,WAAAC,OAAA,EAAAnE,KAAAgD,OAAAkH,GAAA9H,GAAAkyC,MACA,kBAAA70C,OAAAsI,GAAAusC,KAAAluC,MAAA2B,GAAA7D,YACAmJ,EAAArN,KAAA,SAAAgD,GACAA,EAAAkH,GAAA9H,GAAAkyC,KAAA70C,MAGA8zC,GAAA37B,MAAA,SAAAnY,GACA,GAAA2C,GAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,SACA,OAAAnI,WAAAC,OAAA,EAAAnE,KAAAgD,OAAAkH,GAAA9H,GAAAwV,MACAvK,EAAArN,KAAA,kBAAAP,GAAA,SAAAuD,EAAA0D,EAAA6G,GACAvK,EAAAkH,GAAA9H,GAAAwV,OAAAnY,EAAAuC,KAAAgB,IAAAgK,SAAAtG,EAAA6G,KACK9N,KAAA,SAAAuD,GACLA,EAAAkH,GAAA9H,GAAAwV,MAAAnY,MAGA8zC,GAAAgB,SAAA,SAAA90C,GACA,GAAA2C,GAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,SACA,OAAAnI,WAAAC,OAAA,EAAAnE,KAAAgD,OAAAkH,GAAA9H,GAAAmyC,SACAlnC,EAAArN,KAAA,kBAAAP,GAAA,SAAAuD,EAAA0D,EAAA6G,GACAvK,EAAAkH,GAAA9H,GAAAmyC,SAAAziC,KAAA+C,IAAA,EAAApV,EAAAuC,KAAAgB,IAAAgK,SAAAtG,EAAA6G,MACK9N,EAAAqS,KAAA+C,IAAA,EAAApV,GAAA,SAAAuD,GACLA,EAAAkH,GAAA9H,GAAAmyC,SAAA90C,MAGA8zC,GAAA2G,KAAA,SAAAvxC,EAAAnB,GACA,GAAApF,GAAApC,KAAAoC,GAAA8H,EAAAlK,KAAAqM,SACA,IAAAnI,UAAAC,OAAA,GACA,GAAA2vC,GAAAguB,GAAAO,EAAAxhB,EACA,KACAA,GAAAz+C,EACAiL,EAAArN,KAAA,SAAAgD,EAAA0D,EAAA6G,GACAu0D,GAAA9+D,EAAAkH,GAAA9H,GACAuG,EAAA3G,KAAAgB,IAAAgK,SAAAtG,EAAA6G,KAEO,QACPu0D,GAAAhuB,EACA+M,GAAAwhB,OAGAh1D,GAAArN,KAAA,SAAAgD,GACA,GAAAixC,GAAAjxC,EAAAkH,GAAA9H,IACA6xC,EAAA/sC,QAAA+sC,EAAA/sC,MAAAa,GAAAd,SAAA,6BAAAK,GAAAqB,EAAAnB,IAGA,OAAAxH,OAEAuzC,GAAAU,WAAA,WAEA,OADAuF,GAAA/rC,EAAAzK,EAAAixC,EAAAquB,EAAAtiE,KAAAoC,GAAAmgE,IAAAV,GAAA33D,EAAAlK,KAAAqM,UAAAqtC,KACAnsC,EAAA,EAAAC,EAAAxN,KAAAmE,OAAoCqJ,EAAAD,EAAOA,IAAA,CAC3CmsC,EAAAv3C,KAAAq3C,KACA,QAAA/rC,GAAAzN,KAAAuN,GAAA7G,EAAA,EAAAC,EAAA8G,EAAAtJ,OAAwDwC,EAAAD,EAAOA,KAC/D1D,EAAAyK,EAAA/G,MACAutC,EAAAjxC,EAAAkH,GAAAo4D,GACAzuB,GAAA7wC,EAAA0D,EAAAwD,EAAAq4D,GACAvqD,KAAAi8B,EAAAj8B,KACAs8B,KAAAL,EAAAK,KACA18B,MAAAq8B,EAAAr8B,MAAAq8B,EAAAM,SACAA,SAAAN,EAAAM,YAGAiF,EAAAr3C,KAAAa,GAGA,MAAAswC,IAAAoG,EAAAxvC,EAAAq4D,IAgFAx6D,GAAAnH,IAAAC,KAAA,WAEA,QAAAA,GAAA8S,GACAA,EAAAumC,KAAA,WACA,GAEAsoB,GAFA7uD,EAAA5L,GAAAlG,OAAA7B,MACAq/C,EAAAr/C,KAAA0+C,WAAAp+C,EAAA2/C,EAAAjgD,KAAA0+C,UAAAp+C,EAAAyrC,OACA/qC,EAAA,MAAAyhE,EAAAxiB,EAAAj/C,MAAAi/C,EAAAj/C,MAAAoF,MAAA65C,EAAAyiB,GAAAziB,EAAAz/C,SAAAiiE,EAAAxhE,EAAA,MAAA0hE,EAAA1iB,EAAAh/C,WAAAg/C,EAAAh/C,WAAAmF,MAAA65C,EAAAyiB,GAAA38D,EAAA48D,EAAAvuB,EAAAzgC,EAAAgmC,UAAA,SAAA/5C,KAAAoB,EAAAi/C,GAAA2iB,EAAAxuB,EAAAtmC,QAAAktB,OAAA,eAAAj5B,KAAA,gBAAA4J,MAAA,UAAAga,IAAAk9C,EAAA96D,GAAAksC,WAAAG,EAAAgH,QAAAzvC,MAAA,UAAAga,IAAA/d,SAAAk7D,EAAA/6D,GAAAksC,WAAAG,EAAAyE,SAAAltC,MAAA,aAAAo3D,EAAAjxD,KAAA+C,IAAAmuD,EAAA,GAAAC,EACAxiE,EAAAkqC,GAAAsV,GAAA1P,EAAA58B,EAAAgmC,UAAA,WAAA/5C,MAAA,IAAAsjE,GAAA3yB,EAAAziC,QAAAhM,OAAA,QAAAC,KAAA,kBACAgG,GAAAksC,WAAA1D,GACAqyB,GAAA9gE,OAAA,QACA8gE,EAAA9gE,OAAA,OACA,IAAAisB,GAAAqF,EAAApF,EAAAqF,EAAA8vC,EAAAP,EAAA/gE,OAAA,QAAAuhE,EAAAN,EAAAjhE,OAAA,QAAA04C,EAAAnG,EAAAvyC,OAAA,QAAA04C,KAAAt5C,GAAAoiE,EAAAT,EAAA/gE,OAAA,QAAAyhE,EAAAR,EAAAjhE,OAAA,QAAA6Y,EAAA,QAAA5Z,GAAA,SAAAA,EAAA,IAcA,IAbA,WAAAA,GAAA,QAAAA,GACA0hE,EAAAhuB,GAAAzmB,EAAA,IAAAC,EAAA,IAAAoF,EAAA,KAAAC,EAAA,KACAknB,EAAAx4C,KAAA,OAAA2Y,EAAA,eAAA/O,MAAA,wBACAu3D,EAAAnhE,KAAA,QAAAtB,EAAA,OAAAia,EAAA6oD,EAAA,MAAA9iE,EAAA,OAAAia,EAAA6oD,KAEAf,EAAA/tB,GAAA1mB,EAAA,IAAAC,EAAA,IAAAoF,EAAA,KAAAC,EAAA,KACAknB,EAAAx4C,KAAA,cAAA4J,MAAA,gBAAA+O,EAAA,eACAwoD,EAAAnhE,KAAA,QAAA2Y,EAAA6oD,EAAA,IAAA9iE,EAAA,SAAAA,EAAA,OAAAia,EAAA6oD,IAEAJ,EAAAphE,KAAAsxB,EAAA3Y,EAAAsoD,GACAK,EAAAthE,KAAAisB,EAAAtT,EAAAqoD,GACAK,EAAArhE,KAAAqxB,EAAA,GAAArxB,KAAAsxB,EAAA3Y,EAAAsoD,GACAM,EAAAvhE,KAAAgsB,EAAA,GAAAhsB,KAAAisB,EAAAtT,EAAAqoD,GACA9iB,EAAA7S,UAAA,CACA,GAAA9rC,GAAA2+C,EAAA5xB,EAAA/sB,EAAA8rC,YAAA,CACAiS,GAAAY,EAAA,SAAA1+C,GACA,MAAAD,GAAAC,GAAA8sB,OAESgxB,GAAAjS,UACTiS,EAAAY,EAEA4iB,EAAA7gE,KAAAwgE,EAAAviB,EAAAZ,EAEAujB,GAAA5gE,KAAAwgE,EAAAnjB,EAAAY,GACA6iB,EAAA9gE,KAAAwgE,EAAAviB,OAnCA,GAAA0iB,GAAAriE,EAAAyH,GAAAzH,MAAAC,SAAAO,EAAA0iE,GAAAR,EAAA,EAAAO,EAAA,EAAAN,EAAA,EAAAP,GAAA,IAAAD,EAAA,IAwFA,OAlDA5hE,GAAAP,MAAA,SAAAgB,GACA,MAAA4C,WAAAC,QACA7D,EAAAgB,EACAT,GAFAP,GAIAO,EAAAC,OAAA,SAAAQ,GACA,MAAA4C,WAAAC,QACArD,EAAAQ,IAAAmiE,IAAAniE,EAAA,GAAAkiE,GACA3iE,GAFAC,GAIAD,EAAAG,MAAA,WACA,MAAAkD,WAAAC,QACAu+D,EAAAj0D,GAAAvK,WACArD,GAFA6hE,GAIA7hE,EAAA4hE,WAAA,SAAAnhE,GACA,MAAA4C,WAAAC,QACAs+D,EAAAnhE,EACAT,GAFA4hE,GAIA5hE,EAAAI,WAAA,SAAAK,GACA,MAAA4C,WAAAC,QACAw+D,EAAArhE,EACAT,GAFA8hE,GAIA9hE,EAAAE,SAAA,SAAAO,GACA,GAAAqF,GAAAzC,UAAAC,MACA,OAAAwC,IACAq8D,GAAA1hE,EACAiiE,GAAAr/D,UAAAyC,EAAA,GACA9F,GAHAmiE,GAKAniE,EAAAmiE,cAAA,SAAA1hE,GACA,MAAA4C,WAAAC,QACA6+D,GAAA1hE,EACAT,GAFAmiE,GAIAniE,EAAA0iE,cAAA,SAAAjiE,GACA,MAAA4C,WAAAC,QACAo/D,GAAAjiE,EACAT,GAFA0iE,GAIA1iE,EAAAoiE,YAAA,SAAA3hE,GACA,MAAA4C,WAAAC,QACA8+D,GAAA3hE,EACAT,GAFAoiE,GAIApiE,EAAA6iE,cAAA,WACA,MAAAx/D,WAAAC,QAAAtD,GAEAA,EAEA,IAAA2iE,IAAA,SAAAC,IACAjzD,IAAA,EACAnM,MAAA,EACAu2D,OAAA,EACA72D,KAAA,EAcAgE,IAAAnH,IAAA+iE,MAAA,WAEA,QAAAA,GAAAhwD,GACAA,EAAAumC,KAAA,WACA,GAAAvmC,GAAA5L,GAAAlG,OAAA7B,MAAA2L,MAAA,wBAAAA,MAAA,+CAAArE,GAAA,kBAAAs8D,GAAAt8D,GAAA,mBAAAs8D,GACAC,EAAAlwD,EAAAgmC,UAAA,eAAA/5C,MAAA,GACAikE,GAAA/1D,QAAAhM,OAAA,QAAAC,KAAA,sBAAA4J,MAAA,uBAAAA,MAAA,sBACAgI,EAAAgmC,UAAA,WAAA/5C,MAAA,IAAAkO,QAAAhM,OAAA,QAAAC,KAAA,kBAAA4J,MAAA,gBACA,IAAAm4D,GAAAnwD,EAAAgmC,UAAA,WAAA/5C,KAAAmkE,EAAAh+D,EACA+9D,GAAA1oB,OAAAxzC,SACAk8D,EAAAh2D,QAAAhM,OAAA,KAAAC,KAAA,iBAAAR,GACA,gBAAAA,IACSoK,MAAA,kBAAApK,GACT,MAAAyiE,IAAAziE,KACSO,OAAA,QAAAC,KAAA,aAAAR,GACT,cAAAgK,KAAAhK,GAAA,UACSQ,KAAA,aAAAR,GACT,cAAAgK,KAAAhK,GAAA,UACSQ,KAAA,WAAAA,KAAA,YAAA4J,MAAA,uBACTm4D,EAAAn4D,MAAA,UAAAg4D,EAAAzrB,QAAA,YACA,IAAAz3C,GAAAwjE,EAAAl8D,GAAAksC,WAAAtgC,GAAAuwD,EAAAn8D,GAAAksC,WAAA4vB,EACAviE,KACAb,EAAAkqC,GAAArpC,GACA4iE,EAAAniE,KAAA,IAAAtB,EAAA,IAAAsB,KAAA,QAAAtB,EAAA,GAAAA,EAAA,IACA0jE,EAAAF,IAEAxiE,IACAhB,EAAAkqC,GAAAlpC,GACAyiE,EAAAniE,KAAA,IAAAtB,EAAA,IAAAsB,KAAA,SAAAtB,EAAA,GAAAA,EAAA,IACA2jE,EAAAH,IAEAI,EAAAJ,KAyDA,QAAAI,GAAA1wD,GACAA,EAAAgmC,UAAA,WAAA53C,KAAA,qBAAAR,GACA,mBAAA+iE,GAAA,KAAA/4D,KAAAhK,IAAA,IAAAgjE,GAAA,KAAAh5D,KAAAhK,IAAA,MAGA,QAAA4iE,GAAAxwD,GACAA,EAAA9R,OAAA,WAAAE,KAAA,IAAAuiE,EAAA,IACA3wD,EAAAgmC,UAAA,2BAAA53C,KAAA,QAAAuiE,EAAA,GAAAA,EAAA,IAEA,QAAAF,GAAAzwD,GACAA,EAAA9R,OAAA,WAAAE,KAAA,IAAAwiE,EAAA,IACA5wD,EAAAgmC,UAAA,2BAAA53C,KAAA,SAAAwiE,EAAA,GAAAA,EAAA,IAEA,QAAAX,KAwBA,QAAAY,KACA,IAAAz8D,GAAAb,MAAAu9D,UACAC,IACArwC,EAAA,KACA4oB,EAAA,IAAAqnB,EAAA,GACArnB,EAAA,IAAAsnB,EAAA,GACAG,EAAA,GAEA58D,KAGA,QAAA68D,KACA,IAAA58D,GAAAb,MAAAu9D,SAAA,GAAAC,IACAznB,EAAA,IAAAqnB,EAAA,GACArnB,EAAA,IAAAsnB,EAAA,GACAG,EAAA,EACA58D,KAGA,QAAA88D,KACA,GAAA10D,GAAAnI,GAAA4zC,MAAA11C,GAAAo2C,GAAA,CACAhgC,KACAnM,EAAA,IAAAmM,EAAA,GACAnM,EAAA,IAAAmM,EAAA,IAEAqoD,IACA38D,GAAAb,MAAA29D,QACAxwC,QAAAiwC,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAtnB,EAAA,GAAAqnB,IAAAp0D,EAAA,GAAAmkB,EAAA,KACA4oB,EAAA,GAAAsnB,IAAAr0D,EAAA,GAAAmkB,EAAA,MACWA,EAAA,MAEXywC,GAAAC,EAAA70D,EAAA5O,EAAA,KACA6iE,EAAAxwD,GACA0oC,GAAA,GAEA2oB,GAAAD,EAAA70D,EAAAzO,EAAA,KACA2iE,EAAAzwD,GACA0oC,GAAA,GAEAA,IACAgoB,EAAA1wD,GACAsxD,GACAt8D,KAAA,QACA60D,KAAAkH,EAAA,mBAIA,QAAAK,GAAA70D,EAAA5P,EAAAoG,GACA,GAAAqO,GAAAF,EAAApU,EAAAkqC,GAAArqC,GAAA+iC,EAAA5iC,EAAA,GAAA6iC,EAAA7iC,EAAA,GAAA8P,EAAA0sC,EAAAv2C,GAAAs1B,EAAAt1B,EAAA69D,EAAAD,EAAA1+D,EAAAo2B,EAAA,GAAAA,EAAA,EAiBA,OAhBA0oC,KACArhC,GAAA9yB,EACA+yB,GAAA19B,EAAA2K,GAEAwE,GAAArO,EAAAw+D,EAAAC,GAAArzD,KAAA+C,IAAAwuB,EAAAvxB,KAAAiD,IAAAuuB,EAAApzB,EAAAxJ,KAAAwJ,EAAAxJ,GACAg+D,EACA7vD,GAAAE,GAAAxE,GAAA3K,GAEAyuB,IAAA9jB,EAAAuB,KAAA+C,IAAAwuB,EAAAvxB,KAAAiD,IAAAuuB,EAAA,EAAAjP,EAAA3tB,GAAAqO,KACAA,EAAAxE,GACAsE,EAAAE,EACAA,EAAAxE,GAEAsE,EAAAtE,GAGAyrB,EAAA,IAAAjnB,GAAAinB,EAAA,IAAAnnB,GACAnO,EAAA0+D,EAAA,KAAsCC,EAAA,KACtCrpC,EAAA,GAAAjnB,EACAinB,EAAA,GAAAnnB,GACA,GAJA,OAOA,QAAAywD,KACAV,IACAjxD,EAAAhI,MAAA,wBAAAguC,UAAA,WAAAhuC,MAAA,UAAAg4D,EAAAzrB,QAAA,aACAnwC,GAAAlG,OAAA,QAAA8J,MAAA,eACA6D,EAAAlI,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAw1C,IACAmoB,GACAt8D,KAAA,aAvGA,GAAA0rB,GAAAhY,EAAApW,EAAAjG,KAAAulE,EAAAx9D,GAAAlG,OAAAkG,GAAAb,MAAAjB,QAAAg/D,EAAA/9D,EAAAoB,GAAArC,EAAA/B,WAAAyP,EAAA5L,GAAAlG,OAAAoE,GAAAu/D,EAAAD,EAAAlqB,QAAAypB,GAAA,UAAAv5D,KAAAi6D,IAAAlkE,EAAA0jE,GAAA,UAAAz5D,KAAAi6D,IAAA/jE,EAAAijE,EAAAa,EAAAprB,QAAA,UAAA2C,EAAAztC,GAAApJ,GAAAg3C,EAAAl1C,GAAA4zC,MAAA11C,GACAuJ,EAAAzH,GAAAlG,OAAAuB,EAAA6C,IAAAqB,GAAA,gBAAAk9D,GAAAl9D,GAAA,cAAAq9D,EAOA,IANA58D,GAAAb,MAAA6I,eACAP,EAAAlI,GAAA,kBAAAs9D,GAAAt9D,GAAA,iBAAAg+D,GAEA91D,EAAAlI,GAAA,kBAAAs9D,GAAAt9D,GAAA,gBAAAg+D,GAEA3xD,EAAA0/B,YAAAsG,UAAA,KAAAtG,YACAqxB,EACAznB,EAAA,GAAAqnB,EAAA,GAAArnB,EAAA,GACAA,EAAA,GAAAsnB,EAAA,GAAAtnB,EAAA,OACO,IAAAuoB,EAAA,CACP,GAAAC,IAAA,KAAAl6D,KAAAi6D,GAAAE,GAAA,KAAAn6D,KAAAi6D,EACAnpD,IAAAioD,EAAA,EAAAmB,GAAAxoB,EAAA,GAAAsnB,EAAA,EAAAmB,GAAAzoB,EAAA,IACAA,EAAA,GAAAqnB,EAAAmB,GACAxoB,EAAA,GAAAsnB,EAAAmB,OACO39D,IAAAb,MAAA29D,SAAAxwC,EAAA4oB,EAAA33C,QACPqO,GAAAhI,MAAA,yBAAAguC,UAAA,WAAAhuC,MAAA,gBACA5D,GAAAlG,OAAA,QAAA8J,MAAA,SAAA45D,EAAA55D,MAAA,WACAs5D,GACAt8D,KAAA,eAEAi8D,IA3HA,GAAAS,GAAAD,EAAAl+D,EAAAmB,EAAAs7D,EAAA,iCAAAriE,EAAA,KAAAG,EAAA,KAAA6iE,GAAA,KAAAC,GAAA,KAAAY,GAAA,EAAAD,GAAA,EAAAnB,EAAA4B,GAAA,EAoRA,OAnPAhC,GAAAz8D,MAAA,SAAAyM,GACAA,EAAAumC,KAAA,WACA,GAAA+qB,GAAA/9D,EAAAoB,GAAAtI,KAAAkE,WAAA0hE,GACAtkE,EAAAgjE,EACA7iE,EAAA8iE,EACA79D,EAAA2+D,EACA93D,EAAA63D,GACSS,EAAA7lE,KAAA0+C,WAAAknB,CACT5lE,MAAA0+C,UAAAknB,EACA/kB,GACA94C,GAAAlG,OAAA7B,MAAAi0C,aAAAiG,KAAA,yBACAmrB,EAAAQ,EAAAn/D,EACA0+D,EAAAS,EAAAt4D,EACA+2D,EAAAuB,EAAAvkE,EACAijE,EAAAsB,EAAApkE,EACAwjE,GACAt8D,KAAA,iBAEW8qC,MAAA,yBACX,GAAApG,GAAAlM,GAAAmjC,EAAAsB,EAAAtkE,GAAAwkE,EAAA3kC,GAAAojC,EAAAqB,EAAAnkE,EAEA,OADA4jE,GAAAD,EAAA,KACA,SAAAltD,GACAosD,EAAAsB,EAAAtkE,EAAA+rC,EAAAn1B,GACAqsD,EAAAqB,EAAAnkE,EAAAqkE,EAAA5tD,GACA+sD,GACAt8D,KAAA,QACA60D,KAAA,cAGWtjB,KAAA,uBACXmrB,EAAAO,EAAAl/D,EACA0+D,EAAAQ,EAAAr4D,EACA03D,GACAt8D,KAAA,QACA60D,KAAA,WAEAyH,GACAt8D,KAAA,gBAIAs8D,GACAt8D,KAAA,eAEAs8D,GACAt8D,KAAA,QACA60D,KAAA,WAEAyH,GACAt8D,KAAA,iBA8HAg7D,EAAAriE,EAAA,SAAA8F,GACA,MAAAlD,WAAAC,QACA7C,EAAA8F,EACA28D,EAAA4B,IAAArkE,GAAA,GAAAG,GACAkiE,GAHAriE,GAKAqiE,EAAAliE,EAAA,SAAA2F,GACA,MAAAlD,WAAAC,QACA1C,EAAA2F,EACA28D,EAAA4B,IAAArkE,GAAA,GAAAG,GACAkiE,GAHAliE,GAKAkiE,EAAAp4B,MAAA,SAAAnkC,GACA,MAAAlD,WAAAC,QACA7C,GAAAG,GAAA0jE,IAAA/9D,EAAA,GAAA89D,IAAA99D,EAAA,IAAmD9F,EAAA6jE,IAAA/9D,EAA0B3F,IAAAyjE,IAAA99D,GAC7Eu8D,GAFAriE,GAAAG,GAAA0jE,EAAAD,GAAA5jE,EAAA6jE,EAAA1jE,EAAAyjE,EAAA,MAIAvB,EAAA3nC,OAAA,SAAA50B,GACA,GAAAif,GAAA0H,EAAA5H,EAAA6H,EAAA9V,CACA,OAAAhU,WAAAC,QAqBA7C,IACA+kB,EAAAjf,EAAA,GAAA2mB,EAAA3mB,EAAA,GACA3F,IAAA4kB,IAAA,GAAA0H,IAAA,IACAs3C,GAAAh/C,EAAA0H,GACAzsB,EAAA+lB,SAAAhB,EAAA/kB,EAAA+kB,GAAA0H,EAAAzsB,EAAAysB,IACA1H,EAAA0H,IAAA7V,EAAAmO,IAAA0H,IAAA7V,GACAmO,GAAAi+C,EAAA,IAAAv2C,GAAAu2C,EAAA,KAAAA,GAAAj+C,EAAA0H,KAEAtsB,IACA0kB,EAAA/e,EAAA,GAAA4mB,EAAA5mB,EAAA,GACA9F,IAAA6kB,IAAA,GAAA6H,IAAA,IACAo3C,GAAAj/C,EAAA6H,GACAvsB,EAAA4lB,SAAAlB,EAAA1kB,EAAA0kB,GAAA6H,EAAAvsB,EAAAusB,IACA7H,EAAA6H,IAAA9V,EAAAiO,IAAA6H,IAAA9V,GACAiO,GAAAo+C,EAAA,IAAAv2C,GAAAu2C,EAAA,KAAAA,GAAAp+C,EAAA6H,KAEA21C,IApCAriE,IACA+jE,GACAh/C,EAAAg/C,EAAA,GAAAt3C,EAAAs3C,EAAA,KAEAh/C,EAAAi+C,EAAA,GAAAv2C,EAAAu2C,EAAA,GACAhjE,EAAA+lB,SAAAhB,EAAA/kB,EAAA+lB,OAAAhB,GAAA0H,EAAAzsB,EAAA+lB,OAAA0G,IACA1H,EAAA0H,IAAA7V,EAAAmO,IAAA0H,IAAA7V,KAGAzW,IACA2jE,GACAj/C,EAAAi/C,EAAA,GAAAp3C,EAAAo3C,EAAA,KAEAj/C,EAAAo+C,EAAA,GAAAv2C,EAAAu2C,EAAA,GACA9iE,EAAA4lB,SAAAlB,EAAA1kB,EAAA4lB,OAAAlB,GAAA6H,EAAAvsB,EAAA4lB,OAAA2G,IACA7H,EAAA6H,IAAA9V,EAAAiO,IAAA6H,IAAA9V,KAGA5W,GAAAG,IAAA4kB,EAAAF,IAAA4H,EAAAC,IAAA1sB,GAAA+kB,EAAA0H,GAAAtsB,IAAA0kB,EAAA6H,KAoBA21C,EAAAoC,MAAA,WAKA,MAJApC,GAAAzrB,UACAosB,GAAA,KAAAC,GAAA,KACAc,EAAAD,EAAA,MAEAzB,GAEAA,EAAAzrB,MAAA,WACA,QAAA52C,GAAAgjE,EAAA,IAAAA,EAAA,MAAA7iE,GAAA8iE,EAAA,IAAAA,EAAA,IAEAx8D,GAAAyP,OAAAmsD,EAAAz8D,EAAA,MAEA,IAAA88D,KACAr9D,EAAA,YACAwB,EAAA,YACAD,EAAA,YACAsH,EAAA,YACAw2D,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAR,KAAA,6DACA7oD,GAAA+D,GAAA3f,OAAAutD,GAAAD,WACA4X,GAAAtpD,GAAAJ,IACA2pD,GAAAD,GAAA,wBACAtpD,IAAAwpD,IAAAxuD,KAAAjT,UAAA8vC,cAAA,GAAA78B,MAAA,4BAAA48B,GAAA2xB,GAIA3xB,GAAAt3B,MAAA,SAAAJ,GACA,GAAAd,GAAA,GAAApE,MAAAkF,EACA,OAAApZ,OAAAsY,GAAA,KAAAA,GAEAw4B,GAAA5/B,SAAAuxD,GAAAvxD,SACA+L,GAAA0lD,OAAAxqD,GAAA,SAAAG,GACA,UAAAI,IAAA,IAAAxK,KAAA6K,MAAAT,EAAA,OACG,SAAAA,EAAAG,GACHH,EAAA4xC,QAAA5xC,EAAA2wC,UAAA,IAAA/6C,KAAA6K,MAAAN,KACG,SAAAH,GACH,MAAAA,GAAA+E,eAEAJ,GAAA2lD,QAAA3lD,GAAA0lD,OAAA9lE,MACAogB,GAAA2lD,QAAA9pD,IAAAmE,GAAA0lD,OAAA7pD,IAAAjc,MACAogB,GAAA4lD,OAAA1qD,GAAA,SAAAG,GACA,UAAAI,IAAA,IAAAxK,KAAA6K,MAAAT,EAAA,OACG,SAAAA,EAAAG,GACHH,EAAA4xC,QAAA5xC,EAAA2wC,UAAA,IAAA/6C,KAAA6K,MAAAN,KACG,SAAAH,GACH,MAAAA,GAAA8E,eAEAH,GAAA6lD,QAAA7lD,GAAA4lD,OAAAhmE,MACAogB,GAAA6lD,QAAAhqD,IAAAmE,GAAA4lD,OAAA/pD,IAAAjc,MACAogB,GAAA8lD,KAAA5qD,GAAA,SAAAG,GACA,GAAA0qD,GAAA1qD,EAAAsG,oBAAA,EACA,WAAAlG,IAAA,MAAAxK,KAAA6K,MAAAT,EAAA,KAAA0qD,QACG,SAAA1qD,EAAAG,GACHH,EAAA4xC,QAAA5xC,EAAA2wC,UAAA,KAAA/6C,KAAA6K,MAAAN,KACG,SAAAH,GACH,MAAAA,GAAAyE,aAEAE,GAAAgmD,MAAAhmD,GAAA8lD,KAAAlmE,MACAogB,GAAAgmD,MAAAnqD,IAAAmE,GAAA8lD,KAAAjqD,IAAAjc,MACAogB,GAAAimD,MAAA/qD,GAAA,SAAAG,GAGA,MAFAA,GAAA2E,GAAAktC,IAAA7xC,GACAA,EAAA6wC,QAAA,GACA7wC,GACG,SAAAA,EAAAG,GACHH,EAAAwxC,SAAAxxC,EAAAqE,WAAAlE,IACG,SAAAH,GACH,MAAAA,GAAAqE,aAEAM,GAAAd,OAAAc,GAAAimD,MAAArmE,MACAogB,GAAAd,OAAArD,IAAAmE,GAAAimD,MAAApqD,IAAAjc,KAsDA,IAAAq0C,KAAA,oGACAiyB,KAAAlmD,GAAA0lD,OAAA,IAAA1lD,GAAA0lD,OAAA,IAAA1lD,GAAA0lD,OAAA,KAAA1lD,GAAA0lD,OAAA,KAAA1lD,GAAA4lD,OAAA,IAAA5lD,GAAA4lD,OAAA,IAAA5lD,GAAA4lD,OAAA,KAAA5lD,GAAA4lD,OAAA,KAAA5lD,GAAA8lD,KAAA,IAAA9lD,GAAA8lD,KAAA,IAAA9lD,GAAA8lD,KAAA,IAAA9lD,GAAA8lD,KAAA,KAAA9lD,GAAAktC,IAAA,IAAAltC,GAAAktC,IAAA,IAAAltC,GAAAotC,KAAA,IAAAptC,GAAAimD,MAAA,IAAAjmD,GAAAimD,MAAA,IAAAjmD,GAAAk0B,KAAA,IACAiyB,GAAAlqD,GAAAoD,QAAA,eAAA3e,GACA,MAAAA,GAAAwf,qBACG,eAAAxf,GACH,MAAAA,GAAA0f,gBACG,iBAAA1f,GACH,MAAAA,GAAAyf,gBACG,iBAAAzf,GACH,MAAAA,GAAAof,cACG,iBAAApf,GACH,MAAAA,GAAAuc,UAAA,GAAAvc,EAAAmf,aACG,iBAAAnf,GACH,UAAAA,EAAAmf,aACG,cAAAnf,GACH,MAAAA,GAAAgf,cACG,KAAA+G,MACH0tB,IACAv0C,MAAA,SAAA4nB,EAAAqiB,EAAA1uB,GACA,MAAAjU,IAAAtH,MAAAqR,KAAAoH,KAAAmP,EAAArM,MAAA0uB,EAAA1uB,GAAAjR,IAAAkqC,KAEAt4B,MAAA5W,EACAmT,KAAAnT,EAEAghE,IAAAhyB,KAAAl0B,GAAAk0B,KACAl0B,GAAAvgB,MAAA,WACA,MAAAs0C,IAAA7sC,GAAAzH,MAAAC,SAAAwmE,GAAAC,IAEA,IAAAC,IAAAF,GAAAh8D,IAAA,SAAAyC,GACA,OAAAA,EAAA,GAAAkP,IAAAlP,EAAA,MAEA05D,GAAAd,GAAAlmD,QAAA,eAAA3e,GACA,MAAAA,GAAAkrD,wBACG,eAAAlrD,GACH,MAAAA,GAAAqrD,mBACG,iBAAArrD,GACH,MAAAA,GAAAmrD,mBACG,iBAAAnrD,GACH,MAAAA,GAAAirD,iBACG,iBAAAjrD,GACH,MAAAA,GAAA+qD,aAAA,GAAA/qD,EAAA8qD,gBACG,iBAAA9qD,GACH,UAAAA,EAAA8qD,gBACG,cAAA9qD,GACH,MAAAA,GAAAorD,iBACG,KAAArlC,KACH2/C,IAAAlyB,KAAAl0B,GAAAk0B,KAAAr4B,IACAmE,GAAAvgB,MAAAoc,IAAA,WACA,MAAAk4B,IAAA7sC,GAAAzH,MAAAC,SAAA0mE,GAAAC,KAEAn/D,GAAAwyC,KAAA9kC,GAAA,SAAAQ,GACA,MAAAA,GAAAyB,eAEA3P,GAAAo/D,KAAA,SAAAxxD,EAAArI,GACA,MAAAuI,IAAAF,EAAA,mBAAA0/B,GAAA/nC,IAKAvF,GAAAyyC,KAAA,SAAA7kC,EAAArI,GACA,MAAAuI,IAAAF,EAAA,YAAA4/B,GAAAjoC,IAOAvF,GAAAgyC,IAAAtkC,GAAA,SAAAQ,GACA,MAAAA,GAAAmxD,cAEApnE,KAAA+H,MAAAlF,EAAA,GAAAC,EAAA,kBAAAD,KAAAb,KAAA/C,EAAAC,EAAAD,EAAAD,GAAA6D,IAAAwkE,SAAAvkE,IAAA9D,EAAAC,QAAA6D,QHgFMwkE,IACA,SAAStoE,EAAQC,EAASC,GI95ShC,GAAAqoE,GAAAroE,EAAA,IACA,iBAAAqoE,SAAAvoE,EAAAoD,GAAAmlE,EAAA,KAEAroE,GAAA,GAAAqoE,KACAA,GAAAC,SAAAxoE,EAAAC,QAAAsoE,EAAAC,SJo7SMC,IACA,SAASzoE,EAAQC,GK57SvBD,EAAAC,UAEAuC,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,SAGAH,QAAA,KACAG,QAAA,SAGAH,QAAA,IACAG,QAAA,ULo8SM+lE,IACA,SAAS1oE,EAAQC,GMpiTvBD,EAAAC,QAAA,knEN0iTM0oE,IACA,SAAS3oE,EAAQC,EAASC,GO3iThC,GAAA0oE,GAAAC,CACA3oE,GAAA,KACA0oE,EAAA1oE,EAAA,KACA2oE,EAAA3oE,EAAA,KACAF,EAAAC,QAAA2oE,MACA5oE,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAD,YACA6oE,KACA,kBAAA7oE,GAAAC,QAAAD,EAAAC,QAAA6oE,UAAA9oE,EAAAC,QAAA6oE,YAA+F9oE,EAAAC,SAAA8d,SAAA8qD","file":"static/3.27f615a06ccea965c5bb.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 143:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(163);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      show_note: false\n\t    };\n\t  },\n\t  methods: {\n\t    show_methods: function show_methods() {\n\t      this.show_note = !this.show_note;\n\t    },\n\t    create_win_rate_chart: function create_win_rate_chart() {\n\t      var margin = 40;\n\t      var width = 600;\n\t      var height = 360;\n\t      var xScale = _d2.default.scale.linear().domain([0, 80000]).range([margin, width - margin]);\n\t      var yScale = _d2.default.scale.linear().domain([25, 60]).range([height - margin, margin]);\n\t      var xAxis = _d2.default.svg.axis().scale(xScale).orient('bottom').tickSize(2).ticks(6).tickFormat(_d2.default.format('0f'));\n\t      var yAxis = _d2.default.svg.axis().scale(yScale).orient('left').tickSize(4).ticks(4).tickFormat(_d2.default.format('0f'));\n\t      var valueline = _d2.default.svg.line().x(function (d) {\n\t        return xScale(d.mastery);\n\t      }).y(function (d) {\n\t        return yScale(parseInt(d.winRate));\n\t      });\n\t      var winRatesData = __webpack_require__(182);\n\t\n\t      var svg = _d2.default.select('#win_rate_chart_section').append('svg').attr('width', '100%').attr('height', '60%').attr('viewBox', '0 0 ' + width + ' ' + height).attr('class', 'win_rate_chart');\n\t      svg.append('g').attr('transform', 'translate(0, ' + (height - margin) + ')').attr('class', 'axis').call(xAxis);\n\t\n\t      svg.append('g').attr('transform', 'translate(' + margin + ', 0)').attr('class', 'axis').call(yAxis);\n\t\n\t      svg.append('path').attr('class', 'line').attr('d', valueline(winRatesData));\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    this.create_win_rate_chart();\n\t  }\n\t};\n\n/***/ },\n\n/***/ 152:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"#win_rate_chart_section{width:90%;margin:0 auto}svg.win_rate_chart .axis line,svg.win_rate_chart .axis path{fill:none;stroke:#c8c8b4;stroke-width:1;shape-rendering:crispEdges}svg.win_rate_chart .axis text{font-family:proxima-nova;font-size:1em;fill:#c8c8b4}svg.win_rate_chart path{stroke:#a2a516;stroke-width:3;fill:none}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/OverviewMasteryPlateau.vue\"],\"names\":[],\"mappings\":\"AAAA,wBAAwB,UAAU,aAAa,CAAC,4DAA4D,UAAU,eAAe,eAAe,0BAA0B,CAAC,8BAA8B,yBAA2B,cAAc,YAAY,CAAC,wBAAwB,eAAe,eAAe,SAAS,CAAC\",\"file\":\"OverviewMasteryPlateau.vue\",\"sourcesContent\":[\"#win_rate_chart_section{width:90%;margin:0 auto}svg.win_rate_chart .axis path,svg.win_rate_chart .axis line{fill:none;stroke:#c8c8b4;stroke-width:1;shape-rendering:crispEdges}svg.win_rate_chart .axis text{font-family:'proxima-nova';font-size:1em;fill:#c8c8b4}svg.win_rate_chart path{stroke:#A2A516;stroke-width:3;fill:none}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 163:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 167:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(152);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 182:\n/***/ function(module, exports) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"mastery\": 3000,\n\t\t\t\"winRate\": \"33.7\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 4000,\n\t\t\t\"winRate\": \"44.2\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 5000,\n\t\t\t\"winRate\": \"46.2\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 6000,\n\t\t\t\"winRate\": \"47.8\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 7000,\n\t\t\t\"winRate\": \"48.6\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 8000,\n\t\t\t\"winRate\": \"49.1\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 9000,\n\t\t\t\"winRate\": \"49.7\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 10000,\n\t\t\t\"winRate\": \"50.1\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 11000,\n\t\t\t\"winRate\": \"50.4\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 12000,\n\t\t\t\"winRate\": \"50.7\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 14000,\n\t\t\t\"winRate\": \"51.1\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 16000,\n\t\t\t\"winRate\": \"51.4\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 18000,\n\t\t\t\"winRate\": \"51.7\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 20000,\n\t\t\t\"winRate\": \"52.0\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 22000,\n\t\t\t\"winRate\": \"52.1\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 25000,\n\t\t\t\"winRate\": \"52.2\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 35000,\n\t\t\t\"winRate\": \"52.6\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 50000,\n\t\t\t\"winRate\": \"53.0\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 75000,\n\t\t\t\"winRate\": \"53.4\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 100000,\n\t\t\t\"winRate\": \"53.7\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 150000,\n\t\t\t\"winRate\": \"54.0\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 200000,\n\t\t\t\"winRate\": \"54.4\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 250000,\n\t\t\t\"winRate\": \"54.6\"\n\t\t},\n\t\t{\n\t\t\t\"mastery\": 500000,\n\t\t\t\"winRate\": \"54.8\"\n\t\t}\n\t];\n\n/***/ },\n\n/***/ 318:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div><div @click=show_methods() class=implementation_tag><svg width=24px height=24px viewBox=\\\"864 144 24 24\\\" class=implementation_symbol><g stroke=none stroke-width=1 fill=none fill-rule=evenodd transform=\\\"translate(864.000000, 144.000000)\\\"><path d=\\\"M11,17 L13,17 L13,11 L11,11 L11,17 L11,17 Z M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 L12,2 Z M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 L12,20 Z M11,9 L13,9 L13,7 L11,7 L11,9 L11,9 Z\\\" fill-opacity=0.7 fill=#2DAAB7></path></g></svg><p class=methods_tag>Methodology / Implementation Notes</p></div><div v-show=show_note class=implementation_box><svg @click=show_methods() width=14px height=14px viewBox=\\\"5 5 14 14\\\" class=exit_icon><polygon stroke=none fill=rgb(245,245,245) fill-rule=evenodd points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon></svg><h4>Methodology / Implementation Notes</h4><p>Win rate is taken over exclusively ranked games. Surprisingly tricky to implement. At extremely low levels of champion mastery, the win rate is to an extent self-selecting. For example, the win rate for a champion with under 500 points of mastery is ~7%. This isn't because summoners are that bad at that level of mastery but rather because had the summoner won the game, they likely would have achieved over 500 points of mastery and thus not been in that category. I started with 3,000 points of mastery as a good compromise between avoiding a self-selected result yet showing the drastic decline in performance with lower champion mastery.</p><p>Mastery points is also not exact (the sample size for summoners with exactly 20,000 mastery points is low) but bucketed. Bucket sizes ranged from intervals of 1000 points at lower ranks to 10,000 at higher ranks.</p></div><h4 class=overview_question>So higher champion mastery does matter. At what point does win rate plateau? Answer: On average, at around 50,000 mastery points.</h4><div class=overlay_section><h5>WIN RATE BY MASTERY</h5><div id=win_rate_chart_section></div></div></div>\";\n\n/***/ },\n\n/***/ 338:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(167)\n\t__vue_script__ = __webpack_require__(143)\n\t__vue_template__ = __webpack_require__(318)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/3.27f615a06ccea965c5bb.js\n **/","<template lang=\"jade\">\ndiv\n  .implementation_tag(@click=\"show_methods()\")\n    svg.implementation_symbol(width=\"24px\" height=\"24px\" viewBox=\"864 144 24 24\")\n      g(stroke=\"none\", stroke-width=\"1\", fill=\"none\", fill-rule=\"evenodd\", transform=\"translate(864.000000, 144.000000)\")\n        path(d=\"M11,17 L13,17 L13,11 L11,11 L11,17 L11,17 Z M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 L12,2 Z M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 L12,20 Z M11,9 L13,9 L13,7 L11,7 L11,9 L11,9 Z\", fill-opacity=\"0.7\", fill=\"#2DAAB7\")\n    p.methods_tag Methodology / Implementation Notes\n  .implementation_box(v-show=\"show_note\")\n    svg.exit_icon(@click=\"show_methods()\", width=\"14px\", height=\"14px\", viewBox=\"5 5 14 14\")\n      polygon(stroke=\"none\", fill=\"rgb(245,245,245)\", fill-rule=\"evenodd\", points=\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\")\n    h4 Methodology / Implementation Notes\n    p Win rate is taken over exclusively ranked games. Surprisingly tricky to implement. At extremely low levels of champion mastery, the win rate is to an extent self-selecting. For example, the win rate for a champion with under 500 points of mastery is ~7%. This isn't because summoners are that bad at that level of mastery but rather because had the summoner won the game, they likely would have achieved over 500 points of mastery and thus not been in that category. I started with 3,000 points of mastery as a good compromise between avoiding a self-selected result yet showing the drastic decline in performance with lower champion mastery.\n    p Mastery points is also not exact (the sample size for summoners with exactly 20,000 mastery points is low) but bucketed. Bucket sizes ranged from intervals of 1000 points at lower ranks to 10,000 at higher ranks.\n  h4.overview_question So higher champion mastery does matter. At what point does win rate plateau? Answer: On average, at around 50,000 mastery points.\n  .overlay_section\n    h5 WIN RATE BY MASTERY\n    #win_rate_chart_section\n</template>\n\n<script>\nimport d3 from 'd3'\nexport default {\n  data: function () {\n    return {\n      show_note: false\n    }\n  },\n  methods: {\n    show_methods: function () {\n      this.show_note = !this.show_note\n    },\n    create_win_rate_chart: function () {\n      let margin = 40\n      let width = 600\n      let height = 360\n      let xScale = d3.scale.linear()\n                  .domain([0, 80000])\n                  .range([margin, width - margin])\n      let yScale = d3.scale.linear()\n                  .domain([25, 60])\n                  .range([height - margin, margin])\n      let xAxis = d3.svg.axis()\n                  .scale(xScale)\n                  .orient('bottom')\n                  .tickSize(2)\n                  .ticks(6)\n                  .tickFormat(d3.format('0f'))\n      let yAxis = d3.svg.axis()\n                  .scale(yScale)\n                  .orient('left')\n                  .tickSize(4)\n                  .ticks(4)\n                  .tickFormat(d3.format('0f'))\n      let valueline = d3.svg.line()\n      .x(function (d) { return xScale(d.mastery) })\n      .y(function (d) { return yScale(parseInt(d.winRate)) })\n      let winRatesData = require('assets/data/winRatesByMastery.json')\n\n      let svg = d3.select('#win_rate_chart_section').append('svg')\n                  .attr('width', '100%')\n                  .attr('height', '60%')\n                  .attr('viewBox', '0 0 ' + width + ' ' + height)\n                  .attr('class', 'win_rate_chart')\n      svg.append('g')\n      .attr('transform', 'translate(0, ' + (height - margin) + ')')\n      .attr('class', 'axis')\n      .call(xAxis)\n\n      svg.append('g')\n      .attr('transform', 'translate(' + margin + ', 0)')\n      .attr('class', 'axis')\n      .call(yAxis)\n\n      svg.append('path')\n      .attr('class', 'line')\n      .attr('d', valueline(winRatesData))\n    }\n  },\n  ready: function () {\n    this.create_win_rate_chart()\n  }\n}\n</script>\n\n<style lang=\"sass\">\n#win_rate_chart_section\n  width: 90%\n  margin: 0 auto\nsvg.win_rate_chart\n  .axis path, .axis line\n    fill: none\n    stroke: rgb(200,200,180)\n    stroke-width: 1\n    shape-rendering: crispEdges\n  .axis text\n    font-family: 'proxima-nova'\n    font-size: 1em\n    fill: rgb(200,200,180)\n  path\n    stroke: #A2A516\n    stroke-width: 3\n    fill: none\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** OverviewMasteryPlateau.vue?16033452\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#win_rate_chart_section{width:90%;margin:0 auto}svg.win_rate_chart .axis line,svg.win_rate_chart .axis path{fill:none;stroke:#c8c8b4;stroke-width:1;shape-rendering:crispEdges}svg.win_rate_chart .axis text{font-family:proxima-nova;font-size:1em;fill:#c8c8b4}svg.win_rate_chart path{stroke:#a2a516;stroke-width:3;fill:none}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/OverviewMasteryPlateau.vue\"],\"names\":[],\"mappings\":\"AAAA,wBAAwB,UAAU,aAAa,CAAC,4DAA4D,UAAU,eAAe,eAAe,0BAA0B,CAAC,8BAA8B,yBAA2B,cAAc,YAAY,CAAC,wBAAwB,eAAe,eAAe,SAAS,CAAC\",\"file\":\"OverviewMasteryPlateau.vue\",\"sourcesContent\":[\"#win_rate_chart_section{width:90%;margin:0 auto}svg.win_rate_chart .axis path,svg.win_rate_chart .axis line{fill:none;stroke:#c8c8b4;stroke-width:1;shape-rendering:crispEdges}svg.win_rate_chart .axis text{font-family:'proxima-nova';font-size:1em;fill:#c8c8b4}svg.win_rate_chart path{stroke:#A2A516;stroke-width:3;fill:none}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/sass-loader?indentedSyntax&sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/OverviewMasteryPlateau.vue\n ** module id = 152\n ** module chunks = 3\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 163\n ** module chunks = 3\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/sass-loader?indentedSyntax&sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/OverviewMasteryPlateau.vue\n ** module id = 167\n ** module chunks = 3\n **/","module.exports = [\n\t{\n\t\t\"mastery\": 3000,\n\t\t\"winRate\": \"33.7\"\n\t},\n\t{\n\t\t\"mastery\": 4000,\n\t\t\"winRate\": \"44.2\"\n\t},\n\t{\n\t\t\"mastery\": 5000,\n\t\t\"winRate\": \"46.2\"\n\t},\n\t{\n\t\t\"mastery\": 6000,\n\t\t\"winRate\": \"47.8\"\n\t},\n\t{\n\t\t\"mastery\": 7000,\n\t\t\"winRate\": \"48.6\"\n\t},\n\t{\n\t\t\"mastery\": 8000,\n\t\t\"winRate\": \"49.1\"\n\t},\n\t{\n\t\t\"mastery\": 9000,\n\t\t\"winRate\": \"49.7\"\n\t},\n\t{\n\t\t\"mastery\": 10000,\n\t\t\"winRate\": \"50.1\"\n\t},\n\t{\n\t\t\"mastery\": 11000,\n\t\t\"winRate\": \"50.4\"\n\t},\n\t{\n\t\t\"mastery\": 12000,\n\t\t\"winRate\": \"50.7\"\n\t},\n\t{\n\t\t\"mastery\": 14000,\n\t\t\"winRate\": \"51.1\"\n\t},\n\t{\n\t\t\"mastery\": 16000,\n\t\t\"winRate\": \"51.4\"\n\t},\n\t{\n\t\t\"mastery\": 18000,\n\t\t\"winRate\": \"51.7\"\n\t},\n\t{\n\t\t\"mastery\": 20000,\n\t\t\"winRate\": \"52.0\"\n\t},\n\t{\n\t\t\"mastery\": 22000,\n\t\t\"winRate\": \"52.1\"\n\t},\n\t{\n\t\t\"mastery\": 25000,\n\t\t\"winRate\": \"52.2\"\n\t},\n\t{\n\t\t\"mastery\": 35000,\n\t\t\"winRate\": \"52.6\"\n\t},\n\t{\n\t\t\"mastery\": 50000,\n\t\t\"winRate\": \"53.0\"\n\t},\n\t{\n\t\t\"mastery\": 75000,\n\t\t\"winRate\": \"53.4\"\n\t},\n\t{\n\t\t\"mastery\": 100000,\n\t\t\"winRate\": \"53.7\"\n\t},\n\t{\n\t\t\"mastery\": 150000,\n\t\t\"winRate\": \"54.0\"\n\t},\n\t{\n\t\t\"mastery\": 200000,\n\t\t\"winRate\": \"54.4\"\n\t},\n\t{\n\t\t\"mastery\": 250000,\n\t\t\"winRate\": \"54.6\"\n\t},\n\t{\n\t\t\"mastery\": 500000,\n\t\t\"winRate\": \"54.8\"\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/data/winRatesByMastery.json\n ** module id = 182\n ** module chunks = 3\n **/","module.exports = \"<div><div @click=show_methods() class=implementation_tag><svg width=24px height=24px viewBox=\\\"864 144 24 24\\\" class=implementation_symbol><g stroke=none stroke-width=1 fill=none fill-rule=evenodd transform=\\\"translate(864.000000, 144.000000)\\\"><path d=\\\"M11,17 L13,17 L13,11 L11,11 L11,17 L11,17 Z M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 L12,2 Z M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 L12,20 Z M11,9 L13,9 L13,7 L11,7 L11,9 L11,9 Z\\\" fill-opacity=0.7 fill=#2DAAB7></path></g></svg><p class=methods_tag>Methodology / Implementation Notes</p></div><div v-show=show_note class=implementation_box><svg @click=show_methods() width=14px height=14px viewBox=\\\"5 5 14 14\\\" class=exit_icon><polygon stroke=none fill=rgb(245,245,245) fill-rule=evenodd points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon></svg><h4>Methodology / Implementation Notes</h4><p>Win rate is taken over exclusively ranked games. Surprisingly tricky to implement. At extremely low levels of champion mastery, the win rate is to an extent self-selecting. For example, the win rate for a champion with under 500 points of mastery is ~7%. This isn't because summoners are that bad at that level of mastery but rather because had the summoner won the game, they likely would have achieved over 500 points of mastery and thus not been in that category. I started with 3,000 points of mastery as a good compromise between avoiding a self-selected result yet showing the drastic decline in performance with lower champion mastery.</p><p>Mastery points is also not exact (the sample size for summoners with exactly 20,000 mastery points is low) but bucketed. Bucket sizes ranged from intervals of 1000 points at lower ranks to 10,000 at higher ranks.</p></div><h4 class=overview_question>So higher champion mastery does matter. At what point does win rate plateau? Answer: On average, at around 50,000 mastery points.</h4><div class=overlay_section><h5>WIN RATE BY MASTERY</h5><div id=win_rate_chart_section></div></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-loader.js?raw&engine=jade!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/OverviewMasteryPlateau.vue\n ** module id = 318\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!sass-loader?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OverviewMasteryPlateau.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./OverviewMasteryPlateau.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-loader.js?raw&engine=jade!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./OverviewMasteryPlateau.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/OverviewMasteryPlateau.vue\n ** module id = 338\n ** module chunks = 3\n **/"],"sourceRoot":""}